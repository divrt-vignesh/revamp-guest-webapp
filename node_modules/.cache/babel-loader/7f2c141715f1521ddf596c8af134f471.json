{"remainingRequest":"/home/vignesh/DIVRT/Revamp/node_modules/babel-loader/lib/index.js!/home/vignesh/DIVRT/Revamp/node_modules/eslint-loader/index.js??ref--13-0!/home/vignesh/DIVRT/Revamp/src/apiHelper.js","dependencies":[{"path":"/home/vignesh/DIVRT/Revamp/src/apiHelper.js","mtime":1688551955703},{"path":"/home/vignesh/DIVRT/Revamp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/Revamp/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/vignesh/DIVRT/Revamp/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/vignesh/DIVRT/Revamp/src/apiHelper.js"],"names":["axios","showAlert","msg","alertDiv","document","createElement","innerHTML","style","position","top","right","border","padding","background","zIndex","body","appendChild","setTimeout","remove","API","create","baseURL","process","env","VUE_APP_API_URL","withCredentials","headers","interceptors","request","use","error","Promise","reject","response","data","message","window","location","hash","includes","localStorage","getItem","setItem","replace","processRequest","reqType","url","apiGetRequest","apiGetResponse","console","log","apiPostRequest","apiPostResponse","apiPutRequest","apiPutResponse","apiDeleteRequest","apiDeleteResponse","get","params","post","delete","put"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\n/**\n * @function showAlert show/hide the alert \"Session Close\" \n * @param {*} msg is the message that needs to be shown\n */\nfunction showAlert(msg){\n  var alertDiv = document.createElement(\"div\");\n  alertDiv.innerHTML = '<p>'+ msg + '</p>';\n  alertDiv.style.position = 'absolute';\n  alertDiv.style.top = '5%';\n  alertDiv.style.right = '50%';\n  alertDiv.style.border='1px solid grey';\n  alertDiv.style.padding=\"20px 40px\";\n  alertDiv.style.background=\"red\";\n  alertDiv.style.zIndex=\"99999\";\n  document.body.appendChild(alertDiv);   \n  setTimeout(() => {\n    alertDiv.remove();\n }, 5000);\n}\n\n/**\n * Create axios  instance\n */\nconst API = axios.create({\n  baseURL: process.env.VUE_APP_API_URL , //'https://meghak2.divrt.co/api/v1/',\n  // baseURL: 'http://localhost:3000',\n  withCredentials: true,\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  }\n});\n/** Axios interceptors:  request, response interceptors used to manage the flow of the request and response data. Added logic to handle response for session status. */\nAPI.interceptors.request.use(\n  request => {\n    return request;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\nAPI.interceptors.response.use(\n  response => {\n    /** sesion check - cases */\n    if (response?.data?.message && response.data.message == \"Session expired\" && !window.location.hash.includes('login') && !window.location.hash.includes('forgotpassword')) {\n      if (!localStorage.getItem('divrtToken') == \"\") {\n        // alert(\"Session Expired\");  \n        showAlert(\"Session Expired\")\n        localStorage.setItem('divrtToken', \"\");\n        window.location.replace(\"/\")\n      }\n\n    }\n    return response;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\nconst processRequest = async (reqType, url, data) => {\n  switch (reqType) {\n    case 'GET':\n      try {\n        var apiGetResponse = await apiGetRequest(url, data);\n        return apiGetResponse;\n      } catch (error) {\n        console.log(error);\n      }\n      break;\n    case 'POST':\n      try {\n        var apiPostResponse = await apiPostRequest(url, data);\n        return apiPostResponse;\n      } catch (error) {\n        console.log(error);\n      }\n      break;\n    case 'PUT':\n      try {\n        var apiPutResponse = await apiPutRequest(url, data);\n        return apiPutResponse;\n      } catch (error) {\n        console.log(error);\n      }\n      break;\n    case 'DELETE':\n      try {\n        var apiDeleteResponse = await apiDeleteRequest(url, data);\n        return apiDeleteResponse;\n      } catch (error) {\n        console.log(error);\n      }\n      break;\n  }\n};\nconst apiGetRequest = async (url, data) => {\n  try {\n    return API.get(url, {params:data})\n  } catch (error) {\n    return error\n  }\n};\n\nconst apiPostRequest = async (url, data) => {\n  try {\n    return API.post(url, data)\n  } catch (error) {\n    return error\n  }\n};\n\nconst apiDeleteRequest = async (url, data) => {\n  try {\n    console.log(data)\n    return API.delete(url, {data:data})\n  } catch (error) {\n    return error\n  }\n};\n\nconst apiPutRequest = async (url, data) => {\n  try {\n    return API.put(url, data)\n  } catch (error) {\n    return error\n  }\n};\n\nexport default processRequest;"]}]}