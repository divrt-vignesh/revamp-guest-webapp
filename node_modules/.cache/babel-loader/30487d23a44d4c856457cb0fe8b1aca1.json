{"remainingRequest":"/home/vignesh/DIVRT/Revamp/node_modules/babel-loader/lib/index.js!/home/vignesh/DIVRT/Revamp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vignesh/DIVRT/Revamp/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vignesh/DIVRT/Revamp/src/uiComponents/SpherePhoneNumberInput/VuePhoneNumberInput/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vignesh/DIVRT/Revamp/src/uiComponents/SpherePhoneNumberInput/VuePhoneNumberInput/index.vue","mtime":1688551741180},{"path":"/home/vignesh/DIVRT/Revamp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/Revamp/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/vignesh/DIVRT/Revamp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/Revamp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div\n    :id=\"id\"\n    :class=\"[{ 'dark': dark }, size]\"\n    class=\"vue-phone-number-input flex\"\n  >\n    <div\n      v-if=\"!noCountrySelector\"\n      class=\"select-country-container\"\n    >\n      <CountrySelector\n        :id=\"`${uniqueId}_country_selector`\"\n        ref=\"CountrySelector\"\n        v-model=\"countryCode\"\n        :items=\"codesCountries\"\n        :countries-height=\"countriesHeight\"\n        :error=\"shouldChooseCountry\"\n        :hint=\"shouldChooseCountry ? t.countrySelectorError : null\"\n        :disabled=\"disabled\"\n        :valid=\"isValid && !noValidatorState\"\n        :preferred-countries=\"preferredCountries\"\n        :only-countries=\"onlyCountries\"\n        :ignored-countries=\"ignoredCountries\"\n        :label=\"t.countrySelectorLabel\"\n        :no-flags=\"noFlags\"\n        :show-code-on-list=\"showCodeOnList\"\n        :size=\"size\"\n        :dark=\"dark\"\n        :theme=\"theme\"\n        class=\"input-country-selector\"\n      >\n        <slot\n          slot=\"arrow\"\n          name=\"arrow\"\n        />\n      </CountrySelector>\n    </div>\n    <div class=\"flex-1\">\n      <InputTel\n        :id=\"`${uniqueId}_phone_number`\"\n        ref=\"PhoneNumberInput\"\n        v-model=\"phoneNumber\"\n        :label=\"t.phoneNumberLabel\"\n        :hint=\"hintValue\"\n        :dark=\"dark\"\n        :disabled=\"disabled\"\n        :size=\"size\"\n        :error=\"error\"\n        :valid=\"isValid && !noValidatorState\"\n        :required=\"required\"\n        :no-country-selector=\"noCountrySelector\"\n        v-bind=\"$attrs\"\n        :theme=\"theme\"\n        class=\"input-phone-number\"\n        @keydown=\"(e) => { lastKeyPressed = e.keyCode }\"\n        @focus=\"$emit('phone-number-focused')\"\n        @blur=\"$emit('phone-number-blur')\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\n  import { countries, countriesIso } from './assets/js/phoneCodeCountries.js'\n  import examples from 'libphonenumber-js/examples.mobile.json'\n  import { parsePhoneNumberFromString, AsYouType, getExampleNumber } from 'libphonenumber-js'\n  import InputTel from './InputTel'\n  import CountrySelector from './CountrySelector'\n  import locales from './assets/locales'\n  import { hexToRgba, isColorName, colorNameToHex } from 'color-transformer-ui'\n\n  const getShadowColor = (color) => {\n    return isColorName(color) ? hexToRgba(colorNameToHex(color), 0.7) : hexToRgba(color, 0.7)\n  }\n\n  const browserLocale = () => {\n    if (!window) return null\n    const browserLocale = window.navigator.userLanguage || window.navigator.language\n    let locale = browserLocale ? browserLocale.substr(3, 4).toUpperCase() : null\n    if (locale === '') locale = browserLocale.substr(0, 2).toUpperCase()\n    return locale\n  }\n\n  const isCountryAvailable = (locale) => {\n    return countriesIso.includes(locale)\n  }\n\n  export default {\n    name: 'VuePhoneNumberInput',\n    components: {\n      InputTel,\n      CountrySelector\n    },\n    props: {\n      value: { type: String, default: null },\n      id: { type: String, default: 'MazPhoneNumberInput' },\n      color: { type: String, default: 'dodgerblue' },\n      validColor: { type: String, default: 'yellowgreen' },\n      errorColor: { type: String, default: 'orangered' },\n      darkColor: { type: String, default: '#424242' },\n      disabled: { type: Boolean, default: false },\n      defaultCountryCode: { type: String, default: null },\n      size: { type: String, default: null },\n      preferredCountries: { type: Array, default: null },\n      onlyCountries: { type: Array, default: null },\n      ignoredCountries: { type: Array, default: Array },\n      translations: { type: Object, default: null },\n      noValidatorState: { type: Boolean, default: false },\n      noFlags: { type: Boolean, default: false },\n      error: { type: Boolean, default: false },\n      noExample: { type: Boolean, default: false },\n      required: { type: Boolean, default: false },\n      countriesHeight: { type: Number, default: 30 },\n      noUseBrowserLocale: { type: Boolean, default: false },\n      fetchCountry: { type: Boolean, default: false },\n      noCountrySelector: { type: Boolean, default: false },\n      showCodeOnList: { type: Boolean, default: false },\n      dark: { type: Boolean, default: false },\n      borderRadius: { type: Number, default: 4 }\n    },\n    data () {\n      return {\n        results: {},\n        userLocale: this.defaultCountryCode,\n        lastKeyPressed: null\n      }\n    },\n    computed: {\n      uniqueId () {\n        return `${this.id}-${this._uid}`\n      },\n      t () {\n        return {\n          ...locales,\n          ...this.translations\n        }\n      },\n      codesCountries () {\n        return countries\n      },\n      countryCode: {\n        get () {\n          return this.userLocale || this.results.countryCode\n        },\n        set (newCountry) {\n          this.setLocale(newCountry)\n          this.$refs.PhoneNumberInput.$el.querySelector('input').focus()\n        }\n      },\n      phoneNumber: {\n        get () {\n          return this.value\n        },\n        set (newPhone) {\n          this.emitValues({ countryCode: this.countryCode, phoneNumber: newPhone })\n        }\n      },\n      shouldChooseCountry () {\n        return !this.countryCode && !!this.phoneNumber\n      },\n      phoneFormatted () {\n        return this.results.formatInternational\n      },\n      isValid () {\n        return this.results.isValid\n      },\n      phoneNumberExample () {\n        const phoneNumber = this.countryCode ? getExampleNumber(this.countryCode, examples) : null\n        return phoneNumber ? phoneNumber.formatNational() : null\n      },\n      hasEmptyPhone () {\n        return this.phoneNumber === '' || this.phoneNumber === null\n      },\n      hintValue () {\n        return  this.noExample || !this.phoneNumberExample\n          ? null\n          : this.hasEmptyPhone || this.isValid ? null : `${this.t.example} ${this.phoneNumberExample}`\n      },\n      theme () {\n        return {\n          colorValue: this.color,\n          color: { color: this.color },\n          textColor: { color: '#747474' },\n          textDarkColor: { color: 'rgba(255, 255, 255, 0.7)' },\n          validColor: { color: this.validColor },\n          errorColor: { color: this.errorColor },\n          darkColor: { color: this.darkColor },\n          bgColor: { backgroundColor: this.color },\n          bgValidColor: { backgroundColor: this.validColor },\n          bgErrorColor: { backgroundColor: this.errorColor },\n          bgDarkColor: { backgroundColor: this.darkColor },\n          borderColor: { borderColor: this.color },\n          borderValidColor: { borderColor: this.validColor },\n          borderErrorColor: { borderColor: this.errorColor },\n          borderDarkColor: { borderColor: this.darkColor },\n          boxShadowColor: { boxShadow: `0 0 0 0.125rem ${getShadowColor(this.color)}` },\n          boxShadowValid: { boxShadow: `0 0 0 0.125rem ${getShadowColor(this.validColor)}` },\n          boxShadowError: { boxShadow: `0 0 0 0.125rem ${getShadowColor(this.errorColor)}` },\n          borderRadius: { borderRadius: `${this.borderRadius}px` },\n          borderLeftRadius: { borderTopLeftRadius: `${this.borderRadius}px`, borderBottomLeftRadius: `${this.borderRadius}px` },\n          borderRightRadius: { borderTopRightRadius: `${this.borderRadius}px`, borderBottomRightRadius: `${this.borderRadius}px` }\n        }\n      }\n    },\n    watch: {\n      defaultCountryCode (newValue, oldValue) {\n        if (newValue === oldValue) return\n        this.setLocale(newValue)\n      },\n      phoneNumber: {\n        handler (newValue, oldValue) {\n          // init component (countryCode & phoneNumber) if phone number is provide\n          if (newValue && (newValue !== oldValue)) {\n            const phoneNumber = parsePhoneNumberFromString(newValue)\n            if (phoneNumber) {\n              this.emitValues({\n                phoneNumber: phoneNumber.nationalNumber,\n                countryCode: this.countryCode ? this.countryCode : phoneNumber.country\n              })\n            }\n          }\n        },\n        immediate: true\n      }\n    },\n    async mounted () {\n      try {\n        if (this.phoneNumber && this.defaultCountryCode) this.emitValues({countryCode: this.defaultCountryCode, phoneNumber: this.phoneNumber})\n\n        if (this.defaultCountryCode && this.fetchCountry) {\n          throw new Error('MazPhoneNumberInput: Do not use \"fetch-country\" and \"default-country-code\" options in the same time')\n        }\n\n        if (this.defaultCountryCode && this.noUseBrowserLocale) {\n          throw new Error('MazPhoneNumberInput: If you use a \"default-country-code\", do not use \"no-use-browser-locale\" options')\n        }\n\n        if (this.defaultCountryCode) return\n\n        this.fetchCountry\n          ? this.fetchCountryCode()\n          : !this.noUseBrowserLocale\n            ? this.setLocale(browserLocale())\n            : null\n      } catch (err) {\n        throw new Error(err)\n      }\n    },\n    methods: {\n      getAsYouTypeFormat (payload) {\n        const { countryCode, phoneNumber } = payload\n        const asYouType = new AsYouType(countryCode)\n        return phoneNumber ? asYouType.input(phoneNumber) : null\n      },\n      getParsePhoneNumberFromString ({ phoneNumber, countryCode }) {\n        const parsing = phoneNumber && countryCode ? parsePhoneNumberFromString(phoneNumber, countryCode) : null\n        return {\n          countryCode: countryCode,\n          isValid: false,\n          ...(phoneNumber && (phoneNumber !== '')\n            ? { phoneNumber : phoneNumber }\n            : null\n          ),\n          ...(parsing\n            ? {\n              countryCallingCode: parsing.countryCallingCode,\n              formattedNumber: parsing.number,\n              nationalNumber: parsing.nationalNumber,\n              isValid: parsing.isValid(),\n              type: parsing.getType(),\n              formatInternational: parsing.formatInternational(),\n              formatNational: parsing.formatNational(),\n              uri: parsing.getURI(),\n              e164: parsing.format('E.164')\n            }\n            : null\n          )\n        }\n      },\n      emitValues (payload) {\n        let asYouType = this.getAsYouTypeFormat(payload)\n        const backSpacePressed = this.lastKeyPressed === 8\n\n        this.$nextTick(() => {\n          const lastCharacOfPhoneNumber = this.phoneNumber ? this.phoneNumber.trim().slice(-1) : false\n          if (backSpacePressed && lastCharacOfPhoneNumber && (lastCharacOfPhoneNumber.slice(-1) === ')')) {\n            asYouType = this.phoneNumber.slice(0, -2)\n            payload.phoneNumber = this.phoneNumber.slice(0, -2)\n          }\n\n          this.results = this.getParsePhoneNumberFromString(payload)\n          this.$emit('update', this.results)\n          this.$emit('input', asYouType)\n        })\n      },\n      setLocale (locale) {\n        const countryAvailable = isCountryAvailable(locale)\n        if (countryAvailable && locale) {\n          this.userLocale = countryAvailable ? locale : null\n          this.emitValues({countryCode: locale, phoneNumber: this.phoneNumber})\n        } else if (!countryAvailable && locale) {\n          window.console.warn(`The locale ${locale} is not available`)\n        }\n      },\n      async fetchCountryCode () {\n        try {\n          const response  = await fetch('https://ip2c.org/s')\n          const responseText = await response.text()\n          const result = (responseText || '').toString()\n          if (result && result[0] === '1') this.setLocale(result.substr(2, 2))\n        } catch (err) {\n          throw new Error(err)\n        }\n      }\n    }\n  }\n</script>\n<style lang=\"scss\" scoped>\n  @import 'style-helpers';\n\n  .vue-phone-number-input {\n    .select-country-container {\n      flex: 0 0 120px;\n      width: 120px;\n      min-width: 120px;\n      max-width: 120px;\n    }\n\n    &.sm .select-country-container {\n      flex: 0 0 110px;\n      width: 110px;\n      min-width: 110px;\n      max-width: 110px;\n    }\n\n    &.lg .select-country-container {\n      flex: 0 0 130px;\n      width: 130px;\n      min-width: 130px;\n      max-width: 130px;\n    }\n  }\n</style>\n"],"sourceRoot":"src/uiComponents/SpherePhoneNumberInput/VuePhoneNumberInput"}]}