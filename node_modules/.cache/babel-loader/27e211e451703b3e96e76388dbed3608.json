{"remainingRequest":"/home/vignesh/DIVRT/guest-webapp/node_modules/babel-loader/lib/index.js!/home/vignesh/DIVRT/guest-webapp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vignesh/DIVRT/guest-webapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vignesh/DIVRT/guest-webapp/src/views/GooglePay.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vignesh/DIVRT/guest-webapp/src/views/GooglePay.vue","mtime":1688372853737},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["GooglePay.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <form id=\"payment-form\">\n      <!-- <div id=\"apple-pay-button\" style=\"-apple-pay-button-type: continue !important\"></div> -->\n      <!-- <div id=\"card-container\"></div> -->\n      <div id=\"google-pay-button\" v-show=\"!gPayBtnLoading\"></div>\n      <v-btn id=\"google-pay-button\" color=\"black\" elevation=\"20\" rounded :loading=\"gPayBtnLoading\" v-show=\"gPayBtnLoading\"\n        style=\"font-size: 18px; font-weight: 700;text-transform: none;\" :width=\"width\" :height=\"height\"></v-btn>\n      <!-- <button id=\"card-button\" type=\"button\">Pay $1.00</button> -->\n    </form>\n    <!-- <div id=\"payment-status-container\"></div> -->\n    <v-dialog v-model=\"alertDialog\" persistent max-width=\"290\">\n      <v-card class=\"pa-0\">\n        <v-card-title class=\"justify-center\" style=\"position: relative\">\n          <v-icon x-large color=\"green accent-2\">{{ alertIcon }}</v-icon>\n        </v-card-title>\n        <v-card-text class=\"text-center mt-5\">\n          <span style=\"font-size: 20px\">{{ alertMsg }}</span>\n        </v-card-text>\n        <v-card-actions class=\"text-center pb-6\">\n          <v-container pa-0 fluid>\n            <v-row no-gutters>\n              <v-col cols=\"12\">\n                <v-btn rounded block elevation=\"0\" class=\"white--text exit_dialog_btn\"\n                  @click=\"closeAlertDialog()\">Close</v-btn>\n              </v-col>\n            </v-row>\n          </v-container>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n  \n<script>\nimport APIHelper from \"../apiHelper\";\n// import loggerHelper from \"../loggerHelper\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"GooglePay\",\n  data: () => ({\n    gPayBtnLoading: false,\n    appId: 'sandbox-sq0idb-Jyr1fMe8q1HdUDQXK-DQNg',\n    locationId: 'L8R19FS9KH7FQ',\n    payments: null,\n    googlePay: null,\n    alertDialog: false,\n    alertMsg: \"\",\n    alertIcon: \"mdi-check-circle\"\n  }),\n  props: {\n    width: {\n      type: String,\n      default: () => \"100%\",\n    },\n    height: {\n      type: String,\n      default: () => \"50px\",\n    },\n    iosDevice: {\n      type: Boolean,\n      default: () => {\n        return false;\n      }\n    }\n  },\n  computed: {\n    ...mapGetters({\n      bookingId: \"getterBookingId\",\n      bookingDetails: \"getterBookingDetails\",\n    }),\n  },\n  async mounted() {\n    this.gPayBtnLoading = true;\n    if (!window.Square) {\n      this.gPayBtnLoading = false;\n      throw new Error('Square.js failed to load properly');\n    }\n\n    try {\n      this.payments = window.Square.payments(\"sandbox-sq0idb-Jyr1fMe8q1HdUDQXK-DQNg\", \"L8R19FS9KH7FQ\");\n\n    } catch {\n      this.gPayBtnLoading = false;\n      return;\n    }\n\n    let card;\n    try {\n      card = await this.initializeCard(this.payments);\n    } catch (e) {\n      this.gPayBtnLoading = false;\n      console.error('Initializing Card failed', e);\n      return;\n    }\n    console.log(card);\n    let googlePay;\n    try {\n      googlePay = await this.initializeGooglePay(this.payments);\n    } catch (e) {\n      this.gPayBtnLoading = false;\n      console.error('Initializing Google Pay failed', e);\n      // There are a number of reason why Google Pay may not be supported\n      // (e.g. Browser Support, Device Support, Account). Therefore you should handle\n      // initialization failures, while still loading other applicable payment methods.\n    }\n    if (googlePay) {\n      var self = this;\n      const googlePayButton = document.getElementById('google-pay-button');\n      googlePayButton.addEventListener('click', async function (event) {\n        await self.handlePaymentMethodSubmission(event, googlePay);\n      });\n      this.gPayBtnLoading = false;\n    }\n\n  },\n  methods: {\n    async closeAlertDialog() {\n      this.alertDialog = false;\n      window.location.reload()\n      await this.getBookingState();\n    },\n    async handlePaymentMethodSubmission(event, paymentMethod) {\n      var self = this;\n      // const cardButton = document.getElementById(\"card-button\");\n      this.gPayBtnLoading = true;\n      try {\n        // disable the submit button as we await tokenization and make a payment request.\n\n        // cardButton.disabled = true;\n        const tokenResult = await self.tokenize(paymentMethod);\n        let verfiedToken = await self.verifyBuyer(this.payments, tokenResult);\n        await self.addCard(tokenResult, verfiedToken);\n        // const paymentResults = await self.createPayment(token);\n        // console.log(\"paymentResults\", paymentResults);\n        // console.log(self)\n        // self.displayPaymentResults(\"SUCCESS\");\n\n        // console.debug(\"Payment Success\", paymentResults);\n      } catch (e) {\n        this.gPayBtnLoading = false\n        // cardButton.disabled = false;\n        self.displayPaymentResults(\"FAILURE\");\n        console.error(e.message);\n      }\n    },\n    async addCard(tokenResult, verfiedToken) {\n      let cardData = {\n        userDevice: \"2\",\n        orderType: \"3\",\n        entry: [\n          {\n            locationCode: this.bookingDetails.zone.locationCode,\n            startAt: this.bookingDetails.booking.startAt,\n            quantity: \"1\",\n          },\n        ],\n        paymentType: \"GOOGLE_PAY\",\n        billingDetails: tokenResult?.details?.billing,\n        verification_token: verfiedToken,\n        source_id: tokenResult.token,\n        phoneNumber: \"+\" + this.bookingDetails?.user?.contact,\n        email: tokenResult?.details?.shipping?.contact?.email || \"\",\n      };\n\n      try {\n        var addCard = await APIHelper(\n          \"POST\",\n          \"/api/v1/payment/addCard/\" + this.bookingId,\n          cardData\n        );\n        if (addCard?.data?.status == false) {\n          this.gPayBtnLoading = false;\n          this.alertMsg = addCard?.data?.message || \"Error in authorizing the payment\"\n          this.alertIcon = \"mdi-alert-outline\"\n          this.alertDialog = true;\n        } else {\n          this.gPayBtnLoading = false;\n          await this.getBookingState();\n        }\n      } catch (error) {\n        this.gPayBtnLoading = false;\n        console.log(error);\n      }\n    },\n    async getBookingState() {\n      if (this.bookingId != null) {\n        try {\n          var bDetails = await APIHelper(\n            \"GET\",\n            \"/api/v1/booking/config/\" + this.bookingId\n          );\n          this.$store.commit(\n            \"SET_BOOKING_DETAILS\",\n            bDetails.data?.data ? bDetails.data.data : null\n          );\n          let bookingState = bDetails.data?.data?.booking?.state\n            ? bDetails.data.data.booking.state\n            : null;\n\n          if (bookingState == 8 || bookingState == 10 || bookingState == 11) {\n            this.$router.replace({ path: \"/checkout\" });\n          } else if (bookingState == 2) {\n            this.$router.replace({ path: \"/checkedin\" });\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    },\n    async verifyBuyer(payments, tokenResult) {\n      const verificationDetails = {\n        billingContact: tokenResult?.details?.billing,\n        amount: \"1\",\n        currencyCode: \"USD\",\n        intent: \"CHARGE\",\n      };\n      const verificationResults = await payments.verifyBuyer(\n        tokenResult?.token,\n        verificationDetails\n      );\n      return verificationResults.token;\n    },\n    async initializeCard(payments) {\n      const card = await payments.card();\n      // await card.attach(\"#card-container\");\n\n      return card;\n    },\n\n    buildPaymentRequest(payments) {\n      return payments.paymentRequest({\n        countryCode: \"US\",\n        currencyCode: \"USD\",\n        requestBillingContact: true,\n        requestShippingContact: true,\n        totalPriceStatus: 'ESTIMATED',\n        total: {\n          amount: \"0.00\",\n          label: \"Total\",\n          pending: true,\n        },\n      });\n    },\n\n    async initializeGooglePay(payments) {\n      const paymentRequest = this.buildPaymentRequest(payments);\n      const googlePay = await payments.googlePay(paymentRequest);\n      // Note: You do not need to `attach` googlePay.\n      const googlePayButtonOptions = {\n        buttonColor: 'default',\n        buttonType: 'pay',\n\n      }\n      await googlePay.attach('#google-pay-button', googlePayButtonOptions)\n      return googlePay;\n    },\n\n    async createPayment(token) {\n      let locationId = this.locationId;\n      const body = JSON.stringify({\n        locationId,\n        sourceId: token,\n      });\n\n      const paymentResponse = await fetch(\"/payment\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body,\n      });\n\n      if (paymentResponse.ok) {\n        return paymentResponse.json();\n      }\n\n      const errorBody = await paymentResponse.text();\n      throw new Error(errorBody);\n    },\n\n    // Change the parameter to 'paymentMethod'\n    async tokenize(paymentMethod) {\n      const tokenResult = await paymentMethod.tokenize();\n      if (tokenResult.status === \"OK\") {\n        return tokenResult;\n      } else {\n        let errorMessage = `Tokenization failed with status: ${tokenResult.status}`;\n        if (tokenResult.errors) {\n          errorMessage += ` and errors: ${JSON.stringify(tokenResult.errors)}`;\n        }\n\n        throw new Error(errorMessage);\n      }\n    },\n\n    // status is either SUCCESS or FAILURE;\n    displayPaymentResults(status) {\n      console.log(\"displayPaymentResults ==> status\", status);\n      // const statusContainer = document.getElementById(\n      //   \"payment-status-container\"\n      // );\n      // if (status === \"SUCCESS\") {\n      //   statusContainer.classList.remove(\"is-failure\");\n      //   statusContainer.classList.add(\"is-success\");\n      // } else {\n      //   statusContainer.classList.remove(\"is-success\");\n      //   statusContainer.classList.add(\"is-failure\");\n      // }\n\n      // statusContainer.style.visibility = \"visible\";\n    },\n  },\n};\n</script>\n<style lang=\"less\">\n#apple-pay-button {\n  height: 40px !important;\n  width: 82% !important;\n  display: inline-block;\n  -webkit-appearance: -apple-pay-button;\n  -apple-pay-button-style: black;\n}\n\n#payment-form {\n  max-width: 550px;\n  min-width: 300px;\n  margin: 15px auto;\n}\n\n.buyer-inputs {\n  display: flex;\n  gap: 20px;\n  justify-content: space-between;\n  border: none;\n  margin: 0;\n  padding: 0;\n}\n\n#card-container {\n  margin-top: 45px;\n  /* this height depends on the size of the container element */\n  /* We transition from a single row to double row at 485px */\n  /* Settting this min-height minimizes the impact of the card form loading */\n  min-height: 90px;\n}\n\n#gift-card-container {\n  margin-top: 45px;\n  min-height: 90px;\n}\n\n@media screen and (max-width: 500px) {\n  #card-container {\n    min-height: 140px;\n  }\n}\n\n#ach-button {\n  margin-top: 20px;\n}\n\n#landing-page-layout {\n  width: 80%;\n  margin: 150px auto;\n  max-width: 1000px;\n}\n\n#its-working {\n  color: #737373;\n}\n\n#example-container {\n  width: 100%;\n  border: 1px solid #b3b3b3;\n  padding: 48px;\n  margin: 32px 0;\n  border-radius: 12px;\n}\n\n#example-list {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n}\n\n#customer-input {\n  margin-bottom: 40px;\n}\n\n#card-input {\n  margin-top: 0;\n  margin-bottom: 40px;\n}\n\n.gpay-button {\n  width: 100% !important;\n  height: 43px !important;\n  z-index: 20 !important;\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19) !important;\n  border-radius: 30px !important;\n}\n\n// h3 {\n//   margin: 0;\n// }\n\n// p {\n//   line-height: 24px;\n// }\n\n// label {\n//   font-size: 12px;\n//   width: 100%;\n// }\n\n// input {\n//   padding: 12px;\n//   width: 100%;\n//   border-radius: 5px;\n//   border-width: 1px;\n//   margin-top: 20px;\n//   font-size: 16px;\n//   border: 1px solid rgba(0, 0, 0, 0.15);\n// }\n\n// input:focus {\n//   border: 1px solid #006aff;\n// }\n\n// button {\n//   color: #ffffff;\n//   background-color: #006aff;\n//   border-radius: 5px;\n//   cursor: pointer;\n//   border-style: none;\n//   user-select: none;\n//   outline: none;\n//   font-size: 16px;\n//   font-weight: 500;\n//   line-height: 24px;\n//   padding: 12px;\n//   width: 100%;\n//   box-shadow: 1px;\n// }\n\n// button:active {\n//   background-color: rgb(0, 85, 204);\n// }\n\n// button:disabled {\n//   background-color: rgba(0, 0, 0, 0.05);\n//   color: rgba(0, 0, 0, 0.3);\n// }\n\n#payment-status-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid rgba(0, 0, 0, 0.05);\n  box-sizing: border-box;\n  border-radius: 50px;\n  margin: 0 auto;\n  width: 225px;\n  height: 48px;\n  visibility: hidden;\n}\n\n#payment-status-container.missing-credentials {\n  width: 350px;\n}\n\n#payment-status-container.is-success:before {\n  content: \"\";\n  background-color: #00b23b;\n  width: 16px;\n  height: 16px;\n  margin-right: 16px;\n  -webkit-mask: url(\"data:image/svg+xml,%3Csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16ZM11.7071 6.70711C12.0968 6.31744 12.0978 5.68597 11.7093 5.29509C11.3208 4.90422 10.6894 4.90128 10.2973 5.28852L11 6C10.2973 5.28852 10.2973 5.28853 10.2973 5.28856L10.2971 5.28866L10.2967 5.28908L10.2951 5.29071L10.2886 5.29714L10.2632 5.32224L10.166 5.41826L9.81199 5.76861C9.51475 6.06294 9.10795 6.46627 8.66977 6.90213C8.11075 7.4582 7.49643 8.07141 6.99329 8.57908L5.70711 7.29289C5.31658 6.90237 4.68342 6.90237 4.29289 7.29289C3.90237 7.68342 3.90237 8.31658 4.29289 8.70711L6.29289 10.7071C6.68342 11.0976 7.31658 11.0976 7.70711 10.7071L11.7071 6.70711Z' fill='black' fill-opacity='0.9'/%3E%3C/svg%3E\");\n  mask: url(\"data:image/svg+xml,%3Csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16ZM11.7071 6.70711C12.0968 6.31744 12.0978 5.68597 11.7093 5.29509C11.3208 4.90422 10.6894 4.90128 10.2973 5.28852L11 6C10.2973 5.28852 10.2973 5.28853 10.2973 5.28856L10.2971 5.28866L10.2967 5.28908L10.2951 5.29071L10.2886 5.29714L10.2632 5.32224L10.166 5.41826L9.81199 5.76861C9.51475 6.06294 9.10795 6.46627 8.66977 6.90213C8.11075 7.4582 7.49643 8.07141 6.99329 8.57908L5.70711 7.29289C5.31658 6.90237 4.68342 6.90237 4.29289 7.29289C3.90237 7.68342 3.90237 8.31658 4.29289 8.70711L6.29289 10.7071C6.68342 11.0976 7.31658 11.0976 7.70711 10.7071L11.7071 6.70711Z' fill='black' fill-opacity='0.9'/%3E%3C/svg%3E\");\n}\n\n#payment-status-container.is-success:after {\n  content: \"Payment successful\";\n  font-size: 14px;\n  line-height: 16px;\n}\n\n#payment-status-container.is-failure:before {\n  content: \"\";\n  background-color: #cc0023;\n  width: 16px;\n  height: 16px;\n  margin-right: 16px;\n  -webkit-mask: url(\"data:image/svg+xml,%3Csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16ZM5.70711 4.29289C5.31658 3.90237 4.68342 3.90237 4.29289 4.29289C3.90237 4.68342 3.90237 5.31658 4.29289 5.70711L6.58579 8L4.29289 10.2929C3.90237 10.6834 3.90237 11.3166 4.29289 11.7071C4.68342 12.0976 5.31658 12.0976 5.70711 11.7071L8 9.41421L10.2929 11.7071C10.6834 12.0976 11.3166 12.0976 11.7071 11.7071C12.0976 11.3166 12.0976 10.6834 11.7071 10.2929L9.41421 8L11.7071 5.70711C12.0976 5.31658 12.0976 4.68342 11.7071 4.29289C11.3166 3.90237 10.6834 3.90237 10.2929 4.29289L8 6.58579L5.70711 4.29289Z' fill='black' fill-opacity='0.9'/%3E%3C/svg%3E%0A\");\n  mask: url(\"data:image/svg+xml,%3Csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16ZM5.70711 4.29289C5.31658 3.90237 4.68342 3.90237 4.29289 4.29289C3.90237 4.68342 3.90237 5.31658 4.29289 5.70711L6.58579 8L4.29289 10.2929C3.90237 10.6834 3.90237 11.3166 4.29289 11.7071C4.68342 12.0976 5.31658 12.0976 5.70711 11.7071L8 9.41421L10.2929 11.7071C10.6834 12.0976 11.3166 12.0976 11.7071 11.7071C12.0976 11.3166 12.0976 10.6834 11.7071 10.2929L9.41421 8L11.7071 5.70711C12.0976 5.31658 12.0976 4.68342 11.7071 4.29289C11.3166 3.90237 10.6834 3.90237 10.2929 4.29289L8 6.58579L5.70711 4.29289Z' fill='black' fill-opacity='0.9'/%3E%3C/svg%3E%0A\");\n}\n\n#payment-status-container.is-failure:after {\n  content: \"Payment failed\";\n  font-size: 14px;\n  line-height: 16px;\n}\n\n#payment-status-container.missing-credentials:before {\n  content: \"\";\n  background-color: #cc0023;\n  width: 16px;\n  height: 16px;\n  margin-right: 16px;\n  -webkit-mask: url(\"data:image/svg+xml,%3Csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16ZM5.70711 4.29289C5.31658 3.90237 4.68342 3.90237 4.29289 4.29289C3.90237 4.68342 3.90237 5.31658 4.29289 5.70711L6.58579 8L4.29289 10.2929C3.90237 10.6834 3.90237 11.3166 4.29289 11.7071C4.68342 12.0976 5.31658 12.0976 5.70711 11.7071L8 9.41421L10.2929 11.7071C10.6834 12.0976 11.3166 12.0976 11.7071 11.7071C12.0976 11.3166 12.0976 10.6834 11.7071 10.2929L9.41421 8L11.7071 5.70711C12.0976 5.31658 12.0976 4.68342 11.7071 4.29289C11.3166 3.90237 10.6834 3.90237 10.2929 4.29289L8 6.58579L5.70711 4.29289Z' fill='black' fill-opacity='0.9'/%3E%3C/svg%3E%0A\");\n  mask: url(\"data:image/svg+xml,%3Csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16ZM5.70711 4.29289C5.31658 3.90237 4.68342 3.90237 4.29289 4.29289C3.90237 4.68342 3.90237 5.31658 4.29289 5.70711L6.58579 8L4.29289 10.2929C3.90237 10.6834 3.90237 11.3166 4.29289 11.7071C4.68342 12.0976 5.31658 12.0976 5.70711 11.7071L8 9.41421L10.2929 11.7071C10.6834 12.0976 11.3166 12.0976 11.7071 11.7071C12.0976 11.3166 12.0976 10.6834 11.7071 10.2929L9.41421 8L11.7071 5.70711C12.0976 5.31658 12.0976 4.68342 11.7071 4.29289C11.3166 3.90237 10.6834 3.90237 10.2929 4.29289L8 6.58579L5.70711 4.29289Z' fill='black' fill-opacity='0.9'/%3E%3C/svg%3E%0A\");\n}\n\n#payment-status-container.missing-credentials:after {\n  content: \"applicationId and/or locationId is incorrect\";\n  font-size: 14px;\n  line-height: 16px;\n}\n\n#payment-status-container.is-success.store-card-message:after {\n  content: \"Store card successful\";\n}\n\n#payment-status-container.is-failure.store-card-message:after {\n  content: \"Store card failed\";\n}\n\n#afterpay-button {\n  height: 40px;\n}\n\n#google-pay-button {\n  color: white !important\n}\n</style>\n  "],"sourceRoot":"src/views"}]}