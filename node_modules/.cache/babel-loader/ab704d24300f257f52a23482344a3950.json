{"remainingRequest":"/home/vignesh/DIVRT/Revamp/node_modules/babel-loader/lib/index.js!/home/vignesh/DIVRT/Revamp/node_modules/eslint-loader/index.js??ref--13-0!/home/vignesh/DIVRT/Revamp/src/utils/formatDateTime.js","dependencies":[{"path":"/home/vignesh/DIVRT/Revamp/src/utils/formatDateTime.js","mtime":1688551741204},{"path":"/home/vignesh/DIVRT/Revamp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/Revamp/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/vignesh/DIVRT/Revamp/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIi9ob21lL3ZpZ25lc2gvRElWUlQvUmV2YW1wL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zbGljZWRUb0FycmF5IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucGFkLXN0YXJ0LmpzIjsKaW1wb3J0IHsgdXRjVG9ab25lZFRpbWUsIGZvcm1hdCB9IGZyb20gJ2RhdGUtZm5zLXR6JzsKaW1wb3J0IGZyb21Vbml4VGltZSBmcm9tICdkYXRlLWZucy9mcm9tVW5peFRpbWUnOwppbXBvcnQgeyBtaW5Ud29EaWdpdHMgfSBmcm9tICJAL3V0aWxzL3V0aWwiOwovKioKICogQHBhcmFtIHsqfSB0aW1lU3RhbXAgaXMgdGhlIHVuaXggdGltZXN0YW1wKHNlYykKICogQHBhcmFtIHsqfSBmb3JtYXQgZm9ybWF0IG9mIHRoZSByZXR1cm4gZGF0ZSB0aW1lIHZhbHVlIChzYW1wbGU6ICJ5eXl5LU1NLWRkIGhoOm1tOnNzIGEiKSAKICogQHJldHVybnMgbmV3IERhdGUodGltZXN0YW1wKSBmb3JtYXR0ZWQgdmFsdWUKICovCgp2YXIgZm9ybWF0VW5peFRvRGF0ZSA9IGZ1bmN0aW9uIGZvcm1hdFVuaXhUb0RhdGUodGltZVN0YW1wLCBmbXQpIHsKICBpZiAoW3RpbWVTdGFtcCwgZm10XS5zb21lKGZ1bmN0aW9uICh4KSB7CiAgICByZXR1cm4gIXg7CiAgfSkpIHsKICAgIGNvbnNvbGUubG9nKCdJbnZhbGlkIERhdGUgRm9ybWF0Jyk7CiAgICByZXR1cm4gIiI7CiAgfQoKICByZXR1cm4gZm9ybWF0KGZyb21Vbml4VGltZSh0aW1lU3RhbXApLCBmbXQpOwp9OwovKioKICogQHBhcmFtIHsqfSB0aW1lU3RhbXAgaXMgdGhlIHVuaXggdGltZXN0YW1wCiAqIEBwYXJhbSB7Kn0gdGltZVpvbmUgCiAqIEBwYXJhbSB7Kn0gZGF0ZUZvcm1hdCBmb3JtYXQgb2YgdGhlIHJldHVybiBkYXRlIHRpbWUgdmFsdWUgCiAqIEByZXR1cm5zIHRoZSB0aW1lIHpvbmUgZGF0ZSB0aW1lIHZhbHVlCiAqLwoKCnZhciB0aW1lU3RhbXBUb0RhdGUgPSBmdW5jdGlvbiB0aW1lU3RhbXBUb0RhdGUodGltZVN0YW1wLCB0aW1lWm9uZSwgZGF0ZUZvcm1hdCkgewogIHZhciBkYXRlID0gbmV3IERhdGUodGltZVN0YW1wICogMTAwMCk7CiAgdmFyIHpvbmVkRGF0ZSA9IHV0Y1RvWm9uZWRUaW1lKGRhdGUsIHRpbWVab25lKTsKICB2YXIgcGF0dGVybiA9IGRhdGVGb3JtYXQ7CiAgdmFyIG91dHB1dCA9IGZvcm1hdCh6b25lZERhdGUsIHBhdHRlcm4sIHsKICAgIHRpbWVab25lOiB0aW1lWm9uZQogIH0pOwogIHJldHVybiBvdXRwdXQ7Cn07Ci8qKgogKiBAcGFyYW0geyp9IGRhdGV0aW1lIGlzIHRoZSBpc28gZm9ybWF0IC8vIDIwMjItMDEtMTVUMDE6Mzk6MzMuMDMwWgogKiBAcGFyYW0geyp9IHRpbWVab25lIAogKiBAcGFyYW0geyp9IGRhdGVGb3JtYXQgZm9ybWF0IG9mIHRoZSByZXR1cm4gZGF0ZSB0aW1lIHZhbHVlIAogKiBAcmV0dXJucyB0aGUgdGltZSB6b25lIGRhdGUgdGltZSB2YWx1ZQogKi8KCgp2YXIgdXRjVG9EYXRlID0gZnVuY3Rpb24gdXRjVG9EYXRlKGRhdGV0aW1lLCB0aW1lWm9uZSwgZGF0ZUZvcm1hdCkgewogIHZhciBkYXRlID0gbmV3IERhdGUoZGF0ZXRpbWUpOwogIHZhciB6b25lZERhdGUgPSB1dGNUb1pvbmVkVGltZShkYXRlLCB0aW1lWm9uZSk7CiAgdmFyIHBhdHRlcm4gPSBkYXRlRm9ybWF0OwogIHZhciBvdXRwdXQgPSBmb3JtYXQoem9uZWREYXRlLCBwYXR0ZXJuLCB7CiAgICB0aW1lWm9uZTogdGltZVpvbmUKICB9KTsKICByZXR1cm4gb3V0cHV0Owp9OwovKioKICogQHBhcmFtIHsqfSBkYXRlIHNhbXBsZSAtIG5ldyBEYXRlKCkKICogQHBhcmFtIHsqfSB0aW1lWm9uZSAKICogQHBhcmFtIHsqfSBmb3JtYXQgZm9ybWF0IG9mIHRoZSByZXR1cm4gZGF0ZSB0aW1lIHZhbHVlIAogKiBAcmV0dXJucyB0aGUgdGltZSB6b25lIGRhdGUgdmFsdWUKICovCgoKdmFyIGRhdGVUb1RpbWVab25lRGF0ZSA9IGZ1bmN0aW9uIGRhdGVUb1RpbWVab25lRGF0ZShkYXRlLCB0aW1lem9uZSkgewogIHJldHVybiB1dGNUb1pvbmVkVGltZShkYXRlLCB0aW1lem9uZSk7Cn07Ci8qKgogICAgICogQG1ldGhvZCBzZWNvbmRzVG9IbXMgcmV0dXJucyB0aGUgZHVyYXRpb24gKHNlYykgaW4gaHJzIGFuZCBtaW4uCiAgICAgKiBAcGFyYW0gdGltZURpZmZlcmVuY2UgZHVyYXRpb24gaW4gc2Vjb25kcwogICAgICovCgoKdmFyIHNlY29uZHNUb0htcyA9IGZ1bmN0aW9uIHNlY29uZHNUb0htcyh0aW1lRGlmZmVyZW5jZSkgewogIHZhciBkID0gTnVtYmVyKHRpbWVEaWZmZXJlbmNlKTsKICB2YXIgaCA9IE1hdGguZmxvb3IoZCAvIDM2MDApOwogIHZhciBtID0gTWF0aC5mbG9vcihkICUgMzYwMCAvIDYwKTsKICB2YXIgaERpc3BsYXkgPSBoID4gMCA/IGggKyAiIGggIiA6ICIiOwogIHZhciBtRGlzcGxheSA9IG0gPiAwID8gbSArIChtID09IDEgPyAiIG1pbiAiIDogIiBtaW4iKSA6ICIgMCBtaW4iOwogIHJldHVybiBoRGlzcGxheSArIG1EaXNwbGF5Owp9OwovKioKICAgICAqIEBtZXRob2Qgc2Vjb25kc1RvREhtcyByZXR1cm5zIHRoZSBkdXJhdGlvbiAoc2VjKSBpbiBocnMgYW5kIG1pbi4KICAgICAqIEBwYXJhbSB0aW1lRGlmZmVyZW5jZSBkdXJhdGlvbiBpbiBzZWNvbmRzCiAgICAgKi8KCgp2YXIgc2Vjb25kc1RvREhtcyA9IGZ1bmN0aW9uIHNlY29uZHNUb0RIbXModGltZURpZmZlcmVuY2UpIHsKICB2YXIgdGQgPSBOdW1iZXIodGltZURpZmZlcmVuY2UpOwogIHZhciBkID0gTWF0aC5mbG9vcih0ZCAvICgzNjAwICogMjQpKTsKICB2YXIgaCA9IE1hdGguZmxvb3IodGQgLyAzNjAwKTsKICB2YXIgbSA9IE1hdGguZmxvb3IodGQgJSAzNjAwIC8gNjApOwogIHZhciBkRGlzcGxheSA9IGQgPiAwID8gZCArIChkID09IDEgPyAiIGRheSAiIDogIiBkYXlzICIpIDogIiI7CiAgaCA9IGQgPiAwID8gTWF0aC5mbG9vcih0ZCAvIDM2MDApICUgMjQgOiBoOwogIHZhciBoRGlzcGxheSA9IGggPiAwID8gaCArICIgaCAiIDogIiI7CiAgdmFyIG1EaXNwbGF5ID0gbSA+IDAgPyBtICsgKG0gPT0gMSA/ICIgbWluICIgOiAiIG1pbiIpIDogIiAwIG1pbiI7CiAgcmV0dXJuIGREaXNwbGF5ICsgaERpc3BsYXkgKyBtRGlzcGxheTsKfTsKCnZhciBzZWNvbmRzVG9EYXRlSHJNbnRzID0gZnVuY3Rpb24gc2Vjb25kc1RvRGF0ZUhyTW50cyh0aW1lRGlmZmVyZW5jZSkgewogIHZhciB2YWx1ZSA9IE51bWJlcih0aW1lRGlmZmVyZW5jZSk7CiAgdmFyIGQgPSBNYXRoLmZsb29yKE51bWJlcih2YWx1ZSAvIDg2NDAwKSk7CiAgdmFyIGggPSBNYXRoLmZsb29yKE51bWJlcih2YWx1ZSAlIDg2NDAwKSAvIDM2MDApOwogIHZhciBtID0gTWF0aC5mbG9vcihOdW1iZXIodmFsdWUgJSAzNjAwKSAvIDYwKTsKICB2YXIgZERpc3BsYXkgPSBkID4gMCA/IGQgKyAoZCA9PSAxID8gIiBkYXkgIiA6ICIgZGF5cyAiKSA6ICIiOwogIGggPSBkID4gMCA/IE1hdGguZmxvb3IodmFsdWUgLyAzNjAwKSAlIDI0IDogaDsKICB2YXIgaERpc3BsYXkgPSBoID4gMCA/IGggKyAiIGggIiA6ICIiOwogIHZhciBtRGlzcGxheSA9IG0gPiAwID8gbSArIChtID09IDEgPyAiIG1pbiAiIDogIiBtaW4iKSA6ICIgMCBtaW4iOwogIHJldHVybiBkRGlzcGxheSArIGhEaXNwbGF5ICsgbURpc3BsYXk7Cn07Ci8qKgogKiAKICogQHBhcmFtIHsqfSBkYXRlIGRhdGUgdGltZSBpbiBVVEMgZm9ybWF0CiAqIEBwYXJhbSB7Kn0gZm10IHJldHVybiBkYXRldGltZSBpbiBmbXQgZm9ybWF0CiAqIEBwYXJhbSB7Kn0gdHogdGltZSB6b25lIG9mIHRoZSBkYXRldGltZQogKiBAcmV0dXJucyAKICovCgoKdmFyIGZvcm1hdFVUQyA9IGZ1bmN0aW9uIGZvcm1hdFVUQyhkYXRlLCBmbXQsIHR6KSB7CiAgaWYgKFtkYXRlLCBmbXQsIHR6XS5zb21lKGZ1bmN0aW9uICh4KSB7CiAgICByZXR1cm4gIXg7CiAgfSkpIHsKICAgIGNvbnNvbGUubG9nKCdJbnZhbGlkIERhdGUgRm9ybWF0Jyk7CiAgICByZXR1cm4gIiI7CiAgfQoKICByZXR1cm4gZm9ybWF0KHV0Y1RvWm9uZWRUaW1lKGRhdGUsIHR6KSwgZm10LCB7CiAgICB0aW1lWm9uZTogdHoKICB9KTsKfTsKCnZhciBmb3JtYXRBTVBNVG8yNFRpbWUgPSBmdW5jdGlvbiBmb3JtYXRBTVBNVG8yNFRpbWUodGltZTEyaCkgewogIGlmICghdGltZTEyaCkgcmV0dXJuIG51bGw7CiAgaWYgKHRpbWUxMmguc3BsaXQoIiAiKVswXSA9PSAidW5kZWZpbmVkIiB8fCB0aW1lMTJoLnNwbGl0KCIgIilbMV0gPT0gInVuZGVmaW5lZCIpIHJldHVybiAiIjsKCiAgdmFyIF90aW1lMTJoJHNwbGl0ID0gdGltZTEyaC5zcGxpdCgiICIpLAogICAgICBfdGltZTEyaCRzcGxpdDIgPSBfc2xpY2VkVG9BcnJheShfdGltZTEyaCRzcGxpdCwgMiksCiAgICAgIHRpbWUgPSBfdGltZTEyaCRzcGxpdDJbMF0sCiAgICAgIG1vZGlmaWVyID0gX3RpbWUxMmgkc3BsaXQyWzFdOwoKICB2YXIgX3RpbWUkc3BsaXQgPSB0aW1lLnNwbGl0KCI6IiksCiAgICAgIF90aW1lJHNwbGl0MiA9IF9zbGljZWRUb0FycmF5KF90aW1lJHNwbGl0LCAzKSwKICAgICAgaG91cnMgPSBfdGltZSRzcGxpdDJbMF0sCiAgICAgIG1pbnV0ZXMgPSBfdGltZSRzcGxpdDJbMV0sCiAgICAgIHNlY29uZHMgPSBfdGltZSRzcGxpdDJbMl07CgogIGlmIChob3VycyA9PT0gIjEyIikgewogICAgaG91cnMgPSAiMDAiOwogIH0KCiAgaWYgKG1vZGlmaWVyID09PSAiUE0iKSB7CiAgICBob3VycyA9IHBhcnNlSW50KGhvdXJzLCAxMCkgKyAxMjsKICB9CgogIGlmICghc2Vjb25kcykgewogICAgc2Vjb25kcyA9ICIwMCI7CiAgfQoKICByZXR1cm4gaG91cnMgKyAiOiIgKyBtaW51dGVzICsgIjoiICsgc2Vjb25kczsKfTsKCnZhciBmb3JtYXQyNFRpbWVUb0FNUE0gPSBmdW5jdGlvbiBmb3JtYXQyNFRpbWVUb0FNUE0odGltZTI0aCkgewogIGlmICghdGltZTI0aCkgcmV0dXJuIG51bGw7CiAgdmFyIHRpbWVNZXJpZGlhbjsKCiAgdmFyIF90aW1lMjRoJHNwbGl0ID0gdGltZTI0aC5zcGxpdCgiOiIpLAogICAgICBfdGltZTI0aCRzcGxpdDIgPSBfc2xpY2VkVG9BcnJheShfdGltZTI0aCRzcGxpdCwgMiksCiAgICAgIGhvdXJzID0gX3RpbWUyNGgkc3BsaXQyWzBdLAogICAgICBtaW51dGVzID0gX3RpbWUyNGgkc3BsaXQyWzFdOwoKICBpZiAoTnVtYmVyKGhvdXJzKSA+IDEyKSB7CiAgICB0aW1lTWVyaWRpYW4gPSAiUE0iOwogIH0gZWxzZSB7CiAgICB0aW1lTWVyaWRpYW4gPSAiQU0iOwogIH0KCiAgcmV0dXJuIE51bWJlcihob3VycykgPiAxMiA/IE51bWJlcihob3VycykgLSAxMiA6IGhvdXJzICsgIjoiICsgbWludXRlcyArICIgIiArIHRpbWVNZXJpZGlhbjsKfTsKLyoqZGF0ZSBmb3JtYXQgLSB5ZWFyLW1vbnRoLWRheS4gcmV0dXJucyBkYXRlIGluIG1vbnRoL2RheS95ZWFyIGZvcm1hdCAqLwoKCnZhciBmb3JtYXREYXRlVG9BUElGb3JtYXQgPSBmdW5jdGlvbiBmb3JtYXREYXRlVG9BUElGb3JtYXQoZGF0ZSkgewogIGlmICghZGF0ZSkgcmV0dXJuIG51bGw7CgogIHZhciBfZGF0ZSRzcGxpdCA9IGRhdGUuc3BsaXQoIi0iKSwKICAgICAgX2RhdGUkc3BsaXQyID0gX3NsaWNlZFRvQXJyYXkoX2RhdGUkc3BsaXQsIDMpLAogICAgICB5ZWFyID0gX2RhdGUkc3BsaXQyWzBdLAogICAgICBtb250aCA9IF9kYXRlJHNwbGl0MlsxXSwKICAgICAgZGF5ID0gX2RhdGUkc3BsaXQyWzJdOwoKICByZXR1cm4gIiIuY29uY2F0KG1vbnRoLCAiLyIpLmNvbmNhdChkYXksICIvIikuY29uY2F0KHllYXIpOwp9OwovKipkYXRlIGZvcm1hdCAtIG1vbnRoL2RheS95ZWFyLiByZXR1cm5zIGRhdGUgaW4geWVhci1tb250aC1kYXkgZm9ybWF0ICovCgoKdmFyIGZvcm1hdERhdGVUb1N0YW5kYXJkU3RyID0gZnVuY3Rpb24gZm9ybWF0RGF0ZVRvU3RhbmRhcmRTdHIoZGF0ZSkgewogIGlmICghZGF0ZSkgcmV0dXJuICIiOwogIGlmIChkYXRlLnNwbGl0KCItIikubGVuZ3RoID4gMSkgcmV0dXJuIGRhdGU7CgogIHZhciBfZGF0ZSRzcGxpdDMgPSBkYXRlLnNwbGl0KCIvIiksCiAgICAgIF9kYXRlJHNwbGl0NCA9IF9zbGljZWRUb0FycmF5KF9kYXRlJHNwbGl0MywgMyksCiAgICAgIG1vbnRoID0gX2RhdGUkc3BsaXQ0WzBdLAogICAgICBkYXkgPSBfZGF0ZSRzcGxpdDRbMV0sCiAgICAgIHllYXIgPSBfZGF0ZSRzcGxpdDRbMl07CgogIHJldHVybiAiIi5jb25jYXQoeWVhciwgIi0iKS5jb25jYXQobW9udGgucGFkU3RhcnQoMiwgIjAiKSwgIi0iKS5jb25jYXQoZGF5KTsKfTsKCnZhciBmb3JtYXREYXRlVGltZVRvQU1QTSA9IGZ1bmN0aW9uIGZvcm1hdERhdGVUaW1lVG9BTVBNKGRhdGVUaW1lKSB7CiAgdmFyIF9kYXRlVGltZSRzcGxpdCA9IGRhdGVUaW1lLnNwbGl0KCIgIiksCiAgICAgIF9kYXRlVGltZSRzcGxpdDIgPSBfc2xpY2VkVG9BcnJheShfZGF0ZVRpbWUkc3BsaXQsIDIpLAogICAgICBkYXRlID0gX2RhdGVUaW1lJHNwbGl0MlswXSwKICAgICAgdGltZSA9IF9kYXRlVGltZSRzcGxpdDJbMV07CgogIHZhciB0aW1lTWVyaWRpYW47CgogIHZhciBfdGltZSRzcGxpdDMgPSB0aW1lLnNwbGl0KCI6IiksCiAgICAgIF90aW1lJHNwbGl0NCA9IF9zbGljZWRUb0FycmF5KF90aW1lJHNwbGl0MywgMiksCiAgICAgIGhyID0gX3RpbWUkc3BsaXQ0WzBdLAogICAgICBtaW4gPSBfdGltZSRzcGxpdDRbMV07CgogIHRpbWVNZXJpZGlhbiA9IE51bWJlcihocikgPiAxMiA/ICJQTSIgOiAiQU0iOwogIHJldHVybiBmb3JtYXREYXRlVG9BUElGb3JtYXQoZGF0ZSkgKyAiICIgKyAoTnVtYmVyKGhyKSA+IDEyID8gbWluVHdvRGlnaXRzKE51bWJlcihocikpIC0gMTIgOiBtaW5Ud29EaWdpdHMoTnVtYmVyKGhyKSkpICsgIjoiICsgbWluICsgIiAiICsgdGltZU1lcmlkaWFuOwp9OwoKdmFyIGZvcm1hdERhdGVUaW1lID0gZnVuY3Rpb24gZm9ybWF0RGF0ZVRpbWUodGltZSkgewogIHZhciB1dGNEYXRlID0gbmV3IERhdGUodGltZSAqIDEwMDApLnRvVVRDU3RyaW5nKCk7IC8vIldlZCwgMjcgSmFuIDIwMjEgMTM6NTk6MDQgR01UIgoKICB2YXIgbW9udGggPSB1dGNEYXRlLnNwbGl0KCIsIilbMV0uc3BsaXQoIiAiKVsyXTsgLy8gSmFuCgogIHZhciBkYXRlID0gdXRjRGF0ZS5zcGxpdCgiLCIpWzFdLnNwbGl0KCIgIilbMV07IC8vIDI3CgogIHZhciBociA9IHV0Y0RhdGUuc3BsaXQoIiwiKVsxXS5zcGxpdCgiICIpWzRdLnNwbGl0KCI6IilbMF07IC8vIDEzCgogIHZhciBtaW4gPSB1dGNEYXRlLnNwbGl0KCIsIilbMV0uc3BsaXQoIiAiKVs0XS5zcGxpdCgiOiIpWzFdOyAvLzU5CgogIHZhciBmb3JtYXRIciA9IE51bWJlcihocikgPiAxMiA/IE51bWJlcihocikgLSAxMiA6IE51bWJlcihocik7IC8vIDEKCiAgZm9ybWF0SHIgPSBOdW1iZXIoZm9ybWF0SHIpID49IDEwID8gTnVtYmVyKGZvcm1hdEhyKSA6ICIwIiArIGZvcm1hdEhyOyAvLyAwMQoKICB2YXIgYW1PcnBtID0gTnVtYmVyKGhyKSA+PSAxMiA/ICJQTSIgOiAiQU0iOyAvLyBQTQogIC8vIHJldHVybiBmb3JtYXRIciArICI6IiArIG1pbiArICIgIiArIGFtT3JwbSArICIgb24gIiArIG1vbnRoICsgIiAiICsgZGF0ZTsgLy8gLy8gMDE6NTkgUE0gb24gSmFuIDI3CgogIHJldHVybiBbZm9ybWF0SHIgKyAiOiIgKyBtaW4gKyAiICIgKyBhbU9ycG0sIG1vbnRoLCBkYXRlXTsKfTsKCmV4cG9ydCB7IHRpbWVTdGFtcFRvRGF0ZSwgc2Vjb25kc1RvSG1zLCBzZWNvbmRzVG9ESG1zLCBmb3JtYXRVVEMsIGZvcm1hdEFNUE1UbzI0VGltZSwgZm9ybWF0MjRUaW1lVG9BTVBNLCBmb3JtYXREYXRlVG9BUElGb3JtYXQsIGRhdGVUb1RpbWVab25lRGF0ZSwgZm9ybWF0VW5peFRvRGF0ZSwgdXRjVG9EYXRlLCBmb3JtYXREYXRlVGltZVRvQU1QTSwgZm9ybWF0RGF0ZVRvU3RhbmRhcmRTdHIsIHNlY29uZHNUb0RhdGVIck1udHMsIGZvcm1hdERhdGVUaW1lIH07"},{"version":3,"sources":["/home/vignesh/DIVRT/Revamp/src/utils/formatDateTime.js"],"names":["utcToZonedTime","format","fromUnixTime","minTwoDigits","formatUnixToDate","timeStamp","fmt","some","x","console","log","timeStampToDate","timeZone","dateFormat","date","Date","zonedDate","pattern","output","utcToDate","datetime","dateToTimeZoneDate","timezone","secondsToHms","timeDifference","d","Number","h","Math","floor","m","hDisplay","mDisplay","secondsToDHms","td","dDisplay","secondsToDateHrMnts","value","formatUTC","tz","formatAMPMTo24Time","time12h","split","time","modifier","hours","minutes","seconds","parseInt","format24TimeToAMPM","time24h","timeMeridian","formatDateToAPIFormat","year","month","day","formatDateToStandardStr","length","padStart","formatDateTimeToAMPM","dateTime","hr","min","formatDateTime","utcDate","toUTCString","formatHr","amOrpm"],"mappings":"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","sourcesContent":["import { utcToZonedTime, format } from 'date-fns-tz';\nimport fromUnixTime from 'date-fns/fromUnixTime'\nimport {minTwoDigits} from \"@/utils/util\";\n\n/**\n * @param {*} timeStamp is the unix timestamp(sec)\n * @param {*} format format of the return date time value (sample: \"yyyy-MM-dd hh:mm:ss a\") \n * @returns new Date(timestamp) formatted value\n */\nconst formatUnixToDate = (timeStamp, fmt ) => {\n    if ([timeStamp, fmt].some(x => !x)) {\n        console.log('Invalid Date Format')\n        return \"\";\n    }\n    return format(fromUnixTime(timeStamp), fmt);\n}\n\n/**\n * @param {*} timeStamp is the unix timestamp\n * @param {*} timeZone \n * @param {*} dateFormat format of the return date time value \n * @returns the time zone date time value\n */\nconst timeStampToDate = (timeStamp, timeZone, dateFormat) => {\n    const date = new Date(timeStamp * 1000);\n    const zonedDate = utcToZonedTime(date, timeZone);\n    const pattern = dateFormat;\n    const output = format(zonedDate, pattern, { timeZone });\n    return output;\n}\n/**\n * @param {*} datetime is the iso format // 2022-01-15T01:39:33.030Z\n * @param {*} timeZone \n * @param {*} dateFormat format of the return date time value \n * @returns the time zone date time value\n */\n const utcToDate = (datetime, timeZone, dateFormat) => {\n    const date = new Date(datetime);\n    const zonedDate = utcToZonedTime(date, timeZone);\n    const pattern = dateFormat;\n    const output = format(zonedDate, pattern, { timeZone });\n    return output;\n}\n\n/**\n * @param {*} date sample - new Date()\n * @param {*} timeZone \n * @param {*} format format of the return date time value \n * @returns the time zone date value\n */\nconst dateToTimeZoneDate = (date, timezone) =>{\n   return utcToZonedTime(date, timezone)\n}\n\n/**\n     * @method secondsToHms returns the duration (sec) in hrs and min.\n     * @param timeDifference duration in seconds\n     */\nconst secondsToHms = (timeDifference) => {\n    var d = Number(timeDifference);\n    var h = Math.floor(d / 3600);\n    var m = Math.floor((d % 3600) / 60);\n    var hDisplay = h > 0 ? h + \" h \" : \"\";\n    var mDisplay = m > 0 ? m + (m == 1 ? \" min \" : \" min\") : \" 0 min\";\n    return hDisplay + mDisplay;\n\n}\n/**\n     * @method secondsToDHms returns the duration (sec) in hrs and min.\n     * @param timeDifference duration in seconds\n     */\nconst secondsToDHms = (timeDifference) => {\n    var td = Number(timeDifference);\n    var d = Math.floor(td / (3600*24));\n    var h = Math.floor(td / 3600);\n    var m = Math.floor((td % 3600) / 60);\n    var dDisplay = d > 0 ? d + (d == 1 ? \" day \" : \" days \") : \"\";\n    h = d > 0  ? Math.floor(td / 3600)%24 : h;\n    var hDisplay = h > 0 ? h + \" h \" : \"\";\n    var mDisplay = m > 0 ? m + (m == 1 ? \" min \" : \" min\") : \" 0 min\";\n    return dDisplay + hDisplay + mDisplay;\n}\n\nconst secondsToDateHrMnts=(timeDifference) => {\n    var value = Number(timeDifference);\n    var d= Math.floor(Number(value / 86400))\n    var h=Math.floor(Number(value % 86400)/ 3600);\n    var m=Math.floor(Number(value % 3600) / 60);\n    var dDisplay = d > 0 ? d + (d == 1 ? \" day \" : \" days \") : \"\";\n    h = d > 0  ? Math.floor(value / 3600)%24 : h;\n    var hDisplay = h > 0 ? h + \" h \" : \"\";\n    var mDisplay = m > 0 ? m + (m == 1 ? \" min \" : \" min\") : \" 0 min\";\n    return dDisplay + hDisplay + mDisplay;\n    \n}\n/**\n * \n * @param {*} date date time in UTC format\n * @param {*} fmt return datetime in fmt format\n * @param {*} tz time zone of the datetime\n * @returns \n */\nconst formatUTC = (date, fmt, tz) => {\n    if ([date, fmt, tz].some(x => !x)) {\n        console.log('Invalid Date Format')\n        return \"\";\n    }\n    return format(utcToZonedTime(date, tz),\n        fmt,\n        { timeZone: tz });\n}\n\nconst formatAMPMTo24Time = (time12h) => {\n    if (!time12h) return null;\n    if(time12h.split(\" \")[0] == \"undefined\" || time12h.split(\" \")[1] == \"undefined\") return \"\"\n    const [time, modifier] = time12h.split(\" \");\n    let [hours, minutes, seconds] = time.split(\":\");\n    if (hours === \"12\") {\n        hours = \"00\";\n    }\n    if (modifier === \"PM\") {\n        hours = parseInt(hours, 10) + 12;\n    }\n    if(!seconds){\n        seconds = \"00\"\n    }\n    return hours + \":\" + minutes + \":\" + seconds;\n}\n\nconst format24TimeToAMPM = (time24h) => {\n    if (!time24h) return null;\n    let timeMeridian;\n    let [hours, minutes] = time24h.split(\":\");\n    if (Number(hours) > 12) {\n        timeMeridian = \"PM\";\n    }else{\n        timeMeridian = \"AM\"\n    }\n    \n    return Number(hours) > 12 ? Number(hours) - 12 : hours + \":\" + minutes + \" \"+ timeMeridian;\n}\n\n/**date format - year-month-day. returns date in month/day/year format */\nconst formatDateToAPIFormat = (date) => {\n    if (!date) return null;\n\n    const [year, month, day] = date.split(\"-\");\n    return `${month}/${day}/${year}`;\n}\n/**date format - month/day/year. returns date in year-month-day format */\nconst formatDateToStandardStr = (date) => {\n    if(!date) return \"\";\n    if(date.split(\"-\").length > 1) return date;\n    const [month, day, year] = date.split(\"/\");\n    return `${year}-${month.padStart(2, \"0\")}-${day}`;\n  }\n\nconst formatDateTimeToAMPM = (dateTime) =>{\n    let [date, time] = dateTime.split(\" \");\n    let timeMeridian;\n    let [hr, min] = time.split(\":\");\n    timeMeridian = Number(hr) > 12 ? \"PM\" : \"AM\";\n    return formatDateToAPIFormat(date) + \" \" + (Number(hr) > 12 ? minTwoDigits(Number(hr)) - 12 :  minTwoDigits(Number(hr))) + \":\" + min + \" \" + timeMeridian;\n}\nconst formatDateTime = (time) => {\n    let utcDate = new Date(time * 1000).toUTCString(); //\"Wed, 27 Jan 2021 13:59:04 GMT\"\n    let month = utcDate.split(\",\")[1].split(\" \")[2]; // Jan\n    let date = utcDate.split(\",\")[1].split(\" \")[1]; // 27\n    let hr = utcDate.split(\",\")[1].split(\" \")[4].split(\":\")[0]; // 13\n    let min = utcDate.split(\",\")[1].split(\" \")[4].split(\":\")[1]; //59\n    let formatHr = Number(hr) > 12 ? Number(hr) - 12 : Number(hr); // 1\n    formatHr = Number(formatHr) >= 10 ? Number(formatHr) : \"0\" + formatHr; // 01\n    let amOrpm = Number(hr) >= 12 ? \"PM\" : \"AM\"; // PM\n    // return formatHr + \":\" + min + \" \" + amOrpm + \" on \" + month + \" \" + date; // // 01:59 PM on Jan 27\n    return [formatHr + \":\" + min + \" \" + amOrpm, month, date];\n  }\nexport { timeStampToDate, secondsToHms, secondsToDHms, formatUTC, formatAMPMTo24Time, format24TimeToAMPM, formatDateToAPIFormat, dateToTimeZoneDate, formatUnixToDate, utcToDate, formatDateTimeToAMPM, formatDateToStandardStr,secondsToDateHrMnts, formatDateTime}\n\n"]}]}