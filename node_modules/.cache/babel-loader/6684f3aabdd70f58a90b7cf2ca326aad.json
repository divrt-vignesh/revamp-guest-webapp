{"remainingRequest":"/home/vignesh/DIVRT/revamp-guest-webapp/node_modules/thread-loader/dist/cjs.js!/home/vignesh/DIVRT/revamp-guest-webapp/node_modules/babel-loader/lib/index.js!/home/vignesh/DIVRT/revamp-guest-webapp/node_modules/eslint-loader/index.js??ref--13-0!/home/vignesh/DIVRT/revamp-guest-webapp/src/utils/formatDateTime.js","dependencies":[{"path":"/home/vignesh/DIVRT/revamp-guest-webapp/src/utils/formatDateTime.js","mtime":1688969567198},{"path":"/home/vignesh/DIVRT/revamp-guest-webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/revamp-guest-webapp/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/revamp-guest-webapp/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/vignesh/DIVRT/revamp-guest-webapp/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/vignesh/DIVRT/revamp-guest-webapp/src/utils/formatDateTime.js"],"names":["utcToZonedTime","format","fromUnixTime","minTwoDigits","formatUnixToDate","timeStamp","fmt","some","x","console","log","timeStampToDate","timeZone","dateFormat","date","Date","zonedDate","pattern","output","utcToDate","datetime","dateToTimeZoneDate","timezone","secondsToHms","timeDifference","d","Number","h","Math","floor","m","hDisplay","mDisplay","secondsToMs","secondsToDHms","type","td","dDisplay","secondsToDateHrMnts","value","formatUTC","tz","formatAMPMTo24Time","time12h","split","time","modifier","hours","minutes","seconds","parseInt","format24TimeToAMPM","time24h","timeMeridian","formatDateToAPIFormat","year","month","day","formatDateToStandardStr","length","padStart","formatDateTimeToAMPM","dateTime","hr","min","formatDateTime","val","undefined","utcDate","toUTCString","formatHr","amOrpm","ampm"],"mappings":"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","sourcesContent":["import { utcToZonedTime, format } from 'date-fns-tz';\nimport fromUnixTime from 'date-fns/fromUnixTime'\nimport { minTwoDigits } from \"@/utils/util\";\n\n/**\n * @param {*} timeStamp is the unix timestamp(sec)\n * @param {*} format format of the return date time value (sample: \"yyyy-MM-dd hh:mm:ss a\") \n * @returns new Date(timestamp) formatted value\n */\nconst formatUnixToDate = (timeStamp, fmt) => {\n    if ([timeStamp, fmt].some(x => !x)) {\n        console.log('Invalid Date Format')\n        return \"\";\n    }\n    return format(fromUnixTime(timeStamp), fmt);\n}\n\n/**\n * @param {*} timeStamp is the unix timestamp\n * @param {*} timeZone \n * @param {*} dateFormat format of the return date time value \n * @returns the time zone date time value\n */\nconst timeStampToDate = (timeStamp, timeZone, dateFormat) => {\n    const date = new Date(timeStamp * 1000);\n    const zonedDate = utcToZonedTime(date, timeZone);\n    const pattern = dateFormat;\n    const output = format(zonedDate, pattern, { timeZone });\n    return output;\n}\n/**\n * @param {*} datetime is the iso format // 2022-01-15T01:39:33.030Z\n * @param {*} timeZone \n * @param {*} dateFormat format of the return date time value \n * @returns the time zone date time value\n */\nconst utcToDate = (datetime, timeZone, dateFormat) => {\n    const date = new Date(datetime);\n    const zonedDate = utcToZonedTime(date, timeZone);\n    const pattern = dateFormat;\n    const output = format(zonedDate, pattern, { timeZone });\n    return output;\n}\n\n/**\n * @param {*} date sample - new Date()\n * @param {*} timeZone \n * @param {*} format format of the return date time value \n * @returns the time zone date value\n */\nconst dateToTimeZoneDate = (date, timezone) => {\n    return utcToZonedTime(date, timezone)\n}\n\n/**\n     * @method secondsToHms returns the duration (sec) in hrs and min.\n     * @param timeDifference duration in seconds\n     */\nconst secondsToHms = (timeDifference) => {\n    var d = Number(timeDifference);\n    var h = Math.floor(d / 3600);\n    var m = Math.floor((d % 3600) / 60);\n    var hDisplay = h > 0 ? h + \" h \" : \"\";\n    var mDisplay = m > 0 ? m + (m == 1 ? \" min \" : \" min\") : \" 0 min\";\n    return hDisplay + mDisplay;\n\n}\n/**\n     * @method secondsToDHms returns the duration (sec) in hrs and min.\n     * @param timeDifference duration in seconds\n     */\nconst secondsToMs = (timeDifference) => {\n    var d = Number(timeDifference);\n    var m = Math.floor(d  / 60);\n    var mDisplay = m > 0 ? m + (m == 1 ? \" min \" : \" min\") : \" 0 min\";\n    return mDisplay;\n}\n/**\n     * @method secondsToDHms returns the duration (sec) in hrs and min.\n     * @param timeDifference duration in seconds\n     */\nconst secondsToDHms = (timeDifference, type) => {\n    var td = Number(timeDifference);\n    var d = Math.floor(td / (3600 * 24));\n    var h = Math.floor(td / 3600);\n    var m = Math.floor((td % 3600) / 60);\n    var dDisplay = d > 0 ? d + (d == 1 ? \" day \" : \" days \") : \"\";\n    h = d > 0 ? Math.floor(td / 3600) % 24 : h;\n    var hDisplay = h > 0 ? h + \" h \" : \"\";\n    var mDisplay = m > 0 ? m + (m == 1 ? \" min \" : \" mins\") : \" 0 min\";\n    return type == 'array' ? [dDisplay, hDisplay, mDisplay] : dDisplay + hDisplay + mDisplay;\n}\n\n\nconst secondsToDateHrMnts = (timeDifference) => {\n    var value = Number(timeDifference);\n    var d = Math.floor(Number(value / 86400))\n    var h = Math.floor(Number(value % 86400) / 3600);\n    var m = Math.floor(Number(value % 3600) / 60);\n    var dDisplay = d > 0 ? d + (d == 1 ? \" day \" : \" days \") : \"\";\n    h = d > 0 ? Math.floor(value / 3600) % 24 : h;\n    var hDisplay = h > 0 ? h + \" h \" : \"\";\n    var mDisplay = m > 0 ? m + (m == 1 ? \" min \" : \" min\") : \" 0 min\";\n    return dDisplay + hDisplay + mDisplay;\n\n}\n/**\n * \n * @param {*} date date time in UTC format\n * @param {*} fmt return datetime in fmt format\n * @param {*} tz time zone of the datetime\n * @returns \n */\nconst formatUTC = (date, fmt, tz) => {\n    if ([date, fmt, tz].some(x => !x)) {\n        console.log('Invalid Date Format')\n        return \"\";\n    }\n    return format(utcToZonedTime(date, tz),\n        fmt,\n        { timeZone: tz });\n}\n\nconst formatAMPMTo24Time = (time12h) => {\n    if (!time12h) return null;\n    if (time12h.split(\" \")[0] == \"undefined\" || time12h.split(\" \")[1] == \"undefined\") return \"\"\n    const [time, modifier] = time12h.split(\" \");\n    let [hours, minutes, seconds] = time.split(\":\");\n    if (hours === \"12\") {\n        hours = \"00\";\n    }\n    if (modifier === \"PM\") {\n        hours = parseInt(hours, 10) + 12;\n    }\n    if (!seconds) {\n        seconds = \"00\"\n    }\n    return hours + \":\" + minutes + \":\" + seconds;\n}\n\nconst format24TimeToAMPM = (time24h) => {\n    if (!time24h) return null;\n    let timeMeridian;\n    let [hours, minutes] = time24h.split(\":\");\n    if (Number(hours) > 12) {\n        timeMeridian = \"PM\";\n    } else {\n        timeMeridian = \"AM\"\n    }\n\n    return Number(hours) > 12 ? Number(hours) - 12 : hours + \":\" + minutes + \" \" + timeMeridian;\n}\n\n/**date format - year-month-day. returns date in month/day/year format */\nconst formatDateToAPIFormat = (date) => {\n    if (!date) return null;\n\n    const [year, month, day] = date.split(\"-\");\n    return `${month}/${day}/${year}`;\n}\n/**date format - month/day/year. returns date in year-month-day format */\nconst formatDateToStandardStr = (date) => {\n    if (!date) return \"\";\n    if (date.split(\"-\").length > 1) return date;\n    const [month, day, year] = date.split(\"/\");\n    return `${year}-${month.padStart(2, \"0\")}-${day}`;\n}\n\nconst formatDateTimeToAMPM = (dateTime) => {\n    let [date, time] = dateTime.split(\" \");\n    let timeMeridian;\n    let [hr, min] = time.split(\":\");\n    timeMeridian = Number(hr) > 12 ? \"PM\" : \"AM\";\n    return formatDateToAPIFormat(date) + \" \" + (Number(hr) > 12 ? minTwoDigits(Number(hr)) - 12 : minTwoDigits(Number(hr))) + \":\" + min + \" \" + timeMeridian;\n}\nconst formatDateTime = (time, val) => {\n    if (time !== null && time !== undefined && time != '') {\n        let utcDate = new Date(time * 1000).toUTCString(); //\"Wed, 27 Jan 2021 13:59:04 GMT\"\n        let month = utcDate.split(\",\")[1].split(\" \")[2]; // Jan\n        let date = utcDate.split(\",\")[1].split(\" \")[1]; // 27\n        let year = utcDate.split(\",\")[1].split(\" \")[3];\n        let hr = utcDate.split(\",\")[1].split(\" \")[4].split(\":\")[0]; // 13\n        let min = utcDate.split(\",\")[1].split(\" \")[4].split(\":\")[1]; //59\n        let formatHr = Number(hr) > 12 ? Number(hr) - 12 : Number(hr); // 1\n        formatHr = Number(hr) == 0 ? 12 : formatHr;\n\n        formatHr = Number(formatHr) >= 10 ? Number(formatHr) : '0' + formatHr; //01\n        let amOrpm = Number(hr) >= 12 ? \"p\" : \"a\"; //PM\n        let ampm = Number(hr) >= 12 ? \"PM\" : \"AM\";\n        switch (val) {\n            case 'hour': {\n                return formatHr + amOrpm;\n            }\n            case 'mins': {\n                return min\n            }\n            case 'date': {\n                return month + \" \" + date + \", \" + year + \" \" + formatHr + \":\" + min + \" \" + ampm;\n            }\n            case 'expire': {\n                return formatHr + \":\" + min + \" \" + ampm + ' on ' + month + \" \" + date\n            }\n            case 'checkin': {\n                return formatHr + \":\" + min + \" \" + ampm + ' on ' + month + \" \" + date\n            }\n            case 'booking_content': {\n                return [formatHr + \":\" + min + \" \" + ampm, month, date];\n            }\n            default: {\n                return [formatHr + \":\" + min + \" \" + ampm, month, date];\n            }\n        }\n    }\n    //Jan 27, 01:59 PM\n}\n\nexport { timeStampToDate, secondsToHms, secondsToMs, secondsToDHms, formatUTC, formatAMPMTo24Time, format24TimeToAMPM, formatDateToAPIFormat, dateToTimeZoneDate, formatUnixToDate, utcToDate, formatDateTimeToAMPM, formatDateToStandardStr, secondsToDateHrMnts, formatDateTime }\n\n"]}]}