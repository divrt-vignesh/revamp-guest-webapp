{"remainingRequest":"/home/vignesh/DIVRT/guest-webapp/node_modules/thread-loader/dist/cjs.js!/home/vignesh/DIVRT/guest-webapp/node_modules/babel-loader/lib/index.js!/home/vignesh/DIVRT/guest-webapp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vignesh/DIVRT/guest-webapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vignesh/DIVRT/guest-webapp/src/views/ApplePay.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vignesh/DIVRT/guest-webapp/src/views/ApplePay.vue","mtime":1685622563849},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ApplePay.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <form id=\"payment-form\">\n      <!-- <div id=\"apple-pay-button\" style=\"-apple-pay-button-type: continue !important\"></div> -->\n      <!-- <div id=\"card-container\"></div> -->\n      <v-btn id=\"card-button\" color=\"black\" elevation=\"20\" rounded style=\"font-size: 18px; font-weight: 700;text-transform: none;\" :width=\"width\" :height=\"height\" v-if=\"iosDevice\"> <span\n          class=\"white--text\">Pay with </span> <v-icon color=\"white\">mdi-apple</v-icon><span class=\"white--text\">\n          Pay</span></v-btn>\n      <!-- <button id=\"card-button\" type=\"button\">Pay $1.00</button> -->\n    </form>\n    <!-- <div id=\"payment-status-container\"></div> -->\n    <v-dialog v-model=\"alertDialog\" persistent max-width=\"290\">\n      <v-card class=\"pa-0\">\n        <v-card-title class=\"justify-center\" style=\"position: relative\">\n          <v-icon x-large color=\"green accent-2\">{{ alertIcon }}</v-icon>\n        </v-card-title>\n        <v-card-text class=\"text-center mt-5\">\n          <span style=\"font-size: 20px\">{{ alertMsg }}</span>\n        </v-card-text>\n        <v-card-actions class=\"text-center pb-6\">\n          <v-container pa-0 fluid>\n            <v-row no-gutters>\n              <v-col cols=\"12\">\n                <v-btn rounded block elevation=\"0\" class=\"white--text exit_dialog_btn\"\n                  @click=\"closeAlertDialog()\">Close</v-btn>\n              </v-col>\n            </v-row>\n          </v-container>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script>\nimport APIHelper from \"../apiHelper\";\n// import loggerHelper from \"../loggerHelper\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"ApplePay\",\n  data: () => ({\n    appId: \"sandbox-sq0idb-Jyr1fMe8q1HdUDQXK-DQNg\",\n    locationId: \"L8R19FS9KH7FQ\",\n    payments: null,\n    alertDialog: false,\n    alertMsg: \"\",\n    alertIcon: \"mdi-check-circle\"\n  }),\n  props: {\n    width:{\n      type: String,\n      default: () => \"100%\",\n    },\n    height:{\n      type: String,\n      default: () => \"50px\",\n    },\n    iosDevice: {\n      type: Boolean,\n      default: () => {\n        return false;\n      }\n    }\n  },\n  computed: {\n    ...mapGetters({\n      bookingId: \"getterBookingId\",\n      bookingDetails: \"getterBookingDetails\",\n    }),\n  },\n  async mounted() {\n    // document.addEventListener('DOMContentLoaded', async function () {\n    if (!window.Square) {\n      throw new Error(\"Square.js failed to load properly\");\n    }\n\n    // let payments;\n    try {\n      this.payments = window.Square.payments('sandbox-sq0idb-Jyr1fMe8q1HdUDQXK-DQNg', 'L8R19FS9KH7FQ');\n    } catch {\n      // const statusContainer = document.getElementById(\n      //   \"payment-status-container\"\n      // );\n      // statusContainer.className = \"missing-credentials\";\n      // statusContainer.style.visibility = \"visible\";\n      return;\n    }\n\n    let card;\n    try {\n      card = await this.initializeCard(this.payments);\n    } catch (e) {\n      console.error(\"Initializing Card failed\", e);\n      return;\n    }\n\n    let applePay;\n    try {\n      applePay = await this.initializeApplePay(this.payments);\n    } catch (e) {\n      console.error(\"Initializing Apple Pay failed\", e);\n      // There are a number of reason why Apple Pay may not be supported\n      // (e.g. Browser Support, Device Support, Account). Therefore you should handle\n      // initialization failures, while still loading other applicable payment methods.\n    }\n    var self = this;\n    // const cardButton = document.getElementById(\"card-button\");\n    // cardButton.addEventListener(\"click\", async function (event) {\n    //   console.log(event)\n    console.log(card);\n    //   await self.handlePaymentMethodSubmission(event, card);\n    // });\n\n    // Checkpoint 2.\n    if (applePay) {\n      const applePayButton = document.getElementById(\"card-button\");\n      applePayButton.addEventListener(\"click\", async function (event) {\n        console.log(\"Clicked\");\n        await self.handlePaymentMethodSubmission(event, applePay);\n      });\n    }\n    // });\n  },\n  methods: {\n    async closeAlertDialog() {\n      this.alertDialog = false;\n      window.location.reload()\n      await this.getBookingState();\n    },\n    async handlePaymentMethodSubmission(event, paymentMethod) {\n      event.preventDefault();\n      var self = this;\n      // const cardButton = document.getElementById(\"card-button\");\n      try {\n        // disable the submit button as we await tokenization and make a payment request.\n\n        // cardButton.disabled = true;\n        console.log(\"paymentMeth0d\", paymentMethod);\n        const tokenResult = await self.tokenize(paymentMethod);\n        console.log(\"token\", tokenResult);\n        let verfiedToken = await self.verifyBuyer(this.payments, tokenResult);\n        console.log(\"verfiedToken\", verfiedToken);\n        await self.addCard(tokenResult, verfiedToken);\n        // const paymentResults = await self.createPayment(token);\n        // console.log(\"paymentResults\", paymentResults);\n        // console.log(self)\n        // self.displayPaymentResults(\"SUCCESS\");\n\n        // console.debug(\"Payment Success\", paymentResults);\n      } catch (e) {\n        console.log(self);\n        console.log(\"Error\");\n        // cardButton.disabled = false;\n        self.displayPaymentResults(\"FAILURE\");\n        console.error(e.message);\n      }\n    },\n    async addCard(tokenResult, verfiedToken) {\n      let cardData = {\n        userDevice: \"2\",\n        orderType: \"3\",\n        entry: [\n          {\n            locationCode: this.bookingDetails.zone.locationCode,\n            startAt: this.bookingDetails.booking.startAt,\n            quantity: \"1\",\n          },\n        ],\n        paymentType: \"APPLE_PAY\",\n        billingDetails: tokenResult?.details?.billing,\n        verification_token: verfiedToken,\n        source_id: tokenResult.token,\n        phoneNumber: \"+\" + this.bookingDetails?.user?.contact,\n        email: tokenResult?.details?.shipping?.contact?.email || \"\",\n      };\n\n      try {\n        var addCard = await APIHelper(\n          \"POST\",\n          \"/api/v1/payment/addCard/\" + this.bookingId,\n          cardData\n        );\n        console.log(addCard);\n        if (addCard?.data?.status == false) {\n          this.alertMsg = addCard?.data?.message || \"Error in authorizing the payment\"\n          this.alertIcon = \"mdi-alert-outline\"\n          this.alertDialog = true;\n        } else {\n          await this.getBookingState();\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async getBookingState() {\n      if (this.bookingId != null) {\n        try {\n          var bDetails = await APIHelper(\n            \"GET\",\n            \"/api/v1/booking/config/\" + this.bookingId\n          );\n          this.$store.commit(\n            \"SET_BOOKING_DETAILS\",\n            bDetails.data?.data ? bDetails.data.data : null\n          );\n          let bookingState = bDetails.data?.data?.booking?.state\n            ? bDetails.data.data.booking.state\n            : null;\n\n          if (bookingState == 8 || bookingState == 10 || bookingState == 11) {\n            this.$router.replace({ path: \"/checkout\" });\n          } else if (bookingState == 2) {\n            this.$router.replace({ path: \"/checkedin\" });\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    },\n    async verifyBuyer(payments, tokenResult) {\n      const verificationDetails = {\n        billingContact: tokenResult?.details?.billing,\n        amount: \"1\",\n        currencyCode: \"USD\",\n        intent: \"CHARGE\",\n      };\n      const verificationResults = await payments.verifyBuyer(\n        tokenResult?.token,\n        verificationDetails\n      );\n      return verificationResults.token;\n    },\n    async initializeCard(payments) {\n      const card = await payments.card();\n      // await card.attach(\"#card-container\");\n\n      return card;\n    },\n\n    buildPaymentRequest(payments) {\n      return payments.paymentRequest({\n        countryCode: \"US\",\n        currencyCode: \"USD\",\n        requestBillingContact: true,\n        requestShippingContact: true,\n        total: {\n          amount: \"1.00\",\n          label: \"Total\",\n          pending: true,\n        },\n      });\n    },\n\n    async initializeApplePay(payments) {\n      const paymentRequest = this.buildPaymentRequest(payments);\n      const applePay = await payments.applePay(paymentRequest);\n      // Note: You do not need to `attach` applePay.\n      return applePay;\n    },\n\n    async createPayment(token) {\n      let locationId = this.locationId;\n      const body = JSON.stringify({\n        locationId,\n        sourceId: token,\n      });\n\n      const paymentResponse = await fetch(\"/payment\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body,\n      });\n\n      if (paymentResponse.ok) {\n        return paymentResponse.json();\n      }\n\n      const errorBody = await paymentResponse.text();\n      throw new Error(errorBody);\n    },\n\n    // Change the parameter to 'paymentMethod'\n    async tokenize(paymentMethod) {\n      const tokenResult = await paymentMethod.tokenize();\n      if (tokenResult.status === \"OK\") {\n        return tokenResult;\n      } else {\n        let errorMessage = `Tokenization failed with status: ${tokenResult.status}`;\n        if (tokenResult.errors) {\n          errorMessage += ` and errors: ${JSON.stringify(tokenResult.errors)}`;\n        }\n\n        throw new Error(errorMessage);\n      }\n    },\n\n    // status is either SUCCESS or FAILURE;\n    displayPaymentResults(status) {\n      console.log(\"displayPaymentResults ==> status\", status);\n      // const statusContainer = document.getElementById(\n      //   \"payment-status-container\"\n      // );\n      // if (status === \"SUCCESS\") {\n      //   statusContainer.classList.remove(\"is-failure\");\n      //   statusContainer.classList.add(\"is-success\");\n      // } else {\n      //   statusContainer.classList.remove(\"is-success\");\n      //   statusContainer.classList.add(\"is-failure\");\n      // }\n\n      // statusContainer.style.visibility = \"visible\";\n    },\n  },\n};\n</script>\n<style lang=\"less\">\n#apple-pay-button {\n  height: 40px !important;\n  width: 82% !important;\n  display: inline-block;\n  -webkit-appearance: -apple-pay-button;\n  -apple-pay-button-style: black;\n}\n\n#payment-form {\n  max-width: 550px;\n  min-width: 300px;\n  margin: 15px auto;\n}\n\n.buyer-inputs {\n  display: flex;\n  gap: 20px;\n  justify-content: space-between;\n  border: none;\n  margin: 0;\n  padding: 0;\n}\n\n#card-container {\n  margin-top: 45px;\n  /* this height depends on the size of the container element */\n  /* We transition from a single row to double row at 485px */\n  /* Settting this min-height minimizes the impact of the card form loading */\n  min-height: 90px;\n}\n\n#gift-card-container {\n  margin-top: 45px;\n  min-height: 90px;\n}\n\n@media screen and (max-width: 500px) {\n  #card-container {\n    min-height: 140px;\n  }\n}\n\n#ach-button {\n  margin-top: 20px;\n}\n\n#landing-page-layout {\n  width: 80%;\n  margin: 150px auto;\n  max-width: 1000px;\n}\n\n#its-working {\n  color: #737373;\n}\n\n#example-container {\n  width: 100%;\n  border: 1px solid #b3b3b3;\n  padding: 48px;\n  margin: 32px 0;\n  border-radius: 12px;\n}\n\n#example-list {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n}\n\n#customer-input {\n  margin-bottom: 40px;\n}\n\n#card-input {\n  margin-top: 0;\n  margin-bottom: 40px;\n}\n\n// h3 {\n//   margin: 0;\n// }\n\n// p {\n//   line-height: 24px;\n// }\n\n// label {\n//   font-size: 12px;\n//   width: 100%;\n// }\n\n// input {\n//   padding: 12px;\n//   width: 100%;\n//   border-radius: 5px;\n//   border-width: 1px;\n//   margin-top: 20px;\n//   font-size: 16px;\n//   border: 1px solid rgba(0, 0, 0, 0.15);\n// }\n\n// input:focus {\n//   border: 1px solid #006aff;\n// }\n\n// button {\n//   color: #ffffff;\n//   background-color: #006aff;\n//   border-radius: 5px;\n//   cursor: pointer;\n//   border-style: none;\n//   user-select: none;\n//   outline: none;\n//   font-size: 16px;\n//   font-weight: 500;\n//   line-height: 24px;\n//   padding: 12px;\n//   width: 100%;\n//   box-shadow: 1px;\n// }\n\n// button:active {\n//   background-color: rgb(0, 85, 204);\n// }\n\n// button:disabled {\n//   background-color: rgba(0, 0, 0, 0.05);\n//   color: rgba(0, 0, 0, 0.3);\n// }\n\n#payment-status-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid rgba(0, 0, 0, 0.05);\n  box-sizing: border-box;\n  border-radius: 50px;\n  margin: 0 auto;\n  width: 225px;\n  height: 48px;\n  visibility: hidden;\n}\n\n#payment-status-container.missing-credentials {\n  width: 350px;\n}\n\n#payment-status-container.is-success:before {\n  content: \"\";\n  background-color: #00b23b;\n  width: 16px;\n  height: 16px;\n  margin-right: 16px;\n  -webkit-mask: url(\"data:image/svg+xml,%3Csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16ZM11.7071 6.70711C12.0968 6.31744 12.0978 5.68597 11.7093 5.29509C11.3208 4.90422 10.6894 4.90128 10.2973 5.28852L11 6C10.2973 5.28852 10.2973 5.28853 10.2973 5.28856L10.2971 5.28866L10.2967 5.28908L10.2951 5.29071L10.2886 5.29714L10.2632 5.32224L10.166 5.41826L9.81199 5.76861C9.51475 6.06294 9.10795 6.46627 8.66977 6.90213C8.11075 7.4582 7.49643 8.07141 6.99329 8.57908L5.70711 7.29289C5.31658 6.90237 4.68342 6.90237 4.29289 7.29289C3.90237 7.68342 3.90237 8.31658 4.29289 8.70711L6.29289 10.7071C6.68342 11.0976 7.31658 11.0976 7.70711 10.7071L11.7071 6.70711Z' fill='black' fill-opacity='0.9'/%3E%3C/svg%3E\");\n  mask: url(\"data:image/svg+xml,%3Csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16ZM11.7071 6.70711C12.0968 6.31744 12.0978 5.68597 11.7093 5.29509C11.3208 4.90422 10.6894 4.90128 10.2973 5.28852L11 6C10.2973 5.28852 10.2973 5.28853 10.2973 5.28856L10.2971 5.28866L10.2967 5.28908L10.2951 5.29071L10.2886 5.29714L10.2632 5.32224L10.166 5.41826L9.81199 5.76861C9.51475 6.06294 9.10795 6.46627 8.66977 6.90213C8.11075 7.4582 7.49643 8.07141 6.99329 8.57908L5.70711 7.29289C5.31658 6.90237 4.68342 6.90237 4.29289 7.29289C3.90237 7.68342 3.90237 8.31658 4.29289 8.70711L6.29289 10.7071C6.68342 11.0976 7.31658 11.0976 7.70711 10.7071L11.7071 6.70711Z' fill='black' fill-opacity='0.9'/%3E%3C/svg%3E\");\n}\n\n#payment-status-container.is-success:after {\n  content: \"Payment successful\";\n  font-size: 14px;\n  line-height: 16px;\n}\n\n#payment-status-container.is-failure:before {\n  content: \"\";\n  background-color: #cc0023;\n  width: 16px;\n  height: 16px;\n  margin-right: 16px;\n  -webkit-mask: url(\"data:image/svg+xml,%3Csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16ZM5.70711 4.29289C5.31658 3.90237 4.68342 3.90237 4.29289 4.29289C3.90237 4.68342 3.90237 5.31658 4.29289 5.70711L6.58579 8L4.29289 10.2929C3.90237 10.6834 3.90237 11.3166 4.29289 11.7071C4.68342 12.0976 5.31658 12.0976 5.70711 11.7071L8 9.41421L10.2929 11.7071C10.6834 12.0976 11.3166 12.0976 11.7071 11.7071C12.0976 11.3166 12.0976 10.6834 11.7071 10.2929L9.41421 8L11.7071 5.70711C12.0976 5.31658 12.0976 4.68342 11.7071 4.29289C11.3166 3.90237 10.6834 3.90237 10.2929 4.29289L8 6.58579L5.70711 4.29289Z' fill='black' fill-opacity='0.9'/%3E%3C/svg%3E%0A\");\n  mask: url(\"data:image/svg+xml,%3Csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16ZM5.70711 4.29289C5.31658 3.90237 4.68342 3.90237 4.29289 4.29289C3.90237 4.68342 3.90237 5.31658 4.29289 5.70711L6.58579 8L4.29289 10.2929C3.90237 10.6834 3.90237 11.3166 4.29289 11.7071C4.68342 12.0976 5.31658 12.0976 5.70711 11.7071L8 9.41421L10.2929 11.7071C10.6834 12.0976 11.3166 12.0976 11.7071 11.7071C12.0976 11.3166 12.0976 10.6834 11.7071 10.2929L9.41421 8L11.7071 5.70711C12.0976 5.31658 12.0976 4.68342 11.7071 4.29289C11.3166 3.90237 10.6834 3.90237 10.2929 4.29289L8 6.58579L5.70711 4.29289Z' fill='black' fill-opacity='0.9'/%3E%3C/svg%3E%0A\");\n}\n\n#payment-status-container.is-failure:after {\n  content: \"Payment failed\";\n  font-size: 14px;\n  line-height: 16px;\n}\n\n#payment-status-container.missing-credentials:before {\n  content: \"\";\n  background-color: #cc0023;\n  width: 16px;\n  height: 16px;\n  margin-right: 16px;\n  -webkit-mask: url(\"data:image/svg+xml,%3Csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16ZM5.70711 4.29289C5.31658 3.90237 4.68342 3.90237 4.29289 4.29289C3.90237 4.68342 3.90237 5.31658 4.29289 5.70711L6.58579 8L4.29289 10.2929C3.90237 10.6834 3.90237 11.3166 4.29289 11.7071C4.68342 12.0976 5.31658 12.0976 5.70711 11.7071L8 9.41421L10.2929 11.7071C10.6834 12.0976 11.3166 12.0976 11.7071 11.7071C12.0976 11.3166 12.0976 10.6834 11.7071 10.2929L9.41421 8L11.7071 5.70711C12.0976 5.31658 12.0976 4.68342 11.7071 4.29289C11.3166 3.90237 10.6834 3.90237 10.2929 4.29289L8 6.58579L5.70711 4.29289Z' fill='black' fill-opacity='0.9'/%3E%3C/svg%3E%0A\");\n  mask: url(\"data:image/svg+xml,%3Csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16ZM5.70711 4.29289C5.31658 3.90237 4.68342 3.90237 4.29289 4.29289C3.90237 4.68342 3.90237 5.31658 4.29289 5.70711L6.58579 8L4.29289 10.2929C3.90237 10.6834 3.90237 11.3166 4.29289 11.7071C4.68342 12.0976 5.31658 12.0976 5.70711 11.7071L8 9.41421L10.2929 11.7071C10.6834 12.0976 11.3166 12.0976 11.7071 11.7071C12.0976 11.3166 12.0976 10.6834 11.7071 10.2929L9.41421 8L11.7071 5.70711C12.0976 5.31658 12.0976 4.68342 11.7071 4.29289C11.3166 3.90237 10.6834 3.90237 10.2929 4.29289L8 6.58579L5.70711 4.29289Z' fill='black' fill-opacity='0.9'/%3E%3C/svg%3E%0A\");\n}\n\n#payment-status-container.missing-credentials:after {\n  content: \"applicationId and/or locationId is incorrect\";\n  font-size: 14px;\n  line-height: 16px;\n}\n\n#payment-status-container.is-success.store-card-message:after {\n  content: \"Store card successful\";\n}\n\n#payment-status-container.is-failure.store-card-message:after {\n  content: \"Store card failed\";\n}\n\n#afterpay-button {\n  height: 40px;\n}\n</style>\n"],"sourceRoot":"src/views"}]}