{"remainingRequest":"/home/vignesh/DIVRT/revamp-guest-webapp/node_modules/babel-loader/lib/index.js!/home/vignesh/DIVRT/revamp-guest-webapp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vignesh/DIVRT/revamp-guest-webapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vignesh/DIVRT/revamp-guest-webapp/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vignesh/DIVRT/revamp-guest-webapp/src/App.vue","mtime":1688986034872},{"path":"/home/vignesh/DIVRT/revamp-guest-webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/revamp-guest-webapp/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/vignesh/DIVRT/revamp-guest-webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/revamp-guest-webapp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-app>\n    <v-main>\n      <v-system-bar absolute dark color=\"red\" v-if=\"buildMode == 'dev'\" class=\"justify-space-between\"><span>version : {{\n        version\n      }}</span><span>build : development</span></v-system-bar>\n      <transition name=\"zoom\" mode=\"out-in\">\n        <router-view></router-view>\n      </transition>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\nimport API from './api';\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: 'App',\n\n  data: () => ({\n    //\n  }),\n  computed: {\n    ...mapGetters({\n      buildMode: \"getterBuildMode\",\n      bookingDetails: \"getterBookingDetails\",\n      zoneDetails: \"getterZoneDetails\",\n    }),\n    focusTask() {\n      const params = new URLSearchParams(window.location.search)\n      return params.get('sessiontype') == 'cico' || params.get('sessiontype') == 'addpayment' || params.get('sessiontype') == 'successreservation' || params.get('sessiontype') == 'confirmreservation' || params.get('sessiontype') == 'odReceipt' || params.get('sessiontype') == 'makepayment' || params.get('sessiontype') == 'ondemand';\n      // window.location.hash == \"#/addpayment\" || window.location.hash == \"#/createreservation\" || window.location.hash == \"#/successreservation\" || window.location.hash == \"#/confirmreservation\" || window.location.hash == \"#/ondemand/odReceipt\" || window.location.hash == \"#/ondemand/makepayment\" || window.location.hash == \"#/ondemand\" || window.location.hash == \"#/prepaidhost/odReceipt\" || window.location.hash == \"#/prepaidhost/makepayment\" || window.location.hash == \"#/prepaidhost\"\n    },\n    prepaidExit() {\n      return this.bookingDetails.booking?.type == 13 && this.checkReservationEndDate\n    },\n    checkReservationEndDate() {\n      return this.bookingDetails?.booking?.revEnd &&\n        new Date((Number(this.bookingDetails.booking.revEnd) - Number(this.bookingDetails.zone.timezoneoffset)) * 1000).getTime() - new Date().getTime() > 0\n        ? true\n        : false;\n    },\n    version() {\n      return process.env.VUE_APP_VERSION;\n    },\n  },\n  mounted() {\n    document.addEventListener(\"visibilitychange\", function () {\n      if (document.hidden) {\n        // stop running expensive task\n      } else if (this.focusTask) {\n        // page has focus, begin running task\n      } else {\n        // window.location.reload();\n      }\n    });\n  },\n  async created() {\n    var self = this;\n\n    const params = new URLSearchParams(window.location.search)\n    let searchParamKey = params.has('zcode') ? '?zcode' : params.has('gateId') !== null ? '?gateId' : \"\";\n    let searchParamValue = params.has('zcode') ? params.get('zcode') : params.has('gateId') !== null ? params.get('gateId') : \"\";\n    if (window.location.search.includes('/receipt')) {\n      console.log(window.location.search)\n      return;\n    }\n    switch (searchParamKey) {\n      case \"?zcode\":\n        await self.getZoneDetails(searchParamKey, searchParamValue);\n        if (self.isPQREndReservation) {\n          await self.getOnDemandZoneDetails(searchParamValue);\n          self.setDefaultDate();\n        }\n        break;\n      case \"?gateid\":\n        //await self.getZoneDetails(searchParamKey, searchParamValue);\n        break;\n    }\n\n    if (\n      window.location.search.includes(\"zcode\") &&\n      (window.location.href.includes(\"createreservation\"))\n    ) {\n      return;\n    } else if (window.location.href.includes(\"successreservation\")) {\n      self.$router.replace({ path: \"createreservation\" });\n    } else if (window.location.href.includes(\"confirmreservation\")) {\n      self.$router.push({ name: 'hostpass', query: { zcode: params.get('zcode'), sessiontype: 'hostpass' } });\n      return\n    } else if (\n      window.location.search.includes(\"zcode\") &&\n      window.location.href.includes(\"ondemand\")\n    ) {\n      self.$store.commit('SET_TEMPLATE_FLAGS', 'ondemand-flag')\n      self.$router.push({ name: 'ondemand', query: { zcode: params.get('zcode'), sessiontype: 'ondemand' } });\n      return;\n    }\n    else if ((window.location.search.includes(\"zcode\") ||\n      window.location.search.includes(\"gateid\")) && window.location.href.includes('bid')) {\n      return;\n    }\n    else if (\n      (window.location.search.includes(\"zcode\") ||\n        window.location.search.includes(\"gateid\"))\n    ) {\n      self.$router.push({ name: 'cico', query: { zcode: params.get('zcode'), sessiontype: 'cico' } });\n      return;\n    }\n    else if (window.location.search.includes(\"bid\")) {\n\n\n      let bookingId = params.get('bid');\n      let bookingState = bookingId == \"/\" ? null : await self.getBookingState(bookingId);\n      let entryMode = this.bookingDetails?.booking?.entryMode;\n      switch (bookingState) {\n        case \"0\":\n          self.$router.push({ name: 'checkin', query: { bid: bookingId, state: 'checkin' } });\n          break;\n        case \"2\":\n          if (entryMode == \"OD\") {\n            self.$router.push({ name: 'odExtension', query: { bid: bookingId, mode: 'extendondemand' } });\n            return;\n          }\n          this.bookingDetails?.booking?.isLPRVerified == \"0\" &&\n            this.bookingDetails?.zone?.isGated == \"0\"\n            ? self.$router.push({ name: 'loadsession', query: { bid: bookingId, state: 'loadsession' } })\n            : self.$router.push({ name: 'checkedin', query: { bid: bookingId, state: 'checkedin' } });\n\n          break;\n        case \"8\":\n          // console.log(this.prepaidExit)\n          if (this.prepaidExit) {\n            this.reEnter(bookingId)\n          }\n          else if (!(window.location.href.includes('/receipt'))) {\n            self.$router.push({ name: 'checkout', query: { bid: bookingId, state: 'checkout' } });\n          }\n          break;\n        case \"5\":\n          self.$router.push({ name: 'success', query: { bid: bookingId, state: 'success' } });\n          break;\n        case \"10\":\n          if (this.prepaidExit) {\n            this.reEnter(bookingId);\n          }\n          else if (!(window.location.href.includes('/receipt'))) {\n            self.$router.push({ name: 'checkout', query: { bid: bookingId, state: 'checkout' } });\n          }\n          break;\n        case \"11\":\n          if (this.prepaidExit) {\n            this.reEnter(bookingId);\n          }\n          else if (!(window.location.href.includes('/receipt'))) {\n            self.$router.push({ name: 'checkout', query: { bid: bookingId, state: 'checkout' } });\n          }\n          break;\n        case \"16\":\n          self.$router.push({ name: 'unpaidexit', query: { bid: bookingId, state: 'unpaidexit' } });\n          break;\n        case \"19\":\n          self.$router.push({ name: 'promisetopay', query: { bid: bookingId, sessiontype: 'promisetopay' } });\n          break;\n        case \"-99\":\n          self.$router.push({ name: 'expired', query: { bid: bookingId, state: 'expired' } });\n          break;\n        case \"99\":\n          self.$router.push({ name: 'cancelled', query: { bid: bookingId, state: 'cancelled' } });\n          break;\n        case null:\n          self.$router.push({ name: 'invalidbooking', query: { bid: bookingId, state: 'invalidbooking' } });\n          break;\n      }\n    }\n    else {\n      self.$router.push({ name: 'nothing', })\n    }\n  },\n  methods: {\n    /**\n       * @method getZoneDetails fetch the zone details and commit SET_ZONE_DETAILS mutation.\n       */\n    async getZoneDetails(searchParamKey, searchParamValue) {\n      try {\n        var zoneDetails = await API.getZoneDetails(searchParamKey, searchParamValue)\n        this.$store.commit(\"SET_ZONE_DETAILS\", zoneDetails?.data?.zone);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    /**\n         * @method getOnDemandZoneDetails fetch the ondemand zone details from Pcom and commit SET_ZONE_DETAILS mutation.\n         */\n    async getOnDemandZoneDetails(searchParamValue) {\n      this.loading = true;\n      try {\n        var zoneDetails = await API.getOnDemandZoneDetails(searchParamValue);\n        this.loading = false;\n        if (zoneDetails.data?.lot) {\n          this.$store.commit(\n            \"SET_ON_DEMAND_ZONE_DETAILS\",\n            zoneDetails.data?.lot\n          );\n        } else {\n          this.alertMsg =\n            zoneDetails?.data?.message || \"Error in loading location details.\";\n          this.alertDialog = true;\n        }\n      } catch (error) {\n        this.loading = false;\n        console.log(error);\n      }\n    },\n    async reEnter(bookingId) {\n      if (bookingId != null) {\n        try {\n          var self = this;\n          var bDetails = await API.reEnter(bookingId)\n          this.$store.commit(\n            \"SET_BOOKING_DETAILS\",\n            bDetails.data?.data ? bDetails.data.data : null\n          );\n          let bookingState = bDetails.data?.data?.booking?.state\n          if ((bookingState == 8 || bookingState == 10 || bookingState == 11) && (!(window.location.href.includes('/receipt')))) {\n            self.$router.push({ name: 'checkout', query: { bid: bookingId, state: 'checkout' } });\n          } else if (bookingState == 2) {\n            self.$router.push({ name: 'checkedin', query: { bid: bookingId, state: 'checkedin' } });\n          } else if (bookingState == 0) {\n            self.$router.push({ name: 'checkin', query: { bid: bookingId, state: 'checkin' } });\n          } else {\n            setTimeout(async () => {\n              await self.reEnter();\n            }, 4000);\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    },\n    async getBookingState(bookingId) {\n      try {\n        var bookingDetails = await API.getBookingState(bookingId)\n        // bookingDetails.data.serverName == 'dev' ? document.querySelector('meta[name=\"theme-color\"]').setAttribute(\"content\", \"#43A047\") : \"\";\n        this.$store.commit(\n          \"SET_BOOKING_DETAILS\",\n          bookingDetails.data?.data ? bookingDetails.data.data : null\n        );\n        this.$store.commit(\n          \"SET_BUILD_MODE\",\n          bookingDetails.data?.serverName\n            ? bookingDetails.data.serverName\n            : null\n        );\n        return bookingDetails.data?.data?.booking?.state\n          ? bookingDetails.data.data.booking.state\n          : null;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  }\n};\n\n</script>\n<style lang=\"less\">\n.v-application {\n  background-position: center !important;\n  background-repeat: no-repeat !important;\n  background-size: 100% 100% !important;\n  font-family: 'Work Sans' !important;\n}\n\ninput {\n  font-family: 'Work Sans' !important;\n\n}\n\n.v-input input {\n  max-height: none !important;\n}\n\n.fit-height {\n  height: 100%;\n}\n\n\n\n.fit-width {\n  width: 100%;\n}\n\n.color-black {\n  color: #44515a;\n}\n\n.page-enter-active,\n.page-leave-active {\n  transition: opacity 1s, transform 1s;\n}\n\n.page-enter,\n.page-leave-to {\n  opacity: 0;\n  transform: translateX(-30%);\n}\n\n.zoom-enter-active,\n.zoom-leave-active {\n  animation-duration: 0.5s;\n  animation-fill-mode: both;\n  animation-name: zoom;\n}\n\n.zoom-leave-active {\n  animation-direction: reverse;\n}\n\n.add_licence_plate_btn {\n  border-radius: 7px;\n  background-color: #FDAE33 !important;\n}\n\n@keyframes zoom {\n  from {\n    opacity: 0;\n    transform: scale3d(0.3, 0.3, 0.3);\n  }\n\n  100% {\n    opacity: 1;\n  }\n}\n\n.add_credit_card_btn {\n  background-color: #FDAE33 !important;\n  border-radius: 10px !important;\n  height: 43px;\n  text-transform: none;\n  font-weight: 400px;\n  font-size: 16px;\n\n}\n\n.dialog-card {\n  border-radius: 10px;\n  overflow-x: hidden !important;\n  overflow-y: scroll !important;\n  -webkit-scrollbar: none;\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n  max-height: 550px;\n}</style>"],"sourceRoot":"src"}]}