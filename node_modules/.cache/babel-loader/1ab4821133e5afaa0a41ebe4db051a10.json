{"remainingRequest":"/home/vignesh/DIVRT/revamp-guest-webapp/node_modules/babel-loader/lib/index.js!/home/vignesh/DIVRT/revamp-guest-webapp/node_modules/eslint-loader/index.js??ref--13-0!/home/vignesh/DIVRT/revamp-guest-webapp/src/utils/util.js","dependencies":[{"path":"/home/vignesh/DIVRT/revamp-guest-webapp/src/utils/util.js","mtime":1688732501369},{"path":"/home/vignesh/DIVRT/revamp-guest-webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/revamp-guest-webapp/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/vignesh/DIVRT/revamp-guest-webapp/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvaG9tZS92aWduZXNoL0RJVlJUL3JldmFtcC1ndWVzdC13ZWJhcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmlzLWludGVnZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIudG8tZml4ZWQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIucGFyc2UtZmxvYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc2V0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmpvaW4uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnRyaW0uanMiOwppbXBvcnQgeyBmb3JtYXQgfSBmcm9tICJkYXRlLWZucyI7CmltcG9ydCBydWxlcyBmcm9tICJAL3V0aWxzL3J1bGVzIjsKCnZhciBjb252ZXJ0VG9EZWNpbWFsID0gZnVuY3Rpb24gY29udmVydFRvRGVjaW1hbChkYXRhKSB7CiAgaWYgKE51bWJlci5pc0ludGVnZXIoTnVtYmVyKGRhdGEpKSB8fCBOdW1iZXIoZGF0YSkgPT0gMCkgewogICAgcmV0dXJuIGRhdGE7CiAgfSBlbHNlIHsKICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChOdW1iZXIoZGF0YSkpLnRvRml4ZWQoMik7CiAgfQp9OwovKiogaWYgdGhlIG51bWJlciBpcyBsZXNzIHRoYXQgMTAgPT4gYWRkICcwJyB0byB0aGUgbnVtYmVyICovCgoKdmFyIG1pblR3b0RpZ2l0cyA9IGZ1bmN0aW9uIG1pblR3b0RpZ2l0cyhuKSB7CiAgcmV0dXJuIChuIDwgMTAgPyAnMCcgOiAnJykgKyBuOwp9OwovKiogQ2hlY2sgaWYgdGhlIGRhdGFba2V5XSBpcyBlbXB0eSBmb3IgYWxsIHJvd3MgICovCgoKdmFyIGlzS2V5RGF0YUVtcHR5ID0gZnVuY3Rpb24gaXNLZXlEYXRhRW1wdHkoa2V5LCBkYXRhKSB7CiAgaWYgKGRhdGEubGVuZ3RoID09IDApIHsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgdmFyIGtleURhdGEgPSBfdG9Db25zdW1hYmxlQXJyYXkobmV3IFNldChkYXRhLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgcmV0dXJuIGl0ZW1ba2V5XTsKICB9KSkpOwoKICByZXR1cm4ga2V5RGF0YS5maWx0ZXIoZnVuY3Rpb24gKG0pIHsKICAgIHJldHVybiBtOwogIH0pLmxlbmd0aCA9PSAwID8gdHJ1ZSA6IGZhbHNlOwp9OwoKdmFyIGdlblBhc3MgPSBmdW5jdGlvbiBnZW5QYXNzKCkgewogIHZhciBjID0gImFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6IjsKICBjICs9IGMudG9VcHBlckNhc2UoKSArIDEyMzQ1Njc4OTA7CiAgcmV0dXJuIF90b0NvbnN1bWFibGVBcnJheShBcnJheSg2KSkubWFwKGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiBjW35+KE1hdGgucmFuZG9tKCkgKiA2MildOwogIH0pLmpvaW4oIiIpOwp9OwoKdmFyIHJvdW5kID0gZnVuY3Rpb24gcm91bmQodGltZSkgewogIHZhciBleGl0ZGF0ZSA9IHRpbWUgIT09IG51bGwgJiYgdGltZSAhPT0gJycgPyBmb3JtYXQodGltZSwgJ3l5eXkvTU0vZGQnKSA6IG5ldyBEYXRlKCk7CiAgdmFyIHNlbGVjdGVkTWlucyA9IHRpbWUgIT09IG51bGwgJiYgdGltZSAhPT0gJycgPyBmb3JtYXQodGltZSwgJ21tJykgOiBuZXcgRGF0ZSgpOwogIHZhciBzZWxlY3RlZEhvdXJzID0gdGltZSAhPT0gbnVsbCAmJiB0aW1lICE9PSAnJyA/IGZvcm1hdCh0aW1lLCAnaGgnKSA6IG5ldyBEYXRlKCk7CiAgdmFyIHNlbGVjdGVkQU1QTSA9IHRpbWUgIT09IG51bGwgJiYgdGltZSAhPT0gJycgPyBmb3JtYXQodGltZSwgJ2EnKSA6IG5ldyBEYXRlKCk7CgogIGlmIChleGl0ZGF0ZSAhPSBudWxsICYmIHNlbGVjdGVkTWlucyAhPSAnMTUnICYmIHNlbGVjdGVkTWlucyAhPSAnMzAnICYmIHNlbGVjdGVkTWlucyAhPSAnNDUnICYmIHNlbGVjdGVkTWlucyAhPSAnMDAnICYmIHNlbGVjdGVkTWlucyAhPSBudWxsICYmIHNlbGVjdGVkTWlucyAhPSAiIiAmJiBzZWxlY3RlZEhvdXJzICE9IG51bGwgJiYgc2VsZWN0ZWRIb3VycyAhPSAiIiAmJiBzZWxlY3RlZEFNUE0gIT0gbnVsbCAmJiBzZWxlY3RlZEFNUE0gIT0gIiIpIHsKICAgIHZhciBpbnRlcnZhbE1pbGxpc2Vjb25kcyA9IDkwMDAwMDsKICAgIHZhciBkYXRldGltZSA9IG5ldyBEYXRlKGV4aXRkYXRlICsgIiAiICsgc2VsZWN0ZWRIb3VycyArICI6IiArIHNlbGVjdGVkTWlucyArICIgIiArIHNlbGVjdGVkQU1QTSk7CiAgICB2YXIgaW50ZXJ2YWwgPSBkYXRldGltZS5nZXRUaW1lKCkgJSBpbnRlcnZhbE1pbGxpc2Vjb25kczsKICAgIHZhciBkZWx0YSA9IGludGVydmFsID09PSAwID8gMCA6IGRhdGV0aW1lLmdldFRpbWUoKSAtIGludGVydmFsOwogICAgZGVsdGEgKz0gaW50ZXJ2YWxNaWxsaXNlY29uZHM7IC8vIHRoaXMuZXhpdFRpbWVTZWxlY3RlZCA9IE9iamVjdC5hc3NpZ24odGhpcy5leGl0VGltZVNlbGVjdGVkLCB7IGhoOiBmb3JtYXQobmV3IERhdGUoZGVsdGEpLCAnaGgnKSwgbW06IGZvcm1hdChuZXcgRGF0ZShkZWx0YSksICdtbScpLCBhOiBmb3JtYXQobmV3IERhdGUoZGVsdGEpLCAnYScpLCB9KQoKICAgIHJldHVybiBuZXcgRGF0ZShkZWx0YSk7CiAgfQp9OwoKdmFyIHVwcGVyY2FzZSA9IGZ1bmN0aW9uIHVwcGVyY2FzZShsaWNlbmNlUGxhdGUpIHsKICBpZiAocnVsZXMuYWxwaGFOdW1lcmljKGxpY2VuY2VQbGF0ZSkgPT09ICJNdXN0IGJlIGFscGhhbnVtZXJpYyIpIHsKICAgIGxpY2VuY2VQbGF0ZSA9IGxpY2VuY2VQbGF0ZS5yZXBsYWNlKC9bXlx3XHNdL2dpLCAnJyk7CiAgfQoKICBsaWNlbmNlUGxhdGUgPSBsaWNlbmNlUGxhdGUudHJpbSgpOwogIGxpY2VuY2VQbGF0ZSA9IGxpY2VuY2VQbGF0ZS50b1VwcGVyQ2FzZSgpOwogIHJldHVybiBsaWNlbmNlUGxhdGU7Cn07Cgp2YXIgZ2V0UGF5bWVudFR5cGUgPSBmdW5jdGlvbiBnZXRQYXltZW50VHlwZSh0eXBlKSB7CiAgc3dpdGNoICh0eXBlKSB7CiAgICBjYXNlICdBUFBMRV9QQVknOgogICAgICB7CiAgICAgICAgcmV0dXJuICdBcHBsZSBQYXknOwogICAgICB9CgogICAgY2FzZSAnR09PR0xFX1BBWSc6CiAgICAgIHsKICAgICAgICByZXR1cm4gJ0dvb2dsZSBQYXknOwogICAgICB9CgogICAgY2FzZSAnQ2FyZCc6CiAgICAgIHsKICAgICAgICByZXR1cm4gJ0NhcmQnOwogICAgICB9CiAgfQp9OwoKZXhwb3J0IHsgY29udmVydFRvRGVjaW1hbCwgbWluVHdvRGlnaXRzLCBpc0tleURhdGFFbXB0eSwgZ2VuUGFzcywgcm91bmQsIHVwcGVyY2FzZSwgZ2V0UGF5bWVudFR5cGUgfTs="},{"version":3,"sources":["/home/vignesh/DIVRT/revamp-guest-webapp/src/utils/util.js"],"names":["format","rules","convertToDecimal","data","Number","isInteger","parseFloat","toFixed","minTwoDigits","n","isKeyDataEmpty","key","length","keyData","Set","map","item","filter","m","genPass","c","toUpperCase","Array","Math","random","join","round","time","exitdate","Date","selectedMins","selectedHours","selectedAMPM","intervalMilliseconds","datetime","interval","getTime","delta","uppercase","licencePlate","alphaNumeric","replace","trim","getPaymentType","type"],"mappings":"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","sourcesContent":["import { format } from \"date-fns\";\nimport rules from \"@/utils/rules\";\nconst convertToDecimal = (data) => {\n    if (Number.isInteger(Number(data)) || Number(data) == 0) {\n        return data\n    } else {\n        return Number.parseFloat(Number(data)).toFixed(2)\n    }\n}\n/** if the number is less that 10 => add '0' to the number */\nconst minTwoDigits = (n) => {\n    return (n < 10 ? '0' : '') + n;\n}\n\n\n/** Check if the data[key] is empty for all rows  */\nconst isKeyDataEmpty = (key, data) => {\n    if (data.length == 0) {\n        return true;\n    }\n    let keyData = [\n        ...new Set(data.map((item) => item[key])),\n    ]\n    return keyData.filter((m) => m).length == 0 ? true : false;\n}\nconst genPass = () => {\n    let c = \"abcdefghijklmnopqrstuvwxyz\";\n    c += c.toUpperCase() + 1234567890;\n    return [...Array(6)].map(() => c[~~(Math.random() * 62)]).join(\"\");\n}\n\nconst round = (time) => {\n    let exitdate = time !== null && time !== '' ? format(time, 'yyyy/MM/dd') : new Date();\n    let selectedMins = time !== null && time !== '' ? format(time, 'mm') : new Date();\n    let selectedHours = time !== null && time !== '' ? format(time, 'hh') : new Date();\n    let selectedAMPM = time !== null && time !== '' ? format(time, 'a') : new Date();\n    if (exitdate != null && selectedMins != '15' && selectedMins != '30' && selectedMins != '45' && selectedMins != '00' && selectedMins != null && selectedMins != \"\" && selectedHours != null && selectedHours != \"\" && selectedAMPM != null && selectedAMPM != \"\") {\n        let intervalMilliseconds = 900000\n        let datetime = new Date(exitdate + \" \" + selectedHours + \":\" + selectedMins + \" \" + selectedAMPM)\n        let interval = datetime.getTime() % intervalMilliseconds;\n        let delta = interval === 0 ? 0 : datetime.getTime() - interval;\n        delta += intervalMilliseconds;\n        // this.exitTimeSelected = Object.assign(this.exitTimeSelected, { hh: format(new Date(delta), 'hh'), mm: format(new Date(delta), 'mm'), a: format(new Date(delta), 'a'), })\n        return new Date(delta)\n    }\n}\nconst uppercase = (licencePlate) => {\n    if (rules.alphaNumeric(licencePlate) === \"Must be alphanumeric\") {\n        licencePlate = licencePlate.replace(/[^\\w\\s]/gi, '')\n    }\n    licencePlate = licencePlate.trim()\n    licencePlate = licencePlate.toUpperCase();\n    return licencePlate\n}\nconst getPaymentType = (type) => {\n    switch (type) {\n        case 'APPLE_PAY': {\n            return 'Apple Pay';\n        }\n        case 'GOOGLE_PAY': {\n            return 'Google Pay'\n        }\n        case 'Card': {\n            return 'Card'\n        }\n    }\n}\nexport { convertToDecimal, minTwoDigits, isKeyDataEmpty, genPass, round, uppercase, getPaymentType }"]}]}