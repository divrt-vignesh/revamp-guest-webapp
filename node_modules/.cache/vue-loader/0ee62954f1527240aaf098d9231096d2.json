{"remainingRequest":"/home/vignesh/DIVRT/guest-webapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vignesh/DIVRT/guest-webapp/src/views/Create.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/home/vignesh/DIVRT/guest-webapp/src/views/Create.vue","mtime":1687512364559},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5pbmZvcm1hdGlvbiB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2VkZjFmNDsKfQoKLmJvb2tpbmdfaGVhZGVyIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgYm90dG9tOiAzMHB4OwogIGxlZnQ6IDE2cHg7CiAgZm9udC1zaXplOiAxOHB4OwogIGZvbnQtd2VpZ2h0OiBib2xkZXI7Cn0KCi5hZGRfbGljZW5jZV9wbGF0ZV9idG4gewogIHdpZHRoOiAxMDAlOwogIGJhY2tncm91bmQtY29sb3I6ICNmMjU1NWMgIWltcG9ydGFudDsKICBmb250LXNpemU6IDE4cHggIWltcG9ydGFudDsKICBmb250LXdlaWdodDogNzAwICFpbXBvcnRhbnQ7CiAgbGV0dGVyLXNwYWNpbmc6IG5vcm1hbCAhaW1wb3J0YW50OwogIGhlaWdodDogNTBweCAhaW1wb3J0YW50Owp9CgouY291bnRyeS1zZWxlY3Rvci5tZC5oYXMtdmFsdWUgLmNvdW50cnktc2VsZWN0b3JfX2lucHV0IHsKICBib3JkZXI6IG5vbmU7CiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYigxMTgsIDExOCwgMTE4KTsKfQoKLmlucHV0LXRlbC5tZCAuaW5wdXQtdGVsX19pbnB1dCB7CiAgYm9yZGVyOiBub25lOwogIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2IoMTE4LCAxMTgsIDExOCk7CiAgbWFyZ2luLWxlZnQ6IDJweDsKfQoKLmlucHV0LXRlbC5pcy1mb2N1c2VkLmhhcy1lcnJvciAuaW5wdXQtdGVsX19pbnB1dCB7CiAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50Owp9CgouaW5wdXQtdGVsLmlzLWZvY3VzZWQuaXMtdmFsaWQgLmlucHV0LXRlbF9faW5wdXQgewogIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDsKfQoKLnRpbWUtcGlja2VyLWlucHV0IHsKICBmbGV4OiAxIDEgYXV0bzsKICBsaW5lLWhlaWdodDogMjBweDsKICBwYWRkaW5nOiA4cHggMCA4cHg7CiAgbWF4LXdpZHRoOiAxMDAlOwogIG1pbi13aWR0aDogMHB4OwogIGZvbnQtc2l6ZTogMTZweDsKICBmb250LWZhbWlseTogIldvcmsgU2FucyI7Cn0KCi50aW1lLXBpY2tlci1pbnB1dCA6Zm9jdXMtdmlzaWJsZSB7CiAgb3V0bGluZS1jb2xvcjogIzE5NzZkMjsKfQoKLnZ1ZV9fdGltZS1waWNrZXIgaW5wdXQuZGlzcGxheS10aW1lIHsKICBwYWRkaW5nOiAwcHggIWltcG9ydGFudDsKICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzc2NzY3NjsKICBib3JkZXItdG9wOiAwcHg7CiAgYm9yZGVyLXJpZ2h0OiAwcHg7CiAgYm9yZGVyLWxlZnQ6IDBweDsKfQoKLnZ1ZV9fdGltZS1waWNrZXItZHJvcGRvd24gdWwgbGk6bm90KFtkaXNhYmxlZF0pLmFjdGl2ZSwKLnZ1ZV9fdGltZS1waWNrZXItZHJvcGRvd24gdWwgbGk6bm90KFtkaXNhYmxlZF0pLmFjdGl2ZTpmb2N1cywKLnZ1ZV9fdGltZS1waWNrZXItZHJvcGRvd24gdWwgbGk6bm90KFtkaXNhYmxlZF0pLmFjdGl2ZTpob3ZlciwKLnZ1ZV9fdGltZS1waWNrZXIgLmRyb3Bkb3duIHVsIGxpOm5vdChbZGlzYWJsZWRdKS5hY3RpdmUsCi52dWVfX3RpbWUtcGlja2VyIC5kcm9wZG93biB1bCBsaTpub3QoW2Rpc2FibGVkXSkuYWN0aXZlOmZvY3VzLAoudnVlX190aW1lLXBpY2tlciAuZHJvcGRvd24gdWwgbGk6bm90KFtkaXNhYmxlZF0pLmFjdGl2ZTpob3ZlciB7CiAgYmFja2dyb3VuZDogI2YyNTU1YyAhaW1wb3J0YW50Owp9CgpbZGF0YS1rZXk9ImFtIl0gewogIGJvcmRlcjogMC4ycHggc29saWQgcmVkOwogIGJvcmRlci1yYWRpdXM6IDJweDsKICBtYXJnaW4tbGVmdDogMnB4Owp9CgpbZGF0YS1rZXk9InBtIl0gewogIGJvcmRlcjogMC4ycHggc29saWQgcmVkOwogIG1hcmdpbi10b3A6IDAuNWVtOwogIG1hcmdpbi1sZWZ0OiAycHg7Cn0KCi5ob3VycyAuaGludCB7CiAgcG9zaXRpb246IHN0aWNreTsKICB0b3A6IDA7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGJhY2tncm91bmQ6ICM2ODgwOGM7CiAgei1pbmRleDogMTsKICAtd2Via2l0LXRleHQtZmlsbC1jb2xvcjogd2hpdGU7CiAgbWFyZ2luLWJvdHRvbTogMTBweDsKfQoKLmFwbXMgLmhpbnQgewogIHBvc2l0aW9uOiBzdGlja3k7CiAgdG9wOiAwOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBiYWNrZ3JvdW5kOiAjNjg4MDhjOwogIHotaW5kZXg6IDE7CiAgbWFyZ2luLWxlZnQ6IDFweDsKICAtd2Via2l0LXRleHQtZmlsbC1jb2xvcjogd2hpdGU7CiAgbWFyZ2luLWJvdHRvbTogMTBweDsKfQoKLmhvdXJzOjotd2Via2l0LXNjcm9sbGJhciB7CiAgZGlzcGxheTogbm9uZTsKfQoKLm1pbnV0ZXM6Oi13ZWJraXQtc2Nyb2xsYmFyIHsKICBkaXNwbGF5OiBub25lOwp9CgoubWludXRlcyAuaGludCB7CiAgcG9zaXRpb246IHN0aWNreTsKICB0b3A6IDA7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGJhY2tncm91bmQ6ICM2ODgwOGM7CiAgei1pbmRleDogMTsKICAtd2Via2l0LXRleHQtZmlsbC1jb2xvcjogd2hpdGU7CiAgbWFyZ2luLWJvdHRvbTogMTBweDsKfQoKaHIgewogIGJvcmRlcjogMXB4IHNvbGlkICNmZmJjMWY7Cn0KCmlucHV0W3R5cGU9bnVtYmVyXSB7CiAgLW1vei1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7Cn0KCi8vIC52dWVfX3RpbWUtcGlja2VyIGlucHV0LmRpc3BsYXktdGltZXsKLy8gICBib3JkZXItYm90dG9tOjFweCBzb2xpZCAjNzY3Njc2OwovLyAgICAgYm9yZGVyLXRvcDowcHg7Ci8vICAgICBib3JkZXItcmlnaHQ6MHB4OwovLyAgICAgYm9yZGVyLWxlZnQ6MHB4OwovLyB9Cg=="},{"version":3,"sources":["Create.vue"],"names":[],"mappingspfile":"Create.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-container class=\"pa-\" fluid>\n    <v-row class=\"text-center\" no-gutters>\n      <v-col cols=\"12\">\n        <v-img alt=\"PARKING.COM\" class=\"my-3\" height=\"42\" contain src=\"../assets/logo_huge_drk.png\" />\n      </v-col>\n    </v-row>\n    <v-row no-gutters>\n      <v-col>\n        <v-card class=\"mx-auto rounded-lg\" max-width=\"374\">\n          <v-dialog v-model=\"loading\" persistent>\n            <v-card class=\"pa-4\">\n              <v-progress-circular indeterminate color=\"red\"></v-progress-circular>\n              <span class=\"ml-4\" style=\"font-size: 14px\">Please wait...</span>\n            </v-card>\n          </v-dialog>\n          <template slot=\"progress\">\n            <v-progress-linear color=\"red\" height=\"10\" indeterminate></v-progress-linear>\n          </template>\n          <div style=\"position: relative\">\n            <v-img class=\"rounded-t-lg\" max-height=\"150px\" style=\"filter: brightness(50%)\" :src=\"zoneDetails.hasOwnProperty('image') &&\n              zoneDetails.image != '' &&\n              zoneDetails.image != null\n              ? zoneDetails.image\n              : zoneImgURL\n              \" :lazy-src=\"zoneDetails.hasOwnProperty('image') &&\n    zoneDetails.image != '' &&\n    zoneDetails.image != null\n    ? zoneDetails.image\n    : zoneImgURL\n    \" alt=\"Parking.com garage\">\n              <template v-slot:placeholder>\n                <v-row class=\"fill-height ma-0\" align=\"center\" justify=\"center\" no-gutters>\n                  <v-progress-circular indeterminate color=\"grey lighten-5\"></v-progress-circular>\n                </v-row>\n              </template>\n            </v-img>\n            <div class=\"booking_header white--text text-left mr-4\" v-if=\"isPQREndReservation\">\n              Welcome to\n              {{\n                onDemandZoneDetails.hasOwnProperty(\"name\")\n                ? onDemandZoneDetails.name\n                : \"\"\n              }}\n            </div>\n            <div class=\"booking_header white--text text-left mr-4\" v-else>\n              You are parked at\n              {{\n                zoneDetails.hasOwnProperty(\"zoneName\")\n                ? zoneDetails.zoneName\n                : \"\"\n              }}\n            </div>\n          </div>\n          <v-card-text class=\"pa-0\">\n            <v-form ref=\"detailsForm\">\n              <v-container fluid pa-0>\n                <v-row no-gutters class=\"pt-2 information pa-0\">\n                  <v-col cols=\"2\" class=\"align-self-center\">\n                    <v-img src=\"../assets/list_divider_step.imageset/list_divider_step.png\" width=\"45px\" v-if=\"!infoFlag\">\n                      <div class=\"row text-center align-self-center pl-5\">\n                        <div class=\"col-12 text-center\">\n                          <span style=\"\n                                                                          font-size: large;\n                                                                          font-weight: bold;\n                                                                          color: white;\n                                                                        \">1</span>\n                        </div>\n                      </div>\n                    </v-img>\n                    <v-img src=\"../assets/list_divider_step_completed.imageset/list_divider_step_completed.png\"\n                      width=\"45px\" v-if=\"infoFlag\">\n                      <div class=\"row text-center pl-5\">\n                        <div class=\"col-12 text-center\">\n                          <span style=\"\n                                                                          font-size: larger;\n                                                                          font-weight: bold;\n                                                                          color: white;\n                                                                        \">✓</span>\n                        </div>\n                      </div>\n                    </v-img>\n                  </v-col>\n                  <v-col cols=\"10\" class=\"mt-3\">\n                    <p style=\"color: #f2555c; font-weight: bolder\">\n                      Your Information\n                    </p>\n                  </v-col>\n                </v-row>\n                <v-row no-gutters v-if=\"!isPQREndReservation\">\n                  <v-col cols=\"12\" class=\"px-4 mt-2 text-center color-black\" style=\"font-size: 12px\">\n                    <p class=\"mb-0\" v-if=\"zoneDetails.lpr_status == '1'\">\n                      Enter your license plate and phone number for hassle-free\n                      parking\n                    </p>\n                    <p class=\"mb-0\" v-else>\n                      Enter your phone number for hassle-free parking\n                    </p>\n                  </v-col>\n                </v-row>\n                <v-row no-gutters>\n                  <v-col cols=\"12\" class=\"px-4 text-center color-black\" style=\"font-size: 12px\">\n                    <v-row no-gutters class=\"py-2\">\n                      <v-col cols=\"1\" class=\"text-right align-self-center\">\n                        <v-icon class=\"material-icons-outlined\">send_to_mobile</v-icon>\n                      </v-col>\n                      <v-col cols=\"11\" class=\"px-2\" v-if=\"!edtPhoneInput\">\n                        <VuePhoneNumberInput v-model=\"contactObj.phoneNumber\" size=\"md\" @update=\"onContactInput\"\n                          show-code-on-list :default-country-code=\"contactOptions.defaultCountry\"\n                          :disabled=\"contactDisabled\" :color=\"contactOptions.color\"\n                          :valid-color=\"contactOptions.validColor\" :error-color=\"contactOptions.errorColor\"\n                          :border-radius=\"contactOptions.contactBorderRadius\" :error=\"!isContactValid\" required\n                          :translations=\"contactOptions.translations\" />\n                      </v-col>\n                      <v-col cols=\"11\" class=\"px-2\" v-if=\"edtPhoneInput\">\n                        <v-text-field v-model=\"contactObj.phoneNumber\" disabled></v-text-field>\n                      </v-col>\n                      <v-col cols=\"1\"> </v-col>\n                      <v-col cols=\"11\" class=\"px-4\" v-if=\"!isPQREndReservation\">\n                        <span style=\"font-size: 10px; line-height: 1.5\">Phone number is mandatory for generating the\n                          receipt</span>\n                      </v-col>\n                    </v-row>\n                    <v-row no-gutters class=\"py-2\">\n                      <v-col cols=\"1\" class=\"text-right align-self-center\">\n                        <v-icon class=\"material-icons-outlined\">pin</v-icon>\n                      </v-col>\n                      <v-col cols=\"11\" class=\"px-2\">\n                        <v-text-field class=\"pt-0\" v-model=\"licencePlate\" hide-details=\"auto\" maxlength=\"8\" :rules=\"[rules.alphaNumeric]\"\n                          @keyup=\"uppercase\" label=\"License Plate *\" clearable></v-text-field>\n                      </v-col>\n                    </v-row>\n\n                    <v-row no-gutters class=\"pt-1\" v-if=\"isPQREndReservation\">\n                      <v-spacer></v-spacer>\n                      <v-col cols=\"11\" class=\"px-2 py-0 pb-3\">\n                        <p class=\"text-left mb-0\" style=\"font-size: 10px; line-height: 1.5\">\n                          Enter your full plate number to avoid citation. Max of\n                          8 characters. Do not include spaces or special\n                          characters.\n                        </p>\n                      </v-col>\n                    </v-row>\n                  </v-col>\n                </v-row>\n                <v-row no-gutters v-if=\"isPQREndReservation\">\n                  <v-col cols=\"12\">\n                    <v-row no-gutters class=\"pt-2 information pa-0\">\n                      <v-col cols=\"2\" class=\"align-self-center\">\n                        <v-img src=\"../assets/list_divider_step.imageset/list_divider_step.png\" width=\"45px\"\n                          v-if=\"!timeFlag\">\n                          <div class=\"row text-center align-self-center pl-5\">\n                            <div class=\"col-12 text-center\">\n                              <span style=\"\n                                                                              font-size: large;\n                                                                              font-weight: bold;\n                                                                              color: white;\n                                                                            \">2</span>\n                            </div>\n                          </div>\n                        </v-img>\n                        <v-img src=\"../assets/list_divider_step_completed.imageset/list_divider_step_completed.png\"\n                          width=\"45px\" v-if=\"timeFlag\">\n                          <div class=\"row text-center pl-5\">\n                            <div class=\"col-12 text-center\">\n                              <span style=\"\n                                        font-size: larger;\n                                        font-weight: bold;\n                                        color: white;\n                                      \">✓</span>\n                            </div>\n                          </div>\n                        </v-img>\n                      </v-col>\n                      <v-col cols=\"10\" class=\"mt-3\">\n                        <p style=\"color: #f2555c; font-weight: bolder\">\n                          Set Your Exit Date <span\n                            v-if=\"isPQREndReservation && Object.hasOwnProperty.call(zoneDetails, 'timePickerConfiguration') && zoneDetails.timePickerConfiguration == '1'\">and\n                            Time</span>\n                        </p>\n                      </v-col>\n                    </v-row>\n                    <v-row no-gutters class=\"pt-2 \">\n                      <v-spacer></v-spacer>\n                      <v-col cols=\"11\" class=\"px-2 py-0\">\n                        <p class=\"text-left ma-0\" v-if=\"isPQREndReservation\">\n                          If you're a hotel guest, this is your checkout date.\n                        </p>\n                      </v-col>\n                    </v-row>\n                    <v-row no-gutters>\n                      <v-col cols=\"12\" class=\"px-4 text-center color-black\" style=\"font-size: 12px\">\n\n                        <v-row no-gutters class=\"py-2\">\n                          <v-col cols=\"1\" class=\"text-right align-self-center\">\n                            <v-icon class=\"material-icons-outlined\">today</v-icon>\n                          </v-col>\n                          <v-col cols=\"11\" class=\"px-2\">\n                            <v-text-field v-model=\"computedDateFormatted\" @click=\"() => { openDatePicker = true }\"\n                              hide-details=\"auto\" readonly></v-text-field>\n                            <v-dialog v-model=\"openDatePicker\" max-width=\"450px\">\n                              <v-card style=\"background-color: #F2555C;color: white;\"><v-card-title>\n                                  <v-row no-gutters>\n                                    <v-col class=\"text-left\" cols=\"12\">\n                                      <span style=\"font-size:15px;color: #fabbbe;\">{{ time !== null && time !== \"\" ?\n                                        formattedYear : \"\" }}</span>\n                                    </v-col>\n                                    <v-col>\n                                      <span style=\"font-size:30px\"> {{ time !== null && time !== \"\" ? formattedDateTime :\n                                        \"\"\n                                      }}</span>\n                                    </v-col>\n                                  </v-row>\n                                </v-card-title></v-card>\n                              <Calendar inline class=\"text-left\" value :stepMinute=\"15\" hourFormat=\"12\"\n                                :minDate=\"minTimeDate\" @date-select=\"onTimePickerChange\" :maxDate=\"maxTimeDate\"\n                                v-model=\"time\" />\n                            </v-dialog>\n                          </v-col>\n                        </v-row>\n                        <v-row no-gutters class=\"pt-2 pb-4\"\n                          v-if=\"Object.hasOwnProperty.call(zoneDetails, 'timePickerConfiguration') && zoneDetails.timePickerConfiguration == '1'\">\n                          <v-col cols=\"1\" class=\"text-right align-self-center\">\n                            <v-icon class=\"material-icons-outlined\">schedule</v-icon>\n                          </v-col>\n                          <v-col cols=\"11\">\n                            <v-row no-gutters class=\"pb-0\">\n                              <v-col class=\"pb-0 px-2\">\n                                <v-text-field v-model=\"formattedTime\" @click=\"() => {\n                                  openTimePicker = true;\n                                }\" readonly></v-text-field>\n                                <v-dialog v-model=\"openTimePicker\" max-width=\"300px\"\n                                  @click:outside=\"() => { setDefaultDate(); onTimePickerChange() }\">\n                                  <v-card style=\"background-color: #F2555C;color: white;\"><v-card-title>What time will you\n                                      exit?</v-card-title></v-card>\n                                  <Calendar inline time-only show-time class=\"text-left \" value :stepMinute=\"15\"\n                                    hourFormat=\"12\" :minDate=\"minTimeDate\" :maxDate=\"maxTimeDate\" v-model=\"time\" />\n                                </v-dialog>\n                              </v-col>\n                            </v-row>\n                          </v-col>\n                        </v-row>\n                        <v-row class=\"text-left mt-0 px-2 py-0 pb-3\">\n                          <v-col cols=\"1\"></v-col>\n                          <v-col class=\"pt-0\">\n                            <p style=\"\n                              color: #1976d2;\n                              font-weight: bold;\n                              line-height: 16px;\n                            \" class=\"ma-0\">\n                              HOURS OF OPERATION\n                            </p>\n                            <p class=\"ma-0\">\n                              Today :\n                              {{\n                                onDemandZoneDetails.hasOwnProperty(\n                                  \"todaysHoursOfOperation\"\n                                ) &&\n                                onDemandZoneDetails.todaysHoursOfOperation.hasOwnProperty(\n                                  \"is24HourOpen\"\n                                ) &&\n                                onDemandZoneDetails.todaysHoursOfOperation\n                                  .is24HourOpen == true\n                                ? \"Open 24 / 7\"\n                                : \"\"\n                              }}\n                            </p>\n                          </v-col>\n                        </v-row>\n                      </v-col>\n                    </v-row>\n                    <v-row no-gutters class=\"pt-2 information pa-0\" v-if=\"estimate != null && Object.keys(estimate).length != 0\n                        \">\n                      <v-col cols=\"2\" class=\"align-self-center\">\n                        <v-img src=\"../assets/list_divider_step.imageset/list_divider_step.png\" width=\"45px\"\n                          v-if=\"!paymentFlag\">\n                          <div class=\"row text-center align-self-center pl-5\">\n                            <div class=\"col-12 text-center\">\n                              <span style=\"\n                                                                              font-size: large;\n                                                                              font-weight: bold;\n                                                                              color: white;\n                                                                            \">3</span>\n                            </div>\n                          </div>\n                        </v-img>\n                        <v-img src=\"../assets/list_divider_step_completed.imageset/list_divider_step_completed.png\"\n                          width=\"45px\" v-if=\"paymentFlag\">\n                          <div class=\"row text-center pl-5\">\n                            <div class=\"col-12 text-center\">\n                              <span style=\"\n                                                                              font-size: larger;\n                                                                              font-weight: bold;\n                                                                              color: white;\n                                                                            \">✓</span>\n                            </div>\n                          </div>\n                        </v-img>\n                      </v-col>\n                      <v-col cols=\"10\" class=\"mt-3\">\n                        <p style=\"color: #f2555c; font-weight: bolder\">\n                          Your Parking Fees\n                        </p>\n                      </v-col>\n                    </v-row>\n\n                    <Estimate :singleQuotes=\"singleQuotes\" :doubleQuotes=\"doubleQuotes\" :estimate=\"estimate\"\n                      :beforeEstimate=\"beforeEstimate\" :formattedEntryDisplayTime=\"formattedEntryDisplayTime\" ></Estimate>\n                  </v-col>\n                </v-row>\n              </v-container>\n            </v-form>\n          </v-card-text>\n          <v-card-actions class=\"pt-0 mt-4 pb-10\">\n            <v-container class=\"pa-0 text-center\" v-if=\"isPQREndReservation\">\n              <v-row no-gutters>\n                <v-col cols=\"12\" class=\"px-2\">\n                  <v-btn rounded elevation=\"20\" class=\"add_licence_plate_btn white--text\" :disabled=\"disableSubmitBtn\"\n                    :loading=\"addPaymentBtnLoading\" @click=\"addPayment\">Add Payment</v-btn>\n                </v-col>\n              </v-row>\n              <v-row no-gutters>\n                <v-col cols=\"12\" class=\"px-2 mt-4\">\n                  <v-btn rounded elevation=\"20\" width=\"50%\" class=\"white--text\" color=\"primary\"\n                    v-if=\"this.casinoDetails.userDetail.bid\" @click=\"reloadBooking\">Cancel</v-btn>\n                </v-col>\n              </v-row>\n            </v-container>\n            <v-container class=\"pa-0\" fluid v-else>\n              <v-row no-gutters>\n                <v-col cols=\"12\" class=\"px-2\">\n                  <v-btn rounded elevation=\"20\" class=\"add_licence_plate_btn white--text\"\n                    :loading=\"addLicencePlateBtnLoading\" :disabled=\"disableAddLicencePlateBtn\" @click=\"createSession()\">{{\n                      reEnterPlate ? \"Confirm\" : \"Continue\" }}</v-btn>\n                </v-col>\n              </v-row>\n              <v-row no-gutters>\n                <v-col cols=\"12\" class=\"mt-2 text-center color-black px-2\" style=\"font-size: 12px\">\n                  <p class=\"mb-0\" v-show=\"reEnterPlate\">\n                    Please provide correct license plate and phone number.\n                    Without one, you could be subject to a parking violation and\n                    issued a citation.\n                  </p>\n                  <p class=\"mb-0\">\n                    A valid credit card is required to park. Without one, you\n                    could be subject to a parking violation and issued a\n                    citation.\n                  </p>\n                </v-col>\n              </v-row>\n            </v-container>\n          </v-card-actions>\n        </v-card>\n      </v-col>\n    </v-row>\n    <v-dialog v-model=\"alertDialog\" persistent max-width=\"290\">\n      <v-card class=\"pa-0\">\n        <v-card-title class=\"justify-center\" style=\"position: relative\">\n          <v-icon x-large color=\"red accent-2\">mdi-alert-outline</v-icon>\n        </v-card-title>\n        <v-card-text class=\"text-center mt-5\">\n          <span style=\"font-size: 20px\">{{ alertMsg }}</span>\n        </v-card-text>\n        <v-card-actions class=\"text-center pb-6\">\n          <v-container pa-0 fluid>\n            <v-row no-gutters>\n              <v-col cols=\"12\">\n                <v-btn rounded block elevation=\"0\" class=\"white--text exit_dialog_btn\"\n                  @click=\"alertDialog = false\">Close</v-btn>\n              </v-col>\n            </v-row>\n          </v-container>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <v-dialog v-model=\"confirmCreateSessionDialog\" max-width=\"fit-content\">\n      <v-card class=\"pa-0\">\n        <v-card-title class=\"justify-center\">\n          <v-icon x-large color=\"red accent-2\">mdi-alert-outline</v-icon>\n        </v-card-title>\n        <v-card-text class=\"text-center mt-5\" style=\"font-size: 15px\">\n          <span v-html=\"errMsg\"></span>\n        </v-card-text>\n        <v-card-actions class=\"text-center pb-6\">\n          <v-container pa-0 fluid>\n            <v-row no-gutters>\n              <v-col cols=\"12\">\n                <v-btn rounded block elevation=\"0\" class=\"white--text exit_dialog_btn\"\n                  @click=\"setReenterPlateFlag\">OK</v-btn>\n              </v-col>\n            </v-row>\n          </v-container>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-container>\n</template>\n<script>\n// import Vue from \"vue\";\nimport Estimate from '../components/Estimate.vue'\nimport { EventBus } from \"@/lib/EventBus\";\nimport { mapGetters } from \"vuex\";\nimport { addMinutes, addDays, addHours } from \"date-fns\";\nimport { format, isValid } from \"date-fns\";\nimport \"primevue/resources/themes/saga-blue/theme.css\"       //theme\nimport \"primevue/resources/primevue.min.css\"                 //core css\nimport \"primeicons/primeicons.css\"                           //icons\nimport { dateToTimeZoneDate } from \"@/utils/formatDateTime\";\n// import axios from \"axios\";\nimport Calendar from '../uiComponents/Calendar/Calendar.vue'\nimport APIHelper from \"../apiHelper\";\nimport VuePhoneNumberInput from \"vue-phone-number-input\";\nimport \"vue-phone-number-input/dist/vue-phone-number-input.css\";\n// import moment from \"moment\";\n// Vue.use(moment);\nimport rules from \"@/utils/rules\";\nexport default {\n  data: () => ({\n    date: \"\",\n    time: \"\",\n    openTimePicker: false,\n    openDatePicker: false,\n    minTimeDate: null,\n    maxTimeDate: null,\n    // isPQREndReservation: true,\n    currentDate: format(new Date(), 'yyyy-MM-dd'),\n    edtEntryTime: null,\n    edtPhoneInput: false,\n    contactDisabled: false,\n    selectedPlate: \"\",\n    reEnterPlate: false,\n    edtBid: null,\n    confirmCreateSessionDialog: false,\n    addLicencePlateBtnLoading: false,\n    errDialog: false,\n    errMsg: \"\",\n    alertDialog: false,\n    alertMsg: \"\",\n    stopTime: \"\",\n    exitTimeSelected: {},\n    timePickerHrRange: null,\n    timeExceeded: false,\n    timePickerMinRange: null,\n\n    disableAddPaymentBtn: false,\n    maxDateTime: null,\n    getRateCall: false,\n    getRateText: \"\",\n    Timemenu: false,\n    startDate: \"\",\n    estimate: null,\n    beforeEstimate: null,\n    Datemenu: false,\n    exitDate: null,\n    dateFormatted: null,\n    rules: rules,\n    isContactValid: true,\n    licencePlate: \"\",\n    contactObj: {},\n    loading: false,\n    contactOptions: {\n      color: \"#0288D1\",\n      validColor: \"#0288D1\",\n      contactBorderRadius: 0,\n      errorColor: \"#FF5252\",\n      defaultCountry: \"US\",\n      translations: {\n        phoneNumberLabel: \"Contact No\",\n      },\n    },\n    addPaymentBtnLoading: false,\n  }),\n  components: {\n    VuePhoneNumberInput, Calendar, Estimate\n  },\n  beforeRouteEnter(to, from, next) {\n    next(async (vm) => {\n      let searchParams = window.location.search.split(\"=\");\n      let searchParamKey = searchParams.length > 0 ? searchParams[0] : \"\";\n      let searchParamValue = searchParams.length > 0 ? searchParams[1] : \"\";\n      switch (searchParamKey) {\n        case \"?zcode\":\n          await vm.getZoneDetails(searchParamKey, searchParamValue);\n          if (vm.isPQREndReservation) {\n            await vm.getOnDemandZoneDetails(searchParamValue);\n            vm.setDefaultDate();\n          }\n          break;\n        case \"?gateid\":\n          //await self.getZoneDetails(searchParamKey, searchParamValue);\n          break;\n      }\n      if (vm.isPQREndReservation) {\n        vm.contactObj =\n          vm.casinoDetails != null &&\n            Object.hasOwnProperty.call(vm.casinoDetails, \"userDetail\") &&\n            Object.hasOwnProperty.call(vm.casinoDetails?.userDetail, \"contact\") &&\n            vm.casinoDetails?.userDetail?.contact != undefined &&\n            vm.casinoDetails?.userDetail?.contact != null\n            ? Object.assign(vm.contactObj, {\n              countryCode:\n                vm.casinoDetails?.userDetail?.contact.slice(0, -10) == \"+91\"\n                  ? \"IN\"\n                  : vm.casinoDetails?.userDetail?.contact.slice(0, -10) ==\n                    \"+1\"\n                    ? \"US\"\n                    : \"\",\n              phoneNumber: vm.casinoDetails?.userDetail?.contact,\n              formattedNumber: \"+\" + vm.casinoDetails.userDetail.contact,\n            })\n            : {};\n        vm.licencePlate = vm.casinoDetails?.userDetail.plate\n          ? vm.casinoDetails?.userDetail.plate\n          : \"\";\n        if (window.location.href.includes('bid')) {\n          let hrefParams = window.location.href.split('createsession');\n          let paramArray = hrefParams[1].split('&')\n          let phoneParam = paramArray.length >= 1 ? paramArray[0].split('=')[1] : \"\";\n          let bidParam = paramArray.length >= 2 ? paramArray[1].split('=')[1] : \"\";\n          let plateParam = paramArray.length >= 3 ? paramArray[2].split('=')[1] : \"\";\n          let entrytimeparam = paramArray.length >= 4 ? paramArray[3].split('=')[1] : \"\";          // vm.contactObj.phoneNumber = phoneParam;\n          vm.edtEntryTime = entrytimeparam != null && entrytimeparam !== \"\" && entrytimeparam != undefined ? format(new Date(vm.formatExitDateTime(entrytimeparam, 'date')), \"yyyy-MM-dd'T'HH:mm:ss\") : format(dateToTimeZoneDate(new Date(), vm.zoneDetails.timezone), \"yyyy-MM-dd'T'HH:mm:ss\")\n          vm.licencePlate = plateParam;\n          vm.edtBid = bidParam;\n          let guestContact = phoneParam ? {\n            countryCode:\n              phoneParam.slice(0, -10) == \"91\"\n                ? \"IN\"\n                : phoneParam.slice(0, -10) == \"1\"\n                  ? \"US\"\n                  : \"\",\n            phoneNumber: phoneParam,\n            formattedNumber: \"+\" + phoneParam,\n          } : vm.contactObj;\n          if (phoneParam !== \"\" && phoneParam !== null && phoneParam != undefined) {\n            vm.edtPhoneInput = true;\n            vm.contactObj = Object.assign({}, guestContact);\n            vm.contactDisabled = true;\n            vm.contactObj.isValid = true;\n          }\n          let commitData = {\n            plate: vm.licencePlate,\n            contact: vm.contactObj?.formattedNumber,\n            bid: vm.edtBid,\n            entrytime: vm.edtEntryTime,\n            edtParams: hrefParams[1]\n          }\n          vm.$store.commit(\"SET_CASINO_USERDETAILS\", commitData);\n          vm.$store.commit(\"SET_TEMPLATE_FLAGS\", 'atlantic-flag');\n\n        }\n      }\n      else {\n        vm.edtPhoneInput = false;\n      }\n    });\n  },\n  watch: {\n    time(newVal, oldVal) {\n      if (oldVal != null && newVal != null && oldVal != newVal && oldVal != \"\" && newVal != \"\" && (isValid(newVal))) {\n        this.round(newVal);\n      }\n      // this.setTimePicker(newVal);\n    },\n  },\n  computed: {\n    formattedDateTime() {\n      return this.time !== null && this.time !== undefined && this.time !== \"\" ? format(this.time, 'iii, LLL dd') : \"\"\n    },\n    formattedYear() {\n      return this.time !== null && this.time !== undefined && this.time !== \"\" ? format(this.time, 'yyyy') : \"\"\n    },\n    formattedTime() {\n      return this.time !== null && this.time !== undefined && this.time !== \"\" ? format(this.time, 'hh:mm aa') : \"\"\n    },\n    ...mapGetters({\n      casinoDetails: \"getterCasinoDetails\",\n      zoneDetails: \"getterZoneDetails\",\n      onDemandZoneDetails: \"getterOnDemandZoneDetails\",\n      templateFlags: \"getterTemplateFlags\",\n      isPQREndReservation: \"getterZoneIsPQREndReservation\",\n    }),\n    singleQuotes() {\n      return Object.hasOwnProperty.call(this.zoneDetails, 'timePickerConfiguration') && this.zoneDetails.timePickerConfiguration == \"0\" ? (format(this.time, 'yyyy-MM-dd') == this.currentDate || (this.beforeEstimate !== null && this.beforeEstimate !== undefined && this.beforeEstimate !== \"\" && this.estimate !== null && this.estimate !== undefined && this.estimate !== \"\" && this.beforeEstimate.grandTotal == this.estimate.grandTotal)) : true\n    },\n    doubleQuotes() {\n      return Object.hasOwnProperty.call(this.zoneDetails, 'timePickerConfiguration') && this.zoneDetails.timePickerConfiguration == \"0\" ? (format(this.time, 'yyyy-MM-dd') != this.currentDate && (this.beforeEstimate !== null && this.beforeEstimate !== undefined && this.beforeEstimate !== \"\" && this.estimate !== null && this.estimate !== undefined && this.estimate !== \"\" && this.beforeEstimate.grandTotal != this.estimate.grandTotal)) : false\n    },\n    formattedEntryDisplayTime() {\n      return this.casinoDetails.userDetail.entrytime !== null && this.casinoDetails.userDetail.entrytime !== undefined && this.casinoDetails.userDetail.entrytime !== \"\" ? format((new Date(this.casinoDetails.userDetail.entrytime)), 'hh:mm a') : format(dateToTimeZoneDate(new Date(), this.zoneDetails.timezone), 'hh:mm a');\n    },\n    infoFlag() {\n      return this.contactObj == null ||\n        !this.contactObj.isValid ||\n        this.contactObj.phoneNumber == \"\" ||\n        this.contactObj.phoneNumber == null ||\n        this.licencePlate === \"\" ||\n        this.licencePlate === null\n        ? false\n        : true;\n    },\n    timeFlag() {\n      return this.time == null ||\n        this.disableAddPaymentBtn ||\n        this.estimate === null ||\n        this.estimate === \"\" || (Object.hasOwnProperty.call(this.zoneDetails, 'timePickerConfiguration') && this.zoneDetails.timePickerConfiguration == \"1\" && format(this.time, 'yyyy-MM-dd') != format(this.minTimeDate, 'yyyy-MM-dd') && (this.beforeEstimate === null || this.beforeEstimate == \"\" || this.beforeEstimate == undefined)) ||\n        this.time === \"\" || this.time == undefined\n        ? false\n        : true;\n    },\n    paymentFlag() {\n      return this.estimate === null ||\n        this.estimate === \"\" ||\n        this.estimate.hasOwnProperty.call(\"grandTotal\") ||\n        this.estimate.hasOwnProperty.call(\"totalPrice\") ||\n        this.estimate.hasOwnProperty.call(\"totalFee\") ||\n        this.estimate.hasOwnProperty.call(\"totalTax\") || (this.zoneDetails?.timePickerConfiguration == '1' && this.beforeEstimate === null && this.beforeEstimate === \"\" && this.beforeEstimate === null && this.beforeEstimate.hasOwnProperty.call(\"totalPrice\") && this.beforeEstimate.hasOwnProperty.call(\"totalFee\") && this.beforeEstimate.hasOwnProperty.call(\"totalTax\"))\n        ? false\n        : true;\n    },\n    computedDateFormatted() {\n      return this.time != null && this.time != \"\" && this.time != undefined ? format(this.time, 'MM/dd/yyyy') : \"\"\n    },\n    disableSubmitBtn() {\n      let disabled =\n        this.contactObj == null ||\n        !this.contactObj.isValid ||\n        this.contactObj.phoneNumber == \"\" ||\n        this.contactObj.phoneNumber == null ||\n        this.licencePlate === \"\" ||\n        this.licencePlate === null ||\n        this.disableAddPaymentBtn ||\n        this.estimate === null ||\n        this.estimate === \"\"\n      this.exitDate === \"\";\n      let selectedMins = this.time !== null && this.time !== undefined && this.time !== \"\" ? format(this.time, 'mm') : new Date();\n      let selectedHours = this.time !== null && this.time !== undefined && this.time !== \"\" ? format(this.time, 'hh') : new Date();\n      let selectedAMPM = this.time !== null && this.time !== undefined && this.time !== \"\" ? format(this.time, 'aaa') : new Date();\n      disabled =\n        disabled ||\n        selectedMins == null ||\n        selectedMins === \"\" ||\n        selectedMins == undefined ||\n        selectedHours == null ||\n        selectedHours === \"\" ||\n        selectedHours == undefined || selectedAMPM == null ||\n        selectedAMPM === \"\" ||\n        selectedAMPM == undefined || this.time === null || this.time === \"\" || this.time === undefined\n      disabled =\n        this.licencePlate != \"\" && this.licencePlate != null\n          ? disabled || /^[a-z0-9]+$/i.test(this.licencePlate) === false\n          : disabled;\n      return disabled;\n    },\n    disableAddLicencePlateBtn() {\n      if (this.zoneDetails.lpr_status == \"0\") {\n        return this.isContactValid == false ? true : false;\n      } else {\n        return this.isContactValid == false ||\n          this.licencePlate == \"\" ||\n          this.licencePlate == null ||\n          /^[a-z0-9]+$/i.test(this.licencePlate) === false\n          ? true\n          : false;\n      }\n    },\n  },\n  mounted() {\n    EventBus.$on('SET_TIME', () => {\n      this.onTimePickerChange();\n    })\n    this.setDefaultDate();\n  },\n  methods: {\n    round(time) {\n      let exitdate = time !== null && time !== '' ? format(time, 'yyyy/MM/dd') : new Date();\n\n      let selectedMins = time !== null && time !== '' ? format(time, 'mm') : new Date();\n      let selectedHours = time !== null && time !== '' ? format(time, 'hh') : new Date();\n      let selectedAMPM = time !== null && time !== '' ? format(time, 'aaa') : new Date();\n      if (exitdate != null && selectedMins != '15' && selectedMins != '30' && selectedMins != '45' && selectedMins != '00' && selectedMins != null && selectedMins != \"\" && selectedHours != null && selectedHours != \"\" && selectedAMPM != null && selectedAMPM != \"\") {\n        let intervalMilliseconds = 900000\n        let datetime = new Date(exitdate + \" \" + selectedHours + \":\" + selectedMins + \" \" + selectedAMPM)\n        let interval = datetime.getTime() % intervalMilliseconds;\n        let delta = interval === 0 ? 0 : datetime.getTime() - interval;\n        delta += intervalMilliseconds;\n        // this.exitTimeSelected = Object.assign(this.exitTimeSelected, { hh: format(new Date(delta), 'hh'), mm: format(new Date(delta), 'mm'), a: format(new Date(delta), 'a'), })\n        return interval !== 0 ? new Date(delta) : datetime;\n      }\n    },\n    dateChange() {\n      this.dateTimeChange();\n      Object.hasOwnProperty.call(this.zoneDetails, 'timePickerConfiguration') && this.zoneDetails?.timePickerConfiguration == \"1\" ? this.beforeDateTimeChange() : \"\";\n    },\n    formatExitDateTime(time, val) {\n      if (time !== null && time !== undefined && time != '') {\n        let utcDate = new Date(time * 1000).toUTCString(); //\"Wed, 27 Jan 2021 13:59:04 GMT\"\n        let month = utcDate.split(\",\")[1].split(\" \")[2]; // Jan\n        let date = utcDate.split(\",\")[1].split(\" \")[1]; // 27\n        let year = utcDate.split(\",\")[1].split(\" \")[3];\n        let hr = utcDate.split(\",\")[1].split(\" \")[4].split(\":\")[0]; // 13\n        let min = utcDate.split(\",\")[1].split(\" \")[4].split(\":\")[1]; //59\n        let formatHr = Number(hr) > 12 ? Number(hr) - 12 : Number(hr); // 1\n        formatHr = Number(formatHr) >= 10 ? Number(formatHr) : formatHr; //01\n        let amOrpm = Number(hr) >= 12 ? \"p\" : \"a\"; //PM\n        let ampm = Number(hr) >= 12 ? \"PM\" : \"AM\";\n        switch (val) {\n          case 'hour': {\n            return formatHr + amOrpm;\n          }\n          case 'mins': {\n            return min\n          }\n          case 'date': {\n            return month + \" \" + date + \", \" + year + \" \" + formatHr + \":\" + min + \" \" + ampm;\n          }\n        }\n      }\n      //Jan 27, 01:59 PM\n    },\n    reloadBooking() {\n      let url = window.location.origin + \"/g/\" + this.casinoDetails.userDetail.bid;\n      window.location.replace(url);\n    },\n    setDefaultDate() {\n      this.dateFormatted = this.zoneDetails.timezone ? format(\n        dateToTimeZoneDate(addMinutes(new Date(), 15),\n          this.zoneDetails.timezone\n        ),\n        \"MM/dd/yyyy\"\n      )\n        : format(addMinutes(new Date(), 15), \"MM/dd/yyyy\");\n      this.time = this.zoneDetails.timezone\n        ?\n        dateToTimeZoneDate(\n          addMinutes(new Date(), 15),\n          this.zoneDetails.timezone\n        )\n        : addMinutes(new Date(), 15);\n      let fifteenTime = this.time;\n      this.time = format(this.time, 'mm') === '15' || format(this.time, 'mm') === '30' || format(this.time, 'mm') === '45' || format(this.time, 'mm') === '00' ? fifteenTime : this.round(this.time);\n      let selectedMins = this.time !== null && this.time !== undefined && this.time !== \"\" ? format(this.time, 'mm') : \"\";\n      let selectedHours = this.time !== null && this.time !== undefined && this.time !== \"\" ? format(this.time, 'HH') : \"\";\n      let selectedAMPM = this.time !== null && this.time !== undefined && this.time !== \"\" ? format(this.time, 'a') : \"\";\n      this.stopTime = selectedMins != null && selectedMins != \"\" && selectedHours != null && selectedHours != \"\" && selectedAMPM != null && selectedAMPM != \"\" ? selectedHours + \":\" + selectedMins + \":\" + \"00\" : \"\";\n      // this.dateTimeChange()\n      // Object.hasOwnProperty.call(this.zoneDetails, 'timePickerConfiguration') && this.zoneDetails?.timePickerConfiguration == \"1\" && format(this.time, 'yyyy-MM-dd') != format(dateToTimeZoneDate(new Date(), this.zoneDetails.timezone), 'yyyy-MM-dd') ? this.beforeDateTimeChange() : \"\";\n    },\n    onTimePickerChange() {\n      let exitdate = this.time !== null && this.time !== undefined && this.time !== \"\" ? format(this.time, 'yyyy/MM/dd') : \"\";\n      let selectedMins = this.time !== null && this.time !== undefined && this.time !== \"\" ? format(this.time, 'mm') : \"\";\n      let selectedHours = this.time !== null && this.time !== undefined && this.time !== \"\" ? format(this.time, 'HH') : \"\";\n      let selectedAMPM = this.time !== null && this.time !== undefined && this.time !== \"\" ? format(this.time, 'a') : \"\";\n      this.stopTime = selectedMins != null && selectedMins != \"\" && selectedHours != null && selectedHours != \"\" && selectedAMPM != null && selectedAMPM != \"\" ? selectedHours + \":\" + selectedMins + \":\" + \"00\" : \"\";\n      let currenTime = this.zoneDetails.timezone\n        ? format(\n          dateToTimeZoneDate(new Date(),\n            this.zoneDetails.timezone\n          ),\n          \"yyyy-MM-dd HH:mm:ss\"\n        )\n        : format(new Date(), \"yyyy-MM-dd  HH:mm:ss\");\n      if (\n        selectedMins != null && selectedMins != \"\" && selectedHours != null && selectedHours != \"\" && selectedAMPM != null && selectedAMPM != \"\" &&\n        new Date(exitdate + \" \" + this.stopTime).getTime() >\n        new Date(currenTime).getTime()\n      ) {\n        format(this.time, 'yyyy-MM-dd') != format(this.minTimeDate, 'yyyy-MM-dd') ? this.beforeDateTimeChange() : \"\";\n        this.dateTimeChange();\n\n      }\n    },\n    setDatePicker() {\n      //set the minimum date to today date(zone time zone date)\n      this.minTimeDate = this.zoneDetails.timezone ? this.round(this.zoneDetails.timezone\n        ?\n        dateToTimeZoneDate(addMinutes(new Date(), 15),\n          this.zoneDetails.timezone\n        )\n        : addMinutes(new Date(), 15)) : this.zoneDetails.timezone\n        ?\n        dateToTimeZoneDate(addMinutes(new Date(), 15),\n          this.zoneDetails.timezone\n        )\n        : addMinutes(new Date(), 15)\n      //calculate max parkign time in seconds\n      let maxPark = this.zoneDetails != null && this.zoneDetails !== undefined && this.zoneDetails != \"\" ? this.zoneDetails?.maxParkingTime : null;\n\n      let addeddays = addDays(new Date(), maxPark?.days);\n      let addedhours = addHours(addeddays, maxPark?.hours);\n      let addedmins = addMinutes(addedhours, maxPark?.minutes);\n\n      //get max date in seconds based on max parking time\n      let maxZoneDate = addedmins\n      this.maxTimeDate = this.zoneDetails.timezone\n        ?\n        dateToTimeZoneDate(\n          new Date(maxZoneDate),\n          this.zoneDetails.timezone\n        )\n        : new Date(maxZoneDate);\n      //get max date with time and set it to maxDateTime\n      this.maxDateTime = this.zoneDetails.timezone\n        ? format(\n          dateToTimeZoneDate(\n            new Date(maxZoneDate),\n            this.zoneDetails.timezone\n          ),\n          \"yyyy-MM-dd hh:mm aaaaa\"\n        )\n        : format(new Date(), \"yyyy-MM-dd hh:mm aaaaa\");\n    },\n\n    /** @methods to find the estimate rate \n     @params startDate , stopDate,zcode, type , env_overRide\n     */\n\n    async dateTimeChange() {\n      if (!this.zoneDetails.zcode) {\n        return\n      }\n      try {\n        // format(new Date(this.checkinDate), \"yyyy-MM-dd'T'HH:mm:ss\");\n        let href = window.location.href;\n        let edtEntryTime = \"\"\n        if (href.includes('entrytime')) {\n          let params = href.split('?');\n          let timeparam = params[2].split('entrytime')[1];\n          edtEntryTime = timeparam.substring(1, timeparam.length)\n        }\n\n        this.startDate = edtEntryTime !== null && edtEntryTime !== undefined && edtEntryTime !== \"\" ? format(new Date(this.formatExitDateTime(edtEntryTime, 'date')), \"yyyy-MM-dd'T'HH:mm:ss\") : this.zoneDetails.timezone\n          ? format(\n            dateToTimeZoneDate(\n              new Date(),\n              this.zoneDetails.timezone\n            ),\n            \"yyyy-MM-dd'T'HH:mm:ss\"\n          )\n          : format(new Date(), \"yyyy-MM-dd'T'HH:mm:ss\");\n        // console.log(this.exitTimeSelected?.hh+\":\"+this.exitTimeSelected.mm+\":00\")\n        // this.exitDate + \"T23:59:00\"\n        let stopTime = this.stopTime;\n        let exitdate = this.time !== null && this.time !== undefined && this.time !== \"\" ? format(this.time, 'yyyy-MM-dd') : \"\";\n        let exittime = Object.hasOwnProperty.call(this.zoneDetails, 'timePickerConfiguration') && this.zoneDetails?.timePickerConfiguration == '1' ? 'T' + stopTime : \"T23:59:00\";\n        let stopDate = exitdate + exittime;\n        let data = {\n          startAt: this.startDate,\n          stopAt: stopDate,\n          zcode: this.zoneDetails.zcode,\n        };\n        this.addPaymentBtnLoading = true;\n        var getRate = await APIHelper(\"POST\", \"/api/v2/getRate\", data);\n        //condition to check if the date time selected is lesser than current time\n        if (!getRate?.data?.status && !this.getRateCall) {\n          this.disableAddPaymentBtn = true;\n          this.alertDialog = true;\n          this.alertMsg =\n            getRate?.data?.message || \"Error in getting rate details\";\n          this.openDatePicker = false;\n          this.openTimePicker = false;\n          EventBus.$emit('datetime-set');\n\n        } else {\n          this.disableAddPaymentBtn = false;\n          this.openDatePicker = false;\n          this.openTimePicker = false;\n          EventBus.$emit('datetime-set');\n\n        }\n        this.estimate = Object.assign({}, getRate?.data?.data);\n        // estimatedVal != \"\" &&\n        // estimatedVal != null &&\n        // estimatedVal != undefined\n        //   ? Number(estimatedVal).toFixed(2)\n        //   : estimatedVal;\n        this.openDatePicker = false;\n        this.openTimePicker = false;\n        this.addPaymentBtnLoading = false;\n      }\n      catch (error) {\n        this.addPaymentBtnLoading = false;\n        console.log(error);\n      }\n    },\n    async beforeDateTimeChange() {\n      if (!this.zoneDetails.zcode) {\n        return\n      }\n      try {\n        // format(new Date(this.checkinDate), \"yyyy-MM-dd'T'HH:mm:ss\");\n\n        let href = window.location.href;\n        let edtEntryTime = \"\"\n        if (href.includes('entrytime')) {\n          let params = href.split('?');\n          let timeparam = params[2].split('entrytime')[1];\n          edtEntryTime = timeparam.substring(1, timeparam.length)\n        }\n        this.startDate = edtEntryTime !== null && edtEntryTime !== undefined && edtEntryTime !== \"\" ? format(new Date(this.formatExitDateTime(edtEntryTime, 'date')), \"yyyy-MM-dd'T'HH:mm:ss\") : this.zoneDetails.timezone\n          ? format(\n            dateToTimeZoneDate(\n              new Date(),\n              this.zoneDetails.timezone\n            ),\n            \"yyyy-MM-dd'T'HH:mm:ss\"\n          )\n          : format(new Date(), \"yyyy-MM-dd'T'HH:mm:ss\");\n        let stopTime = this.stopTime;\n        let selectedHours = this.casinoDetails.userDetail.entrytime != null && this.casinoDetails.userDetail.entrytime !== undefined && this.casinoDetails.userDetail.entrytime != \"\" ? format(new Date(this.casinoDetails.userDetail.entrytime), 'HH') : format(dateToTimeZoneDate(new Date(), this.zoneDetails.timezone), 'HH');\n        let selectedMins = this.casinoDetails.userDetail.entrytime != null && this.casinoDetails.userDetail.entrytime !== undefined && this.casinoDetails.userDetail.entrytime != \"\" ? format(new Date(this.casinoDetails.userDetail.entrytime), 'mm') : format(dateToTimeZoneDate(new Date(), this.zoneDetails.timezone), 'mm');\n        let exitdate = this.time !== null && this.time !== undefined && this.time !== \"\" ? format(this.time, 'yyyy-MM-dd') : \"\";\n        let exittime = Object.hasOwnProperty.call(this.zoneDetails, 'istimePickerConfigurationGated') && this.zoneDetails?.timePickerConfiguration == '0' ? 'T' + stopTime : 'T' + selectedHours + \":\" + selectedMins + \":00\";\n\n        let stopDate = exitdate + exittime;\n        let data = {\n          startAt: this.startDate,\n          stopAt: stopDate,\n          zcode: this.zoneDetails.zcode,\n        };\n        this.addPaymentBtnLoading = true;\n        var getRate = await APIHelper(\"POST\", \"/api/v2/getRate\", data);\n        //condition to check if the date time selected is lesser than current time\n        if (!getRate?.data?.status && !this.getRateCall) {\n          this.disableAddPaymentBtn = true;\n          this.alertDialog = true;\n          this.alertMsg =\n            getRate?.data?.message || \"Error in getting rate details\";\n          this.openDatePicker = false;\n          this.openTimePicker = false;\n          EventBus.$emit('datetime-set');\n        } else {\n          this.disableAddPaymentBtn = false;\n          this.openDatePicker = false;\n          this.openTimePicker = false;\n          EventBus.$emit('datetime-set');\n        }\n        this.beforeEstimate = Object.assign({}, getRate?.data?.data);\n        // estimatedVal != \"\" &&\n        // estimatedVal != null &&\n        // estimatedVal != undefined\n        //   ? Number(estimatedVal).toFixed(2)\n        //   : estimatedVal;\n        this.addPaymentBtnLoading = false;\n      }\n      catch (error) {\n        this.addPaymentBtnLoading = false;\n        console.log(error);\n      }\n    },\n    formatDate(date) {\n      let stringdate = date.toString();\n      if (!date) return null;\n\n      const [year, month, day] = stringdate.split(\"-\");\n      return `${month}/${day}/${year}`;\n    },\n    parseDate(date) {\n      if (!date) return null;\n\n      const [month, day, year] = date.split(\"/\");\n      return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\n    },\n    async addPayment() {\n      let exitDate = this.time != null || this.time !== undefined || this.time != \"\" ? format(this.time, 'yyyy-MM-dd') : format(new Date(), 'yyyy-MM-dd')\n      let exitTime = this.time != null || this.time !== undefined || this.time != \"\" ? Object.hasOwnProperty.call(this.zoneDetails, 'timePickerConfiguration') && this.zoneDetails.timePickerConfiguration == 1 ? format(this.time, 'hh:mm a') : \"11:59 PM\" : \"\";\n      let exitDateTime = exitDate + \" \" + exitTime\n      let entryDateTime = this.zoneDetails.timezone\n        ? format(\n          dateToTimeZoneDate(new Date(), this.zoneDetails.timezone),\n          \"yyyy-MM-dd hh:mm a\"\n        )\n        : format(new Date(), \"yyyy-MM-dd'T'HH:mm a\");\n      let commitData = {\n        plate: this.licencePlate,\n        contact: this.contactObj?.formattedNumber,\n        entryTime: entryDateTime,\n        edtParams: this.casinoDetails?.userDetail?.edtParams,\n        exitTime: exitDateTime,\n        estimate: this.estimate,\n      };\n      let details = await APIHelper(\"POST\", \"/api/v1/prepaid/openTransaction\", {\n        vehicleNo: this.licencePlate,\n        contact: this.contactObj?.formattedNumber,\n        exitTime: exitDateTime, zcode: this.zoneDetails?.zcode,\n        mid: this.zoneDetails?.mid,\n        eventType: \"PaidHostPass\",\n      });\n\n      if (details?.data?.status) {\n        this.$store.commit(\"SET_CASINO_USERDETAILS\", commitData);\n        this.$router.replace({ path: \"/prepaidhost/makepayment\" });\n      } else {\n        if (details?.data?.message == \"Booking Already Exists\") {\n          let commitData = {\n            plate: this.licencePlate,\n            contact: this.contactObj.formattedNumber,\n            entryTime: entryDateTime,\n            edtParams: this.casinoDetails?.userDetail?.edtParams,\n            exitTime: exitDateTime,\n            estimate: this.estimate,\n            bid: details?.data?.data?.bid\n          };\n          if (details?.data?.data?.cardOnFile == 0 || details?.data?.data?.cardOnFile == 2) {\n            this.$store.commit(\"SET_CASINO_USERDETAILS\", commitData);\n            this.$router.replace({ path: \"/prepaidhost/makepayment\" });\n          }\n          else if (details?.data?.data?.cardOnFile == 1) {\n            // this.$store.commit(\"SET_CASINO_USERDETAILS\", commitData);\n            // this.$router.replace({ path: \"/prepaidhost/odReceipt\" });\n            let url = window.location.origin + \"/g/\" + details?.data?.data?.bid;\n            window.location.replace(url);\n          }\n        }\n        this.alertMsg = details?.data?.message ? details?.data?.message : \"\";\n\n        this.alertDialog = true;\n      }\n    },\n\n    uppercase() {\n      if (rules.alphaNumeric(this.licencePlate) === \"Must be alphanumeric\") {\n        this.licencePlate = this.licencePlate.replace(/[^\\w\\s]/gi, '')\n      }\n      this.licencePlate = this.licencePlate.trim()\n      this.licencePlate = this.licencePlate.toUpperCase();\n    },\n    /**\n     * @method getZoneDetails fetch the zone details and commit SET_ZONE_DETAILS mutation.\n     */\n    async getZoneDetails(searchParamKey, searchParamValue) {\n      try {\n        var zoneDetails = await APIHelper(\n          \"GET\",\n          \"/api/v1/user/config\" + searchParamKey + \"=\" + searchParamValue\n        );\n        this.$store.commit(\"SET_ZONE_DETAILS\", zoneDetails.data?.zone);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    /**\n     * @method getOnDemandZoneDetails fetch the ondemand zone details from Pcom and commit SET_ZONE_DETAILS mutation.\n     */\n    async getOnDemandZoneDetails(searchParamValue) {\n      this.loading = true;\n      try {\n        var zoneDetails = await APIHelper(\n          \"GET\",\n          \"/api/v1/getOnDemand/\" + searchParamValue\n        );\n        this.loading = false;\n        if (zoneDetails.data?.lot) {\n          this.$store.commit(\n            \"SET_ON_DEMAND_ZONE_DETAILS\",\n            zoneDetails.data?.lot\n          );\n          this.setDatePicker();\n        } else {\n          this.alertMsg =\n            zoneDetails?.data?.message || \"Error in loading location details.\";\n          this.alertDialog = true;\n        }\n      } catch (error) {\n        this.loading = false;\n        console.log(error);\n      }\n    },\n    onContactInput(contactDetails) {\n      this.isContactValid = contactDetails?.isValid;\n      this.contactObj = Object.assign({}, contactDetails);\n    },\n    setReenterPlateFlag() {\n      this.licencePlate = this.selectedPlate || \"\";\n      this.reEnterPlate = true;\n      this.confirmCreateSessionDialog = false;\n    },\n    /**\n     * @method createSession Fetch booking id on add booking and fetch the booking info.\n     */\n    async createSession() {\n      this.addLicencePlateBtnLoading = true;\n      let postObj = {\n        contact: this.contactObj?.formattedNumber,\n        uniqueID: this.contactObj?.nationalNumber,\n        vehicleNo: this.licencePlate.toUpperCase(),\n        locationCode: this.zoneDetails.zcode,\n        zid: this.zoneDetails.zid,\n        entrytime: format(\n          new Date(\n            new Date().toLocaleString(\"en-US\", {\n              timeZone: this.zoneDetails.timezone,\n            })\n          ),\n          \"yyyy-MM-dd HH:mm:ss\"\n        ),\n        source: \"appclip\",\n        webView: \"1\",\n        type: \"2\",\n        state: 2,\n        payment_status: 0,\n        txnID_addCC: 0,\n      };\n      if (this.reEnterPlate) {\n        Object.assign(postObj, { createNewSession: 1 });\n      }\n      try {\n        var session = await APIHelper(\"POST\", \"/api/v1/addBooking\", postObj);\n        let bid = session?.data?.refno;\n        if (session.data.status === false) {\n          this.errMsg = session?.data?.message ? session.data.message : \"\";\n          if (\n            session?.data?.showCreateNewSessionPopup &&\n            session.data.showCreateNewSessionPopup == 1\n          ) {\n            this.postToLoggerAPI({\n              phone: this.contactObj?.nationalNumber,\n              plate: this.licencePlate.toUpperCase(),\n              statusText: \"Parker session not found in the system.\",\n            });\n            this.confirmCreateSessionDialog = true;\n            this.addLicencePlateBtnLoading = false;\n            return;\n          }\n          this.errDialog = true;\n          this.addLicencePlateBtnLoading = false;\n          return;\n        }\n        await this.getBookingDetails(bid);\n        let url = window.location.origin + \"/g/\" + bid;\n        this.addLicencePlateBtnLoading = false;\n        this.reEnterPlate\n          ? this.postToLoggerAPI({\n            phone: this.contactObj?.nationalNumber,\n            refId: bid,\n            icon: \"login\",\n            plate: this.licencePlate.toUpperCase(),\n            statusText:\n              \"Parker plate/contact number not found in the system. Parker created a new session using generic payment QR\",\n          })\n          : this.postToLoggerAPI({\n            phone: this.contactObj?.nationalNumber,\n            refId: bid,\n            icon: \"login\",\n            plate: this.licencePlate.toUpperCase(),\n            statusText:\n              \"Parker session found. Parker opened his/her session using generic payment QR\",\n          });\n\n        window.location.replace(url);\n      } catch (error) {\n        this.addLicencePlateBtnLoading = false;\n        console.log(error);\n      }\n    },\n    /**\n     * @method getBookingDetails fetch the booking details and commit SET_BOOKING_DETAILS mutation.\n     */\n    async getBookingDetails(bookingId) {\n      try {\n        var bookingDetails = await APIHelper(\n          \"GET\",\n          \"/api/v1/booking/config/\" + bookingId\n        );\n        this.$store.commit(\n          \"SET_BOOKING_DETAILS\",\n          bookingDetails.data?.data ? bookingDetails.data.data : null\n        );\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    closeConfirmCreateSessionDialog() {\n      this.confirmCreateSessionDialog = false;\n      this.addLicencePlateBtnLoading = false;\n    },\n  },\n};\n</script>\n<style lang=\"less\" >\n.information {\n  background-color: #edf1f4;\n}\n\n.booking_header {\n  position: absolute;\n  bottom: 30px;\n  left: 16px;\n  font-size: 18px;\n  font-weight: bolder;\n}\n\n.add_licence_plate_btn {\n  width: 100%;\n  background-color: #f2555c !important;\n  font-size: 18px !important;\n  font-weight: 700 !important;\n  letter-spacing: normal !important;\n  height: 50px !important;\n}\n\n.country-selector.md.has-value .country-selector__input {\n  border: none;\n  border-bottom: 1px solid rgb(118, 118, 118);\n}\n\n.input-tel.md .input-tel__input {\n  border: none;\n  border-bottom: 1px solid rgb(118, 118, 118);\n  margin-left: 2px;\n}\n\n.input-tel.is-focused.has-error .input-tel__input {\n  box-shadow: none !important;\n}\n\n.input-tel.is-focused.is-valid .input-tel__input {\n  box-shadow: none !important;\n}\n\n.time-picker-input {\n  flex: 1 1 auto;\n  line-height: 20px;\n  padding: 8px 0 8px;\n  max-width: 100%;\n  min-width: 0px;\n  font-size: 16px;\n  font-family: \"Work Sans\";\n}\n\n.time-picker-input :focus-visible {\n  outline-color: #1976d2;\n}\n\n.vue__time-picker input.display-time {\n  padding: 0px !important;\n  border-bottom: 1px solid #767676;\n  border-top: 0px;\n  border-right: 0px;\n  border-left: 0px;\n}\n\n.vue__time-picker-dropdown ul li:not([disabled]).active,\n.vue__time-picker-dropdown ul li:not([disabled]).active:focus,\n.vue__time-picker-dropdown ul li:not([disabled]).active:hover,\n.vue__time-picker .dropdown ul li:not([disabled]).active,\n.vue__time-picker .dropdown ul li:not([disabled]).active:focus,\n.vue__time-picker .dropdown ul li:not([disabled]).active:hover {\n  background: #f2555c !important;\n}\n\n[data-key=\"am\"] {\n  border: 0.2px solid red;\n  border-radius: 2px;\n  margin-left: 2px;\n}\n\n[data-key=\"pm\"] {\n  border: 0.2px solid red;\n  margin-top: 0.5em;\n  margin-left: 2px;\n}\n\n.hours .hint {\n  position: sticky;\n  top: 0;\n  text-align: center;\n  background: #68808c;\n  z-index: 1;\n  -webkit-text-fill-color: white;\n  margin-bottom: 10px;\n}\n\n.apms .hint {\n  position: sticky;\n  top: 0;\n  text-align: center;\n  background: #68808c;\n  z-index: 1;\n  margin-left: 1px;\n  -webkit-text-fill-color: white;\n  margin-bottom: 10px;\n}\n\n.hours::-webkit-scrollbar {\n  display: none;\n}\n\n.minutes::-webkit-scrollbar {\n  display: none;\n}\n\n.minutes .hint {\n  position: sticky;\n  top: 0;\n  text-align: center;\n  background: #68808c;\n  z-index: 1;\n  -webkit-text-fill-color: white;\n  margin-bottom: 10px;\n}\n\nhr {\n  border: 1px solid #ffbc1f;\n}\n\ninput[type=number] {\n  -moz-appearance: textfield;\n}\n\n// .vue__time-picker input.display-time{\n//   border-bottom:1px solid #767676;\n//     border-top:0px;\n//     border-right:0px;\n//     border-left:0px;\n// }\n</style>\t"]}]}