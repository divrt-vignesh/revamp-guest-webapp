{"remainingRequest":"/home/vignesh/DIVRT/Revamp/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vignesh/DIVRT/Revamp/src/components/Estimate.vue?vue&type=template&id=b27d1d50&","dependencies":[{"path":"/home/vignesh/DIVRT/Revamp/src/components/Estimate.vue","mtime":1688551741116},{"path":"/home/vignesh/DIVRT/Revamp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/Revamp/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/Revamp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/Revamp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}