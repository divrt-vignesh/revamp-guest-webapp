{"remainingRequest":"/home/vignesh/DIVRT/revamp-guest-webapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vignesh/DIVRT/revamp-guest-webapp/src/uiComponents/SpherePhoneNumberInput/VuePhoneNumberInput/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vignesh/DIVRT/revamp-guest-webapp/src/uiComponents/SpherePhoneNumberInput/VuePhoneNumberInput/index.vue","mtime":1688551741180},{"path":"/home/vignesh/DIVRT/revamp-guest-webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/revamp-guest-webapp/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/vignesh/DIVRT/revamp-guest-webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/revamp-guest-webapp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGNvdW50cmllcywgY291bnRyaWVzSXNvIH0gZnJvbSAnLi9hc3NldHMvanMvcGhvbmVDb2RlQ291bnRyaWVzLmpzJwppbXBvcnQgZXhhbXBsZXMgZnJvbSAnbGlicGhvbmVudW1iZXItanMvZXhhbXBsZXMubW9iaWxlLmpzb24nCmltcG9ydCB7IHBhcnNlUGhvbmVOdW1iZXJGcm9tU3RyaW5nLCBBc1lvdVR5cGUsIGdldEV4YW1wbGVOdW1iZXIgfSBmcm9tICdsaWJwaG9uZW51bWJlci1qcycKaW1wb3J0IElucHV0VGVsIGZyb20gJy4vSW5wdXRUZWwnCmltcG9ydCBDb3VudHJ5U2VsZWN0b3IgZnJvbSAnLi9Db3VudHJ5U2VsZWN0b3InCmltcG9ydCBsb2NhbGVzIGZyb20gJy4vYXNzZXRzL2xvY2FsZXMnCmltcG9ydCB7IGhleFRvUmdiYSwgaXNDb2xvck5hbWUsIGNvbG9yTmFtZVRvSGV4IH0gZnJvbSAnY29sb3ItdHJhbnNmb3JtZXItdWknCgpjb25zdCBnZXRTaGFkb3dDb2xvciA9IChjb2xvcikgPT4gewogIHJldHVybiBpc0NvbG9yTmFtZShjb2xvcikgPyBoZXhUb1JnYmEoY29sb3JOYW1lVG9IZXgoY29sb3IpLCAwLjcpIDogaGV4VG9SZ2JhKGNvbG9yLCAwLjcpCn0KCmNvbnN0IGJyb3dzZXJMb2NhbGUgPSAoKSA9PiB7CiAgaWYgKCF3aW5kb3cpIHJldHVybiBudWxsCiAgY29uc3QgYnJvd3NlckxvY2FsZSA9IHdpbmRvdy5uYXZpZ2F0b3IudXNlckxhbmd1YWdlIHx8IHdpbmRvdy5uYXZpZ2F0b3IubGFuZ3VhZ2UKICBsZXQgbG9jYWxlID0gYnJvd3NlckxvY2FsZSA/IGJyb3dzZXJMb2NhbGUuc3Vic3RyKDMsIDQpLnRvVXBwZXJDYXNlKCkgOiBudWxsCiAgaWYgKGxvY2FsZSA9PT0gJycpIGxvY2FsZSA9IGJyb3dzZXJMb2NhbGUuc3Vic3RyKDAsIDIpLnRvVXBwZXJDYXNlKCkKICByZXR1cm4gbG9jYWxlCn0KCmNvbnN0IGlzQ291bnRyeUF2YWlsYWJsZSA9IChsb2NhbGUpID0+IHsKICByZXR1cm4gY291bnRyaWVzSXNvLmluY2x1ZGVzKGxvY2FsZSkKfQoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdWdWVQaG9uZU51bWJlcklucHV0JywKICBjb21wb25lbnRzOiB7CiAgICBJbnB1dFRlbCwKICAgIENvdW50cnlTZWxlY3RvcgogIH0sCiAgcHJvcHM6IHsKICAgIHZhbHVlOiB7IHR5cGU6IFN0cmluZywgZGVmYXVsdDogbnVsbCB9LAogICAgaWQ6IHsgdHlwZTogU3RyaW5nLCBkZWZhdWx0OiAnTWF6UGhvbmVOdW1iZXJJbnB1dCcgfSwKICAgIGNvbG9yOiB7IHR5cGU6IFN0cmluZywgZGVmYXVsdDogJ2RvZGdlcmJsdWUnIH0sCiAgICB2YWxpZENvbG9yOiB7IHR5cGU6IFN0cmluZywgZGVmYXVsdDogJ3llbGxvd2dyZWVuJyB9LAogICAgZXJyb3JDb2xvcjogeyB0eXBlOiBTdHJpbmcsIGRlZmF1bHQ6ICdvcmFuZ2VyZWQnIH0sCiAgICBkYXJrQ29sb3I6IHsgdHlwZTogU3RyaW5nLCBkZWZhdWx0OiAnIzQyNDI0MicgfSwKICAgIGRpc2FibGVkOiB7IHR5cGU6IEJvb2xlYW4sIGRlZmF1bHQ6IGZhbHNlIH0sCiAgICBkZWZhdWx0Q291bnRyeUNvZGU6IHsgdHlwZTogU3RyaW5nLCBkZWZhdWx0OiBudWxsIH0sCiAgICBzaXplOiB7IHR5cGU6IFN0cmluZywgZGVmYXVsdDogbnVsbCB9LAogICAgcHJlZmVycmVkQ291bnRyaWVzOiB7IHR5cGU6IEFycmF5LCBkZWZhdWx0OiBudWxsIH0sCiAgICBvbmx5Q291bnRyaWVzOiB7IHR5cGU6IEFycmF5LCBkZWZhdWx0OiBudWxsIH0sCiAgICBpZ25vcmVkQ291bnRyaWVzOiB7IHR5cGU6IEFycmF5LCBkZWZhdWx0OiBBcnJheSB9LAogICAgdHJhbnNsYXRpb25zOiB7IHR5cGU6IE9iamVjdCwgZGVmYXVsdDogbnVsbCB9LAogICAgbm9WYWxpZGF0b3JTdGF0ZTogeyB0eXBlOiBCb29sZWFuLCBkZWZhdWx0OiBmYWxzZSB9LAogICAgbm9GbGFnczogeyB0eXBlOiBCb29sZWFuLCBkZWZhdWx0OiBmYWxzZSB9LAogICAgZXJyb3I6IHsgdHlwZTogQm9vbGVhbiwgZGVmYXVsdDogZmFsc2UgfSwKICAgIG5vRXhhbXBsZTogeyB0eXBlOiBCb29sZWFuLCBkZWZhdWx0OiBmYWxzZSB9LAogICAgcmVxdWlyZWQ6IHsgdHlwZTogQm9vbGVhbiwgZGVmYXVsdDogZmFsc2UgfSwKICAgIGNvdW50cmllc0hlaWdodDogeyB0eXBlOiBOdW1iZXIsIGRlZmF1bHQ6IDMwIH0sCiAgICBub1VzZUJyb3dzZXJMb2NhbGU6IHsgdHlwZTogQm9vbGVhbiwgZGVmYXVsdDogZmFsc2UgfSwKICAgIGZldGNoQ291bnRyeTogeyB0eXBlOiBCb29sZWFuLCBkZWZhdWx0OiBmYWxzZSB9LAogICAgbm9Db3VudHJ5U2VsZWN0b3I6IHsgdHlwZTogQm9vbGVhbiwgZGVmYXVsdDogZmFsc2UgfSwKICAgIHNob3dDb2RlT25MaXN0OiB7IHR5cGU6IEJvb2xlYW4sIGRlZmF1bHQ6IGZhbHNlIH0sCiAgICBkYXJrOiB7IHR5cGU6IEJvb2xlYW4sIGRlZmF1bHQ6IGZhbHNlIH0sCiAgICBib3JkZXJSYWRpdXM6IHsgdHlwZTogTnVtYmVyLCBkZWZhdWx0OiA0IH0KICB9LAogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgcmVzdWx0czoge30sCiAgICAgIHVzZXJMb2NhbGU6IHRoaXMuZGVmYXVsdENvdW50cnlDb2RlLAogICAgICBsYXN0S2V5UHJlc3NlZDogbnVsbAogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHVuaXF1ZUlkICgpIHsKICAgICAgcmV0dXJuIGAke3RoaXMuaWR9LSR7dGhpcy5fdWlkfWAKICAgIH0sCiAgICB0ICgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICAuLi5sb2NhbGVzLAogICAgICAgIC4uLnRoaXMudHJhbnNsYXRpb25zCiAgICAgIH0KICAgIH0sCiAgICBjb2Rlc0NvdW50cmllcyAoKSB7CiAgICAgIHJldHVybiBjb3VudHJpZXMKICAgIH0sCiAgICBjb3VudHJ5Q29kZTogewogICAgICBnZXQgKCkgewogICAgICAgIHJldHVybiB0aGlzLnVzZXJMb2NhbGUgfHwgdGhpcy5yZXN1bHRzLmNvdW50cnlDb2RlCiAgICAgIH0sCiAgICAgIHNldCAobmV3Q291bnRyeSkgewogICAgICAgIHRoaXMuc2V0TG9jYWxlKG5ld0NvdW50cnkpCiAgICAgICAgdGhpcy4kcmVmcy5QaG9uZU51bWJlcklucHV0LiRlbC5xdWVyeVNlbGVjdG9yKCdpbnB1dCcpLmZvY3VzKCkKICAgICAgfQogICAgfSwKICAgIHBob25lTnVtYmVyOiB7CiAgICAgIGdldCAoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMudmFsdWUKICAgICAgfSwKICAgICAgc2V0IChuZXdQaG9uZSkgewogICAgICAgIHRoaXMuZW1pdFZhbHVlcyh7IGNvdW50cnlDb2RlOiB0aGlzLmNvdW50cnlDb2RlLCBwaG9uZU51bWJlcjogbmV3UGhvbmUgfSkKICAgICAgfQogICAgfSwKICAgIHNob3VsZENob29zZUNvdW50cnkgKCkgewogICAgICByZXR1cm4gIXRoaXMuY291bnRyeUNvZGUgJiYgISF0aGlzLnBob25lTnVtYmVyCiAgICB9LAogICAgcGhvbmVGb3JtYXR0ZWQgKCkgewogICAgICByZXR1cm4gdGhpcy5yZXN1bHRzLmZvcm1hdEludGVybmF0aW9uYWwKICAgIH0sCiAgICBpc1ZhbGlkICgpIHsKICAgICAgcmV0dXJuIHRoaXMucmVzdWx0cy5pc1ZhbGlkCiAgICB9LAogICAgcGhvbmVOdW1iZXJFeGFtcGxlICgpIHsKICAgICAgY29uc3QgcGhvbmVOdW1iZXIgPSB0aGlzLmNvdW50cnlDb2RlID8gZ2V0RXhhbXBsZU51bWJlcih0aGlzLmNvdW50cnlDb2RlLCBleGFtcGxlcykgOiBudWxsCiAgICAgIHJldHVybiBwaG9uZU51bWJlciA/IHBob25lTnVtYmVyLmZvcm1hdE5hdGlvbmFsKCkgOiBudWxsCiAgICB9LAogICAgaGFzRW1wdHlQaG9uZSAoKSB7CiAgICAgIHJldHVybiB0aGlzLnBob25lTnVtYmVyID09PSAnJyB8fCB0aGlzLnBob25lTnVtYmVyID09PSBudWxsCiAgICB9LAogICAgaGludFZhbHVlICgpIHsKICAgICAgcmV0dXJuICB0aGlzLm5vRXhhbXBsZSB8fCAhdGhpcy5waG9uZU51bWJlckV4YW1wbGUKICAgICAgICA/IG51bGwKICAgICAgICA6IHRoaXMuaGFzRW1wdHlQaG9uZSB8fCB0aGlzLmlzVmFsaWQgPyBudWxsIDogYCR7dGhpcy50LmV4YW1wbGV9ICR7dGhpcy5waG9uZU51bWJlckV4YW1wbGV9YAogICAgfSwKICAgIHRoZW1lICgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBjb2xvclZhbHVlOiB0aGlzLmNvbG9yLAogICAgICAgIGNvbG9yOiB7IGNvbG9yOiB0aGlzLmNvbG9yIH0sCiAgICAgICAgdGV4dENvbG9yOiB7IGNvbG9yOiAnIzc0NzQ3NCcgfSwKICAgICAgICB0ZXh0RGFya0NvbG9yOiB7IGNvbG9yOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjcpJyB9LAogICAgICAgIHZhbGlkQ29sb3I6IHsgY29sb3I6IHRoaXMudmFsaWRDb2xvciB9LAogICAgICAgIGVycm9yQ29sb3I6IHsgY29sb3I6IHRoaXMuZXJyb3JDb2xvciB9LAogICAgICAgIGRhcmtDb2xvcjogeyBjb2xvcjogdGhpcy5kYXJrQ29sb3IgfSwKICAgICAgICBiZ0NvbG9yOiB7IGJhY2tncm91bmRDb2xvcjogdGhpcy5jb2xvciB9LAogICAgICAgIGJnVmFsaWRDb2xvcjogeyBiYWNrZ3JvdW5kQ29sb3I6IHRoaXMudmFsaWRDb2xvciB9LAogICAgICAgIGJnRXJyb3JDb2xvcjogeyBiYWNrZ3JvdW5kQ29sb3I6IHRoaXMuZXJyb3JDb2xvciB9LAogICAgICAgIGJnRGFya0NvbG9yOiB7IGJhY2tncm91bmRDb2xvcjogdGhpcy5kYXJrQ29sb3IgfSwKICAgICAgICBib3JkZXJDb2xvcjogeyBib3JkZXJDb2xvcjogdGhpcy5jb2xvciB9LAogICAgICAgIGJvcmRlclZhbGlkQ29sb3I6IHsgYm9yZGVyQ29sb3I6IHRoaXMudmFsaWRDb2xvciB9LAogICAgICAgIGJvcmRlckVycm9yQ29sb3I6IHsgYm9yZGVyQ29sb3I6IHRoaXMuZXJyb3JDb2xvciB9LAogICAgICAgIGJvcmRlckRhcmtDb2xvcjogeyBib3JkZXJDb2xvcjogdGhpcy5kYXJrQ29sb3IgfSwKICAgICAgICBib3hTaGFkb3dDb2xvcjogeyBib3hTaGFkb3c6IGAwIDAgMCAwLjEyNXJlbSAke2dldFNoYWRvd0NvbG9yKHRoaXMuY29sb3IpfWAgfSwKICAgICAgICBib3hTaGFkb3dWYWxpZDogeyBib3hTaGFkb3c6IGAwIDAgMCAwLjEyNXJlbSAke2dldFNoYWRvd0NvbG9yKHRoaXMudmFsaWRDb2xvcil9YCB9LAogICAgICAgIGJveFNoYWRvd0Vycm9yOiB7IGJveFNoYWRvdzogYDAgMCAwIDAuMTI1cmVtICR7Z2V0U2hhZG93Q29sb3IodGhpcy5lcnJvckNvbG9yKX1gIH0sCiAgICAgICAgYm9yZGVyUmFkaXVzOiB7IGJvcmRlclJhZGl1czogYCR7dGhpcy5ib3JkZXJSYWRpdXN9cHhgIH0sCiAgICAgICAgYm9yZGVyTGVmdFJhZGl1czogeyBib3JkZXJUb3BMZWZ0UmFkaXVzOiBgJHt0aGlzLmJvcmRlclJhZGl1c31weGAsIGJvcmRlckJvdHRvbUxlZnRSYWRpdXM6IGAke3RoaXMuYm9yZGVyUmFkaXVzfXB4YCB9LAogICAgICAgIGJvcmRlclJpZ2h0UmFkaXVzOiB7IGJvcmRlclRvcFJpZ2h0UmFkaXVzOiBgJHt0aGlzLmJvcmRlclJhZGl1c31weGAsIGJvcmRlckJvdHRvbVJpZ2h0UmFkaXVzOiBgJHt0aGlzLmJvcmRlclJhZGl1c31weGAgfQogICAgICB9CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgZGVmYXVsdENvdW50cnlDb2RlIChuZXdWYWx1ZSwgb2xkVmFsdWUpIHsKICAgICAgaWYgKG5ld1ZhbHVlID09PSBvbGRWYWx1ZSkgcmV0dXJuCiAgICAgIHRoaXMuc2V0TG9jYWxlKG5ld1ZhbHVlKQogICAgfSwKICAgIHBob25lTnVtYmVyOiB7CiAgICAgIGhhbmRsZXIgKG5ld1ZhbHVlLCBvbGRWYWx1ZSkgewogICAgICAgIC8vIGluaXQgY29tcG9uZW50IChjb3VudHJ5Q29kZSAmIHBob25lTnVtYmVyKSBpZiBwaG9uZSBudW1iZXIgaXMgcHJvdmlkZQogICAgICAgIGlmIChuZXdWYWx1ZSAmJiAobmV3VmFsdWUgIT09IG9sZFZhbHVlKSkgewogICAgICAgICAgY29uc3QgcGhvbmVOdW1iZXIgPSBwYXJzZVBob25lTnVtYmVyRnJvbVN0cmluZyhuZXdWYWx1ZSkKICAgICAgICAgIGlmIChwaG9uZU51bWJlcikgewogICAgICAgICAgICB0aGlzLmVtaXRWYWx1ZXMoewogICAgICAgICAgICAgIHBob25lTnVtYmVyOiBwaG9uZU51bWJlci5uYXRpb25hbE51bWJlciwKICAgICAgICAgICAgICBjb3VudHJ5Q29kZTogdGhpcy5jb3VudHJ5Q29kZSA/IHRoaXMuY291bnRyeUNvZGUgOiBwaG9uZU51bWJlci5jb3VudHJ5CiAgICAgICAgICAgIH0pCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LAogICAgICBpbW1lZGlhdGU6IHRydWUKICAgIH0KICB9LAogIGFzeW5jIG1vdW50ZWQgKCkgewogICAgdHJ5IHsKICAgICAgaWYgKHRoaXMucGhvbmVOdW1iZXIgJiYgdGhpcy5kZWZhdWx0Q291bnRyeUNvZGUpIHRoaXMuZW1pdFZhbHVlcyh7Y291bnRyeUNvZGU6IHRoaXMuZGVmYXVsdENvdW50cnlDb2RlLCBwaG9uZU51bWJlcjogdGhpcy5waG9uZU51bWJlcn0pCgogICAgICBpZiAodGhpcy5kZWZhdWx0Q291bnRyeUNvZGUgJiYgdGhpcy5mZXRjaENvdW50cnkpIHsKICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ01helBob25lTnVtYmVySW5wdXQ6IERvIG5vdCB1c2UgImZldGNoLWNvdW50cnkiIGFuZCAiZGVmYXVsdC1jb3VudHJ5LWNvZGUiIG9wdGlvbnMgaW4gdGhlIHNhbWUgdGltZScpCiAgICAgIH0KCiAgICAgIGlmICh0aGlzLmRlZmF1bHRDb3VudHJ5Q29kZSAmJiB0aGlzLm5vVXNlQnJvd3NlckxvY2FsZSkgewogICAgICAgIHRocm93IG5ldyBFcnJvcignTWF6UGhvbmVOdW1iZXJJbnB1dDogSWYgeW91IHVzZSBhICJkZWZhdWx0LWNvdW50cnktY29kZSIsIGRvIG5vdCB1c2UgIm5vLXVzZS1icm93c2VyLWxvY2FsZSIgb3B0aW9ucycpCiAgICAgIH0KCiAgICAgIGlmICh0aGlzLmRlZmF1bHRDb3VudHJ5Q29kZSkgcmV0dXJuCgogICAgICB0aGlzLmZldGNoQ291bnRyeQogICAgICAgID8gdGhpcy5mZXRjaENvdW50cnlDb2RlKCkKICAgICAgICA6ICF0aGlzLm5vVXNlQnJvd3NlckxvY2FsZQogICAgICAgICAgPyB0aGlzLnNldExvY2FsZShicm93c2VyTG9jYWxlKCkpCiAgICAgICAgICA6IG51bGwKICAgIH0gY2F0Y2ggKGVycikgewogICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyKQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZ2V0QXNZb3VUeXBlRm9ybWF0IChwYXlsb2FkKSB7CiAgICAgIGNvbnN0IHsgY291bnRyeUNvZGUsIHBob25lTnVtYmVyIH0gPSBwYXlsb2FkCiAgICAgIGNvbnN0IGFzWW91VHlwZSA9IG5ldyBBc1lvdVR5cGUoY291bnRyeUNvZGUpCiAgICAgIHJldHVybiBwaG9uZU51bWJlciA/IGFzWW91VHlwZS5pbnB1dChwaG9uZU51bWJlcikgOiBudWxsCiAgICB9LAogICAgZ2V0UGFyc2VQaG9uZU51bWJlckZyb21TdHJpbmcgKHsgcGhvbmVOdW1iZXIsIGNvdW50cnlDb2RlIH0pIHsKICAgICAgY29uc3QgcGFyc2luZyA9IHBob25lTnVtYmVyICYmIGNvdW50cnlDb2RlID8gcGFyc2VQaG9uZU51bWJlckZyb21TdHJpbmcocGhvbmVOdW1iZXIsIGNvdW50cnlDb2RlKSA6IG51bGwKICAgICAgcmV0dXJuIHsKICAgICAgICBjb3VudHJ5Q29kZTogY291bnRyeUNvZGUsCiAgICAgICAgaXNWYWxpZDogZmFsc2UsCiAgICAgICAgLi4uKHBob25lTnVtYmVyICYmIChwaG9uZU51bWJlciAhPT0gJycpCiAgICAgICAgICA/IHsgcGhvbmVOdW1iZXIgOiBwaG9uZU51bWJlciB9CiAgICAgICAgICA6IG51bGwKICAgICAgICApLAogICAgICAgIC4uLihwYXJzaW5nCiAgICAgICAgICA/IHsKICAgICAgICAgICAgY291bnRyeUNhbGxpbmdDb2RlOiBwYXJzaW5nLmNvdW50cnlDYWxsaW5nQ29kZSwKICAgICAgICAgICAgZm9ybWF0dGVkTnVtYmVyOiBwYXJzaW5nLm51bWJlciwKICAgICAgICAgICAgbmF0aW9uYWxOdW1iZXI6IHBhcnNpbmcubmF0aW9uYWxOdW1iZXIsCiAgICAgICAgICAgIGlzVmFsaWQ6IHBhcnNpbmcuaXNWYWxpZCgpLAogICAgICAgICAgICB0eXBlOiBwYXJzaW5nLmdldFR5cGUoKSwKICAgICAgICAgICAgZm9ybWF0SW50ZXJuYXRpb25hbDogcGFyc2luZy5mb3JtYXRJbnRlcm5hdGlvbmFsKCksCiAgICAgICAgICAgIGZvcm1hdE5hdGlvbmFsOiBwYXJzaW5nLmZvcm1hdE5hdGlvbmFsKCksCiAgICAgICAgICAgIHVyaTogcGFyc2luZy5nZXRVUkkoKSwKICAgICAgICAgICAgZTE2NDogcGFyc2luZy5mb3JtYXQoJ0UuMTY0JykKICAgICAgICAgIH0KICAgICAgICAgIDogbnVsbAogICAgICAgICkKICAgICAgfQogICAgfSwKICAgIGVtaXRWYWx1ZXMgKHBheWxvYWQpIHsKICAgICAgbGV0IGFzWW91VHlwZSA9IHRoaXMuZ2V0QXNZb3VUeXBlRm9ybWF0KHBheWxvYWQpCiAgICAgIGNvbnN0IGJhY2tTcGFjZVByZXNzZWQgPSB0aGlzLmxhc3RLZXlQcmVzc2VkID09PSA4CgogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgY29uc3QgbGFzdENoYXJhY09mUGhvbmVOdW1iZXIgPSB0aGlzLnBob25lTnVtYmVyID8gdGhpcy5waG9uZU51bWJlci50cmltKCkuc2xpY2UoLTEpIDogZmFsc2UKICAgICAgICBpZiAoYmFja1NwYWNlUHJlc3NlZCAmJiBsYXN0Q2hhcmFjT2ZQaG9uZU51bWJlciAmJiAobGFzdENoYXJhY09mUGhvbmVOdW1iZXIuc2xpY2UoLTEpID09PSAnKScpKSB7CiAgICAgICAgICBhc1lvdVR5cGUgPSB0aGlzLnBob25lTnVtYmVyLnNsaWNlKDAsIC0yKQogICAgICAgICAgcGF5bG9hZC5waG9uZU51bWJlciA9IHRoaXMucGhvbmVOdW1iZXIuc2xpY2UoMCwgLTIpCiAgICAgICAgfQoKICAgICAgICB0aGlzLnJlc3VsdHMgPSB0aGlzLmdldFBhcnNlUGhvbmVOdW1iZXJGcm9tU3RyaW5nKHBheWxvYWQpCiAgICAgICAgdGhpcy4kZW1pdCgndXBkYXRlJywgdGhpcy5yZXN1bHRzKQogICAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgYXNZb3VUeXBlKQogICAgICB9KQogICAgfSwKICAgIHNldExvY2FsZSAobG9jYWxlKSB7CiAgICAgIGNvbnN0IGNvdW50cnlBdmFpbGFibGUgPSBpc0NvdW50cnlBdmFpbGFibGUobG9jYWxlKQogICAgICBpZiAoY291bnRyeUF2YWlsYWJsZSAmJiBsb2NhbGUpIHsKICAgICAgICB0aGlzLnVzZXJMb2NhbGUgPSBjb3VudHJ5QXZhaWxhYmxlID8gbG9jYWxlIDogbnVsbAogICAgICAgIHRoaXMuZW1pdFZhbHVlcyh7Y291bnRyeUNvZGU6IGxvY2FsZSwgcGhvbmVOdW1iZXI6IHRoaXMucGhvbmVOdW1iZXJ9KQogICAgICB9IGVsc2UgaWYgKCFjb3VudHJ5QXZhaWxhYmxlICYmIGxvY2FsZSkgewogICAgICAgIHdpbmRvdy5jb25zb2xlLndhcm4oYFRoZSBsb2NhbGUgJHtsb2NhbGV9IGlzIG5vdCBhdmFpbGFibGVgKQogICAgICB9CiAgICB9LAogICAgYXN5bmMgZmV0Y2hDb3VudHJ5Q29kZSAoKSB7CiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgcmVzcG9uc2UgID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vaXAyYy5vcmcvcycpCiAgICAgICAgY29uc3QgcmVzcG9uc2VUZXh0ID0gYXdhaXQgcmVzcG9uc2UudGV4dCgpCiAgICAgICAgY29uc3QgcmVzdWx0ID0gKHJlc3BvbnNlVGV4dCB8fCAnJykudG9TdHJpbmcoKQogICAgICAgIGlmIChyZXN1bHQgJiYgcmVzdWx0WzBdID09PSAnMScpIHRoaXMuc2V0TG9jYWxlKHJlc3VsdC5zdWJzdHIoMiwgMikpCiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIHRocm93IG5ldyBFcnJvcihlcnIpCiAgICAgIH0KICAgIH0KICB9Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/uiComponents/SpherePhoneNumberInput/VuePhoneNumberInput","sourcesContent":["<template>\n  <div\n    :id=\"id\"\n    :class=\"[{ 'dark': dark }, size]\"\n    class=\"vue-phone-number-input flex\"\n  >\n    <div\n      v-if=\"!noCountrySelector\"\n      class=\"select-country-container\"\n    >\n      <CountrySelector\n        :id=\"`${uniqueId}_country_selector`\"\n        ref=\"CountrySelector\"\n        v-model=\"countryCode\"\n        :items=\"codesCountries\"\n        :countries-height=\"countriesHeight\"\n        :error=\"shouldChooseCountry\"\n        :hint=\"shouldChooseCountry ? t.countrySelectorError : null\"\n        :disabled=\"disabled\"\n        :valid=\"isValid && !noValidatorState\"\n        :preferred-countries=\"preferredCountries\"\n        :only-countries=\"onlyCountries\"\n        :ignored-countries=\"ignoredCountries\"\n        :label=\"t.countrySelectorLabel\"\n        :no-flags=\"noFlags\"\n        :show-code-on-list=\"showCodeOnList\"\n        :size=\"size\"\n        :dark=\"dark\"\n        :theme=\"theme\"\n        class=\"input-country-selector\"\n      >\n        <slot\n          slot=\"arrow\"\n          name=\"arrow\"\n        />\n      </CountrySelector>\n    </div>\n    <div class=\"flex-1\">\n      <InputTel\n        :id=\"`${uniqueId}_phone_number`\"\n        ref=\"PhoneNumberInput\"\n        v-model=\"phoneNumber\"\n        :label=\"t.phoneNumberLabel\"\n        :hint=\"hintValue\"\n        :dark=\"dark\"\n        :disabled=\"disabled\"\n        :size=\"size\"\n        :error=\"error\"\n        :valid=\"isValid && !noValidatorState\"\n        :required=\"required\"\n        :no-country-selector=\"noCountrySelector\"\n        v-bind=\"$attrs\"\n        :theme=\"theme\"\n        class=\"input-phone-number\"\n        @keydown=\"(e) => { lastKeyPressed = e.keyCode }\"\n        @focus=\"$emit('phone-number-focused')\"\n        @blur=\"$emit('phone-number-blur')\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\n  import { countries, countriesIso } from './assets/js/phoneCodeCountries.js'\n  import examples from 'libphonenumber-js/examples.mobile.json'\n  import { parsePhoneNumberFromString, AsYouType, getExampleNumber } from 'libphonenumber-js'\n  import InputTel from './InputTel'\n  import CountrySelector from './CountrySelector'\n  import locales from './assets/locales'\n  import { hexToRgba, isColorName, colorNameToHex } from 'color-transformer-ui'\n\n  const getShadowColor = (color) => {\n    return isColorName(color) ? hexToRgba(colorNameToHex(color), 0.7) : hexToRgba(color, 0.7)\n  }\n\n  const browserLocale = () => {\n    if (!window) return null\n    const browserLocale = window.navigator.userLanguage || window.navigator.language\n    let locale = browserLocale ? browserLocale.substr(3, 4).toUpperCase() : null\n    if (locale === '') locale = browserLocale.substr(0, 2).toUpperCase()\n    return locale\n  }\n\n  const isCountryAvailable = (locale) => {\n    return countriesIso.includes(locale)\n  }\n\n  export default {\n    name: 'VuePhoneNumberInput',\n    components: {\n      InputTel,\n      CountrySelector\n    },\n    props: {\n      value: { type: String, default: null },\n      id: { type: String, default: 'MazPhoneNumberInput' },\n      color: { type: String, default: 'dodgerblue' },\n      validColor: { type: String, default: 'yellowgreen' },\n      errorColor: { type: String, default: 'orangered' },\n      darkColor: { type: String, default: '#424242' },\n      disabled: { type: Boolean, default: false },\n      defaultCountryCode: { type: String, default: null },\n      size: { type: String, default: null },\n      preferredCountries: { type: Array, default: null },\n      onlyCountries: { type: Array, default: null },\n      ignoredCountries: { type: Array, default: Array },\n      translations: { type: Object, default: null },\n      noValidatorState: { type: Boolean, default: false },\n      noFlags: { type: Boolean, default: false },\n      error: { type: Boolean, default: false },\n      noExample: { type: Boolean, default: false },\n      required: { type: Boolean, default: false },\n      countriesHeight: { type: Number, default: 30 },\n      noUseBrowserLocale: { type: Boolean, default: false },\n      fetchCountry: { type: Boolean, default: false },\n      noCountrySelector: { type: Boolean, default: false },\n      showCodeOnList: { type: Boolean, default: false },\n      dark: { type: Boolean, default: false },\n      borderRadius: { type: Number, default: 4 }\n    },\n    data () {\n      return {\n        results: {},\n        userLocale: this.defaultCountryCode,\n        lastKeyPressed: null\n      }\n    },\n    computed: {\n      uniqueId () {\n        return `${this.id}-${this._uid}`\n      },\n      t () {\n        return {\n          ...locales,\n          ...this.translations\n        }\n      },\n      codesCountries () {\n        return countries\n      },\n      countryCode: {\n        get () {\n          return this.userLocale || this.results.countryCode\n        },\n        set (newCountry) {\n          this.setLocale(newCountry)\n          this.$refs.PhoneNumberInput.$el.querySelector('input').focus()\n        }\n      },\n      phoneNumber: {\n        get () {\n          return this.value\n        },\n        set (newPhone) {\n          this.emitValues({ countryCode: this.countryCode, phoneNumber: newPhone })\n        }\n      },\n      shouldChooseCountry () {\n        return !this.countryCode && !!this.phoneNumber\n      },\n      phoneFormatted () {\n        return this.results.formatInternational\n      },\n      isValid () {\n        return this.results.isValid\n      },\n      phoneNumberExample () {\n        const phoneNumber = this.countryCode ? getExampleNumber(this.countryCode, examples) : null\n        return phoneNumber ? phoneNumber.formatNational() : null\n      },\n      hasEmptyPhone () {\n        return this.phoneNumber === '' || this.phoneNumber === null\n      },\n      hintValue () {\n        return  this.noExample || !this.phoneNumberExample\n          ? null\n          : this.hasEmptyPhone || this.isValid ? null : `${this.t.example} ${this.phoneNumberExample}`\n      },\n      theme () {\n        return {\n          colorValue: this.color,\n          color: { color: this.color },\n          textColor: { color: '#747474' },\n          textDarkColor: { color: 'rgba(255, 255, 255, 0.7)' },\n          validColor: { color: this.validColor },\n          errorColor: { color: this.errorColor },\n          darkColor: { color: this.darkColor },\n          bgColor: { backgroundColor: this.color },\n          bgValidColor: { backgroundColor: this.validColor },\n          bgErrorColor: { backgroundColor: this.errorColor },\n          bgDarkColor: { backgroundColor: this.darkColor },\n          borderColor: { borderColor: this.color },\n          borderValidColor: { borderColor: this.validColor },\n          borderErrorColor: { borderColor: this.errorColor },\n          borderDarkColor: { borderColor: this.darkColor },\n          boxShadowColor: { boxShadow: `0 0 0 0.125rem ${getShadowColor(this.color)}` },\n          boxShadowValid: { boxShadow: `0 0 0 0.125rem ${getShadowColor(this.validColor)}` },\n          boxShadowError: { boxShadow: `0 0 0 0.125rem ${getShadowColor(this.errorColor)}` },\n          borderRadius: { borderRadius: `${this.borderRadius}px` },\n          borderLeftRadius: { borderTopLeftRadius: `${this.borderRadius}px`, borderBottomLeftRadius: `${this.borderRadius}px` },\n          borderRightRadius: { borderTopRightRadius: `${this.borderRadius}px`, borderBottomRightRadius: `${this.borderRadius}px` }\n        }\n      }\n    },\n    watch: {\n      defaultCountryCode (newValue, oldValue) {\n        if (newValue === oldValue) return\n        this.setLocale(newValue)\n      },\n      phoneNumber: {\n        handler (newValue, oldValue) {\n          // init component (countryCode & phoneNumber) if phone number is provide\n          if (newValue && (newValue !== oldValue)) {\n            const phoneNumber = parsePhoneNumberFromString(newValue)\n            if (phoneNumber) {\n              this.emitValues({\n                phoneNumber: phoneNumber.nationalNumber,\n                countryCode: this.countryCode ? this.countryCode : phoneNumber.country\n              })\n            }\n          }\n        },\n        immediate: true\n      }\n    },\n    async mounted () {\n      try {\n        if (this.phoneNumber && this.defaultCountryCode) this.emitValues({countryCode: this.defaultCountryCode, phoneNumber: this.phoneNumber})\n\n        if (this.defaultCountryCode && this.fetchCountry) {\n          throw new Error('MazPhoneNumberInput: Do not use \"fetch-country\" and \"default-country-code\" options in the same time')\n        }\n\n        if (this.defaultCountryCode && this.noUseBrowserLocale) {\n          throw new Error('MazPhoneNumberInput: If you use a \"default-country-code\", do not use \"no-use-browser-locale\" options')\n        }\n\n        if (this.defaultCountryCode) return\n\n        this.fetchCountry\n          ? this.fetchCountryCode()\n          : !this.noUseBrowserLocale\n            ? this.setLocale(browserLocale())\n            : null\n      } catch (err) {\n        throw new Error(err)\n      }\n    },\n    methods: {\n      getAsYouTypeFormat (payload) {\n        const { countryCode, phoneNumber } = payload\n        const asYouType = new AsYouType(countryCode)\n        return phoneNumber ? asYouType.input(phoneNumber) : null\n      },\n      getParsePhoneNumberFromString ({ phoneNumber, countryCode }) {\n        const parsing = phoneNumber && countryCode ? parsePhoneNumberFromString(phoneNumber, countryCode) : null\n        return {\n          countryCode: countryCode,\n          isValid: false,\n          ...(phoneNumber && (phoneNumber !== '')\n            ? { phoneNumber : phoneNumber }\n            : null\n          ),\n          ...(parsing\n            ? {\n              countryCallingCode: parsing.countryCallingCode,\n              formattedNumber: parsing.number,\n              nationalNumber: parsing.nationalNumber,\n              isValid: parsing.isValid(),\n              type: parsing.getType(),\n              formatInternational: parsing.formatInternational(),\n              formatNational: parsing.formatNational(),\n              uri: parsing.getURI(),\n              e164: parsing.format('E.164')\n            }\n            : null\n          )\n        }\n      },\n      emitValues (payload) {\n        let asYouType = this.getAsYouTypeFormat(payload)\n        const backSpacePressed = this.lastKeyPressed === 8\n\n        this.$nextTick(() => {\n          const lastCharacOfPhoneNumber = this.phoneNumber ? this.phoneNumber.trim().slice(-1) : false\n          if (backSpacePressed && lastCharacOfPhoneNumber && (lastCharacOfPhoneNumber.slice(-1) === ')')) {\n            asYouType = this.phoneNumber.slice(0, -2)\n            payload.phoneNumber = this.phoneNumber.slice(0, -2)\n          }\n\n          this.results = this.getParsePhoneNumberFromString(payload)\n          this.$emit('update', this.results)\n          this.$emit('input', asYouType)\n        })\n      },\n      setLocale (locale) {\n        const countryAvailable = isCountryAvailable(locale)\n        if (countryAvailable && locale) {\n          this.userLocale = countryAvailable ? locale : null\n          this.emitValues({countryCode: locale, phoneNumber: this.phoneNumber})\n        } else if (!countryAvailable && locale) {\n          window.console.warn(`The locale ${locale} is not available`)\n        }\n      },\n      async fetchCountryCode () {\n        try {\n          const response  = await fetch('https://ip2c.org/s')\n          const responseText = await response.text()\n          const result = (responseText || '').toString()\n          if (result && result[0] === '1') this.setLocale(result.substr(2, 2))\n        } catch (err) {\n          throw new Error(err)\n        }\n      }\n    }\n  }\n</script>\n<style lang=\"scss\" scoped>\n  @import 'style-helpers';\n\n  .vue-phone-number-input {\n    .select-country-container {\n      flex: 0 0 120px;\n      width: 120px;\n      min-width: 120px;\n      max-width: 120px;\n    }\n\n    &.sm .select-country-container {\n      flex: 0 0 110px;\n      width: 110px;\n      min-width: 110px;\n      max-width: 110px;\n    }\n\n    &.lg .select-country-container {\n      flex: 0 0 130px;\n      width: 130px;\n      min-width: 130px;\n      max-width: 130px;\n    }\n  }\n</style>\n"]}]}