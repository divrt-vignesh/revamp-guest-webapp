{"remainingRequest":"/home/vignesh/DIVRT/guest-webapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vignesh/DIVRT/guest-webapp/src/uiComponents/Calendar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vignesh/DIVRT/guest-webapp/src/uiComponents/Calendar.vue","mtime":1678435168541},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Calendar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8IA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Calendar.vue","sourceRoot":"src/uiComponents","sourcesContent":["<template>\n    <span :class=\"containerClass\" :style=\"styles\">\n        <CalendarInputText ref=\"input\" v-if=\"!inline\" type=\"text\" v-bind=\"$attrs\" v-on=\"listeners\" :value=\"inputFieldValue\" :readonly=\"!manualInput\" :aria-labelledby=\"ariaLabelledBy\" inputmode=\"none\"\n            :class=\"inputClass\" :style=\"inputStyle\" />\n        <CalendarButton v-if=\"showIcon\" :icon=\"icon\" tabindex=\"-1\" class=\"p-datepicker-trigger\" :disabled=\"$attrs.disabled\" @click=\"onButtonClick\" type=\"button\" :aria-label=\"inputFieldValue\"/>\n        <transition name=\"p-connected-overlay\" @enter=\"onOverlayEnter\" @after-enter=\"onOverlayEnterComplete\" @leave=\"onOverlayLeave\">\n            <div ref=\"overlay\" :class=\"panelStyleClass\" v-if=\"inline ? true : overlayVisible\" :role=\"inline ? null : 'dialog'\" :aria-labelledby=\"ariaLabelledBy\">\n                <template v-if=\"!timeOnly\">\n                    <div class=\"p-datepicker-group-container\">\n                        <div class=\"p-datepicker-group\" v-for=\"(month,groupIndex) of months\" :key=\"month.month + month.year\">\n                            <div class=\"p-datepicker-header\">\n                                <slot name=\"header\"></slot>\n                                <button class=\"p-datepicker-prev p-link\" v-show=\"groupIndex === 0\" @click=\"onPrevButtonClick\" type=\"button\" @keydown=\"onContainerButtonKeydown\" v-ripple :disabled=\"$attrs.disabled\">\n                                    <span class=\"p-datepicker-prev-icon pi pi-chevron-left\"></span>\n                                </button>\n                                <div class=\"p-datepicker-title\">\n                                    <button type=\"button\" @click=\"switchToMonthView\" @keydown=\"onContainerButtonKeydown\" v-if=\"currentView === 'date'\" class=\"p-datepicker-month p-link\" :disabled=\"switchViewButtonDisabled\">\n                                        {{getMonthName(month.month)}}\n                                    </button>\n                                    <button type=\"button\" @click=\"switchToYearView\" @keydown=\"onContainerButtonKeydown\" v-if=\"currentView !== 'year'\" class=\"p-datepicker-year p-link\" :disabled=\"switchViewButtonDisabled\">\n                                        {{getYear(month)}}\n                                    </button>\n                                    <span class=\"p-datepicker-decade\" v-if=\"currentView === 'year'\">\n                                        <slot name=\"decade\" :years=\"yearPickerValues\">\n                                            {{yearPickerValues[0]}} - {{yearPickerValues[yearPickerValues.length - 1]}}\n                                        </slot>\n                                    </span>\n                                </div>\n                                <button class=\"p-datepicker-next p-link\" v-show=\"numberOfMonths === 1 ? true : (groupIndex === numberOfMonths - 1)\"\n                                    @click=\"onNextButtonClick\" type=\"button\" @keydown=\"onContainerButtonKeydown\" v-ripple :disabled=\"$attrs.disabled\">\n                                    <span class=\"p-datepicker-next-icon pi pi-chevron-right\"></span>\n                                </button>\n                            </div>\n                            <div class=\"p-datepicker-calendar-container\" v-if=\"currentView ==='date'\">\n                                <table class=\"p-datepicker-calendar\">\n                                    <thead>\n                                        <tr>\n                                            <th scope=\"col\" v-if=\"showWeek\" class=\"p-datepicker-weekheader p-disabled\">\n                                                <span>{{weekHeaderLabel}}</span>\n                                            </th>\n                                            <th scope=\"col\" v-for=\"weekDay of weekDays\" :key=\"weekDay\">\n                                                <span>{{weekDay}}</span>\n                                            </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr v-for=\"(week,i) of month.dates\" :key=\"week[0].day + '' + week[0].month\">\n                                            <td v-if=\"showWeek\" class=\"p-datepicker-weeknumber\">\n                                                <span class=\"p-disabled\">\n                                                    <span style=\"visibility:hidden\" v-if=\"month.weekNumbers[i] < 10\">0</span>\n                                                    {{month.weekNumbers[i]}}\n                                                </span>\n                                            </td>\n                                            <td v-for=\"date of week\" :key=\"date.day + '' + date.month\" :class=\"{'p-datepicker-other-month': date.otherMonth, 'p-datepicker-today': date.today}\">\n                                                <span :class=\"{'p-highlight': isSelected(date), 'p-disabled': !date.selectable}\" @click=\"onDateSelect($event, date)\"\n                                                    draggable=\"false\" @keydown=\"onDateCellKeydown($event,date,groupIndex)\" v-ripple>\n                                                    <slot name=\"date\" :date=\"date\">{{date.day}}</slot>\n                                                </span>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"p-monthpicker\" v-if=\"currentView === 'month'\">\n                        <span v-for=\"(m,i) of monthPickerValues\" :key=\"m\" @click=\"onMonthSelect($event, i)\" @keydown=\"onMonthCellKeydown($event,i)\"\n                                class=\"p-monthpicker-month\" :class=\"{'p-highlight': isMonthSelected(i)}\" v-ripple>\n                            {{m}}\n                        </span>\n                    </div>\n                    <div class=\"p-yearpicker\" v-if=\"currentView === 'year'\">\n                        <span v-for=\"y of yearPickerValues\" :key=\"y\" @click=\"onYearSelect($event, y)\" @keydown=\"onYearCellKeydown($event,y)\"\n                                class=\"p-yearpicker-year\" :class=\"{'p-highlight': isYearSelected(y)}\" v-ripple>\n                            {{y}}\n                        </span>\n                    </div>\n                </template>\n                <div class=\"p-timepicker\" v-if=\"(showTime||timeOnly) && currentView === 'date'\">\n                    <div class=\"p-hour-picker\">\n                        <button class=\"p-link\" @mousedown=\"onTimePickerElementMouseDown($event, 0, 1)\" @mouseup=\"onTimePickerElementMouseUp($event)\" @keydown=\"onContainerButtonKeydown\" v-ripple\n                            @mouseleave=\"onTimePickerElementMouseLeave()\" @keydown.enter=\"onTimePickerElementMouseDown($event, 0, 1)\" @keyup.enter=\"onTimePickerElementMouseUp($event)\" type=\"button\">\n                            <span class=\"pi pi-chevron-up\"></span>\n                        </button>\n                        <span>{{formattedCurrentHour}}</span>\n                        <button class=\"p-link\" @mousedown=\"onTimePickerElementMouseDown($event, 0, -1)\" @mouseup=\"onTimePickerElementMouseUp($event)\" @keydown=\"onContainerButtonKeydown\" v-ripple\n                            @mouseleave=\"onTimePickerElementMouseLeave()\" @keydown.enter=\"onTimePickerElementMouseDown($event, 0, -1)\" @keyup.enter=\"onTimePickerElementMouseUp($event)\" type=\"button\">\n                            <span class=\"pi pi-chevron-down\"></span>\n                        </button>\n                    </div>\n                    <div class=\"p-separator\">\n                        <span>{{timeSeparator}}</span>\n                    </div>\n                    <div class=\"p-minute-picker\">\n                        <button class=\"p-link\" @mousedown=\"onTimePickerElementMouseDown($event, 1, 1)\" @mouseup=\"onTimePickerElementMouseUp($event)\" @keydown=\"onContainerButtonKeydown\" v-ripple :disabled=\"$attrs.disabled\"\n                            @mouseleave=\"onTimePickerElementMouseLeave()\" @keydown.enter=\"onTimePickerElementMouseDown($event, 1, 1)\" @keyup.enter=\"onTimePickerElementMouseUp($event)\" type=\"button\">\n                            <span class=\"pi pi-chevron-up\"></span>\n                        </button>\n                        <span>{{formattedCurrentMinute}}</span>\n                        <button class=\"p-link\" @mousedown=\"onTimePickerElementMouseDown($event, 1, -1)\" @mouseup=\"onTimePickerElementMouseUp($event)\" @keydown=\"onContainerButtonKeydown\" v-ripple :disabled=\"$attrs.disabled\"\n                            @mouseleave=\"onTimePickerElementMouseLeave()\" @keydown.enter=\"onTimePickerElementMouseDown($event, 1, -1)\" @keyup.enter=\"onTimePickerElementMouseUp($event)\" type=\"button\">\n                            <span class=\"pi pi-chevron-down\"></span>\n                        </button>\n                    </div>\n                    <div class=\"p-separator\" v-if=\"showSeconds\">\n                        <span>{{timeSeparator}}</span>\n                    </div>\n                    <div class=\"p-second-picker\" v-if=\"showSeconds\">\n                        <button class=\"p-link\" @mousedown=\"onTimePickerElementMouseDown($event, 2, 1)\" @mouseup=\"onTimePickerElementMouseUp($event)\" @keydown=\"onContainerButtonKeydown\" v-ripple  :disabled=\"$attrs.disabled\"\n                            @mouseleave=\"onTimePickerElementMouseLeave()\" @keydown.enter=\"onTimePickerElementMouseDown($event, 2, 1)\" @keyup.enter=\"onTimePickerElementMouseUp($event)\" type=\"button\">\n                            <span class=\"pi pi-chevron-up\"></span>\n                        </button>\n                        <span>{{formattedCurrentSecond}}</span>\n                        <button class=\"p-link\" @mousedown=\"onTimePickerElementMouseDown($event, 2, -1)\" @mouseup=\"onTimePickerElementMouseUp($event)\" @keydown=\"onContainerButtonKeydown\" v-ripple  :disabled=\"$attrs.disabled\"\n                            @mouseleave=\"onTimePickerElementMouseLeave()\" @keydown.enter=\"onTimePickerElementMouseDown($event, 2, -1)\" @keyup.enter=\"onTimePickerElementMouseUp($event)\" type=\"button\">\n                            <span class=\"pi pi-chevron-down\"></span>\n                        </button>\n                    </div>\n                    <div class=\"p-separator\" v-if=\"hourFormat=='12'\">\n                        <span>{{timeSeparator}}</span>\n                    </div>\n                    <div class=\"p-ampm-picker\" v-if=\"hourFormat=='12'\">\n                        <button class=\"p-link\" @click=\"toggleAMPM($event)\" type=\"button\" v-ripple :disabled=\"$attrs.disabled\">\n                            <span class=\"pi pi-chevron-up\"></span>\n                        </button>\n                        <span>{{pm ? 'PM' : 'AM'}}</span>\n                        <button class=\"p-link\" @click=\"toggleAMPM($event)\" type=\"button\" v-ripple :disabled=\"$attrs.disabled\">\n                            <span class=\"pi pi-chevron-down\"></span>\n                        </button>\n                    </div>\n                </div>\n                <div class=\"p-datepicker-buttonbar\" v-if=\"showButtonBar\">\n                    <CalendarButton type=\"button\" :label=\"todayLabel\" @click=\"onTodayButtonClick($event)\" class=\"p-button-text\" @keydown=\"onContainerButtonKeydown\"/>\n                    <CalendarButton type=\"button\" :label=\"clearLabel\" @click=\"onClearButtonClick($event)\" class=\"p-button-text\" @keydown=\"onContainerButtonKeydown\"/>\n                </div>\n                <slot name=\"footer\"></slot>\n            </div>\n        </transition>\n    </span>\n</template>\n\n<script>\nimport ConnectedOverlayScrollHandler from '../utils/ConnectedOverlayScrollHandler';\nimport UniqueComponentId from '../utils/UniqueComponentId';\nimport InputText from '../inputtext/InputText';\nimport Button from '../button/Button';\nimport DomHandler from '../utils/DomHandler';\nimport Ripple from '../ripple/Ripple';\n\nexport default {\n    inheritAttrs: false,\n    props: {\n        value: null,\n        selectionMode: {\n            type: String,\n            default: 'single'\n        },\n        dateFormat: String,\n        inline: {\n            type: Boolean,\n            default: false\n        },\n        showOtherMonths: {\n            type: Boolean,\n            default: true\n        },\n        selectOtherMonths: {\n            type: Boolean,\n            default: false\n        },\n        showIcon: {\n            type: Boolean,\n            default: false\n        },\n        icon: {\n            type: String,\n            default: 'pi pi-calendar'\n        },\n        numberOfMonths: {\n            type: Number,\n            default: 1\n        },\n        responsiveOptions: Array,\n        view: {\n            type: String,\n            default: 'date'\n        },\n        touchUI: {\n            type: Boolean,\n            default: false\n        },\n        monthNavigator: {\n            type: Boolean,\n            default: false\n        },\n        yearNavigator: {\n            type: Boolean,\n            default: false\n        },\n        yearRange: {\n            type: String,\n            default: null\n        },\n        panelClass: {\n            type: String,\n            default: null\n        },\n        panelStyle: {\n            type: String,\n            default: null\n        },\n        minDate: {\n            type: Date,\n            value: null\n        },\n        maxDate: {\n            type: Date,\n            value: null\n        },\n        disabledDates: {\n            type: Array,\n            value: null\n        },\n        disabledDays: {\n            type: Array,\n            value: null\n        },\n        maxDateCount: {\n            type: Number,\n            value: null\n        },\n        showOnFocus: {\n            type: Boolean,\n            default: true\n        },\n        autoZIndex: {\n            type: Boolean,\n            default: true\n        },\n        baseZIndex: {\n            type: Number,\n            default: 0\n        },\n        showButtonBar: {\n            type: Boolean,\n            default: false\n        },\n        shortYearCutoff: {\n            type: String,\n            default: '+10'\n        },\n        showTime: {\n            type: Boolean,\n            default: false\n        },\n        timeOnly: {\n            type: Boolean,\n            default: false\n        },\n        hourFormat: {\n            type: String,\n            default: '24'\n        },\n        stepHour: {\n            type: Number,\n            default: 1\n        },\n        stepMinute: {\n            type: Number,\n            default: 1\n        },\n        stepSecond: {\n            type: Number,\n            default: 1\n        },\n        showSeconds: {\n            type: Boolean,\n            default: false\n        },\n        hideOnDateTimeSelect: {\n            type: Boolean,\n            default: false\n        },\n        timeSeparator: {\n            type: String,\n            default: ':'\n        },\n        showWeek: {\n            type: Boolean,\n            default: false\n        },\n        manualInput: {\n            type: Boolean,\n            default: true\n        },\n        ariaLabelledBy: {\n            type: String,\n            default: null\n        },\n        appendTo: {\n            type: String,\n            default: null\n        },\n        inputClass: null,\n        inputStyle: null,\n        className: null,\n        styles: null\n    },\n    navigationState: null,\n    timePickerChange: false,\n    scrollHandler: null,\n    outsideClickListener: null,\n    maskClickListener: null,\n    resizeListener: null,\n    mask: null,\n    timePickerTimer: null,\n    isKeydown: false,\n    preventFocus: false,\n    created() {\n        this.updateCurrentMetaData();\n    },\n    mounted() {\n        this.createResponsiveStyle();\n        if (this.inline) {\n            this.$refs.overlay && this.$refs.overlay.setAttribute(this.attributeSelector, '');\n            if (!this.$attrs.disabled) {\n                this.initFocusableCell();\n                this.$refs.overlay.style.width = DomHandler.getOuterWidth(this.$el) + 'px';\n            }\n        }\n    },\n    updated() {\n        if (this.$refs.overlay) {\n            this.preventFocus = true;\n            this.updateFocus();\n        }\n\n        if (this.$refs.input && this.selectionStart != null && this.selectionEnd != null) {\n            this.$refs.input.$el.selectionStart = this.selectionStart;\n            this.$refs.input.$el.selectionEnd = this.selectionEnd;\n            this.selectionStart = null;\n            this.selectionEnd = null;\n        }\n    },\n    beforeDestroy() {\n        if (this.timePickerTimer) {\n            clearTimeout(this.timePickerTimer);\n        }\n\n        if (this.mask) {\n            this.destroyMask();\n        }\n\n        this.destroyResponsiveStyleElement();\n        this.restoreAppend();\n        this.unbindOutsideClickListener();\n        this.unbindResizeListener();\n\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n    },\n    data() {\n        return {\n            currentMonth: null,\n            currentYear: null,\n            currentHour: null,\n            currentMinute: null,\n            currentSecond: null,\n            pm: null,\n            focused: false,\n            overlayVisible: false,\n            currentView: this.view\n        }\n    },\n    watch: {\n        value() {\n            this.updateCurrentMetaData();\n        },\n        months() {\n            if (this.$refs.overlay) {\n                if (!this.focused) {\n                    setTimeout(this.updateFocus, 0);\n                }\n            }\n        },\n        numberOfMonths() {\n            this.destroyResponsiveStyleElement();\n            this.createResponsiveStyle();\n        },\n        responsiveOptions() {\n            this.destroyResponsiveStyleElement();\n            this.createResponsiveStyle();\n        },\n        currentView() {\n            Promise.resolve(null).then(() => this.alignOverlay());\n        }\n    },\n    methods: {\n        isComparable() {\n            return this.value != null && typeof this.value !== 'string';\n        },\n        isSelected(dateMeta) {\n            if (!this.isComparable()) {\n                return false;\n            }\n\n            if (this.value) {\n                if (this.isSingleSelection()) {\n                    return this.isDateEquals(this.value, dateMeta);\n                }\n                else if (this.isMultipleSelection()) {\n                    let selected = false;\n                    for (let date of this.value) {\n                        selected = this.isDateEquals(date, dateMeta);\n                        if (selected) {\n                            break;\n                        }\n                    }\n\n                    return selected;\n                }\n                else if( this.isRangeSelection()) {\n                    if (this.value[1])\n                        return this.isDateEquals(this.value[0], dateMeta) || this.isDateEquals(this.value[1], dateMeta) || this.isDateBetween(this.value[0], this.value[1], dateMeta);\n                    else {\n                        return this.isDateEquals(this.value[0], dateMeta);\n                    }\n\n                }\n            }\n\n            return false;\n        },\n        isMonthSelected(month) {\n            if (this.isComparable()) {\n                let value = this.isRangeSelection() ? this.value[0] : this.value;\n                return !this.isMultipleSelection() ? (value.getMonth() === month && value.getFullYear() === this.currentYear) : false;\n            }\n            return false;\n        },\n        isYearSelected(year) {\n            if (this.isComparable()) {\n                let value = this.isRangeSelection() ? this.value[0] : this.value;\n                return !this.isMultipleSelection() && this.isComparable() ? (value.getFullYear() === year) : false;\n            }\n            return false;\n        },\n        isDateEquals(value, dateMeta) {\n            if (value)\n                return value.getDate() === dateMeta.day && value.getMonth() === dateMeta.month && value.getFullYear() === dateMeta.year;\n            else\n                return false;\n        },\n        isDateBetween(start, end, dateMeta) {\n            let between = false;\n            if (start && end) {\n                let date = new Date(dateMeta.year, dateMeta.month, dateMeta.day);\n                return start.getTime() <= date.getTime() && end.getTime() >= date.getTime();\n            }\n\n            return between;\n        },\n        getFirstDayOfMonthIndex(month, year) {\n            let day = new Date();\n            day.setDate(1);\n            day.setMonth(month);\n            day.setFullYear(year);\n\n            let dayIndex = day.getDay() + this.sundayIndex;\n            return dayIndex >= 7 ? dayIndex - 7 : dayIndex;\n        },\n        getDaysCountInMonth(month, year) {\n            return 32 - this.daylightSavingAdjust(new Date(year, month, 32)).getDate();\n        },\n        getDaysCountInPrevMonth(month, year) {\n            let prev = this.getPreviousMonthAndYear(month, year);\n            return this.getDaysCountInMonth(prev.month, prev.year);\n        },\n        getPreviousMonthAndYear(month, year) {\n            let m, y;\n\n            if (month === 0) {\n                m = 11;\n                y = year - 1;\n            }\n            else {\n                m = month - 1;\n                y = year;\n            }\n\n            return {'month':m, 'year': y};\n        },\n        getNextMonthAndYear(month, year) {\n            let m, y;\n\n            if (month === 11) {\n                m = 0;\n                y = year + 1;\n            }\n            else {\n                m = month + 1;\n                y = year;\n            }\n\n            return {'month':m,'year':y};\n        },\n        daylightSavingAdjust(date) {\n            if (!date) {\n                return null;\n            }\n\n            date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);\n\n            return date;\n        },\n        isToday(today, day, month, year) {\n            return today.getDate() === day && today.getMonth() === month && today.getFullYear() === year;\n        },\n        isSelectable(day, month, year, otherMonth) {\n            let validMin = true;\n            let validMax = true;\n            let validDate = true;\n            let validDay = true;\n\n            if (otherMonth && !this.selectOtherMonths) {\n                return false;\n            }\n\n            if (this.minDate) {\n                if (this.minDate.getFullYear() > year) {\n                    validMin = false;\n                }\n                else if (this.minDate.getFullYear() === year) {\n                    if (this.minDate.getMonth() > month) {\n                        validMin = false;\n                    }\n                    else if (this.minDate.getMonth() === month) {\n                        if (this.minDate.getDate() > day) {\n                            validMin = false;\n                        }\n                    }\n                }\n            }\n\n            if (this.maxDate) {\n                if (this.maxDate.getFullYear() < year) {\n                    validMax = false;\n                }\n                else if (this.maxDate.getFullYear() === year) {\n                    if (this.maxDate.getMonth() < month) {\n                        validMax = false;\n                    }\n                    else if (this.maxDate.getMonth() === month) {\n                        if (this.maxDate.getDate() < day) {\n                            validMax = false;\n                        }\n                    }\n                }\n            }\n\n            if (this.disabledDates) {\n                validDate = !this.isDateDisabled(day,month,year);\n            }\n\n            if (this.disabledDays) {\n                validDay = !this.isDayDisabled(day,month,year)\n            }\n\n            return validMin && validMax && validDate && validDay;\n        },\n        onOverlayEnter(el) {\n            el.setAttribute(this.attributeSelector, '');\n\n            if (this.autoZIndex) {\n                this.$refs.overlay.style.zIndex = String(this.baseZIndex + DomHandler.generateZIndex());\n            }\n            this.appendContainer();\n            this.alignOverlay();\n            this.$emit('show');\n        },\n        onOverlayEnterComplete() {\n            this.bindOutsideClickListener();\n            this.bindScrollListener();\n            this.bindResizeListener();\n        },\n        onOverlayLeave() {\n            this.currentView = this.view;\n            this.unbindOutsideClickListener();\n            this.unbindScrollListener();\n            this.unbindResizeListener();\n            this.$emit('hide');\n\n            if (this.mask) {\n                this.disableModality();\n            }\n        },\n        onPrevButtonClick(event) {\n            if(this.showOtherMonths) {\n                this.navigationState = {backward: true, button: true};\n                this.navBackward(event);\n            }\n        },\n        onNextButtonClick(event) {\n            if(this.showOtherMonths) {\n                this.navigationState = {backward: false, button: true};\n                this.navForward(event);\n            }\n        },\n        navBackward(event) {\n            event.preventDefault();\n\n            if (!this.isEnabled()) {\n                return;\n            }\n\n            if (this.currentView === 'month') {\n                this.decrementYear();\n            }\n            else if (this.currentView === 'year') {\n                this.decrementDecade();\n            }\n            else {\n                if (this.currentMonth === 0) {\n                    this.currentMonth = 11;\n                    this.decrementYear();\n                }\n                else {\n                    this.currentMonth--;\n                }\n\n                this.$emit('month-change', {month: this.currentMonth + 1, year: this.currentYear});\n            }\n        },\n        navForward(event) {\n            event.preventDefault();\n\n            if (!this.isEnabled()) {\n                return;\n            }\n\n            if (this.currentView === 'month') {\n                this.incrementYear();\n            }\n            else if (this.currentView === 'year') {\n                this.incrementDecade();\n            }\n            else {\n                if (this.currentMonth === 11) {\n                    this.currentMonth = 0;\n                    this.incrementYear();\n                }\n                else {\n                    this.currentMonth++;\n                }\n\n                this.$emit('month-change', {month: this.currentMonth + 1, year: this.currentYear});\n            }\n        },\n        decrementYear() {\n            this.currentYear--;\n        },\n        decrementDecade() {\n            this.currentYear = this.currentYear - 10;\n        },\n        incrementYear() {\n            this.currentYear++;\n        },\n        incrementDecade() {\n            this.currentYear = this.currentYear + 10;\n        },\n        switchToMonthView(event) {\n            this.currentView = 'month';\n            setTimeout(this.updateFocus, 0);\n            event.preventDefault();\n        },\n        switchToYearView(event) {\n            this.currentView = 'year';\n            setTimeout(this.updateFocus, 0);\n            event.preventDefault();\n        },\n        isEnabled() {\n            return !this.$attrs.disabled && !this.$attrs.readonly;\n        },\n        updateCurrentTimeMeta(date) {\n            const hours = date.getHours();\n\n            if (this.hourFormat === '12') {\n                this.pm = hours > 11;\n\n                if (hours >= 12)\n                    this.currentHour = (hours == 12) ? 12 : hours - 12;\n                else\n                    this.currentHour = (hours == 0) ? 12 : hours;\n            }\n            else {\n                this.currentHour = date.getHours();\n            }\n\n            this.currentMinute = date.getMinutes();\n            this.currentSecond = date.getSeconds();\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    if (this.overlayVisible && this.isOutsideClicked(event)) {\n                        this.overlayVisible = false;\n                    }\n                };\n                document.addEventListener('mousedown', this.outsideClickListener);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('mousedown', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        bindScrollListener() {\n            if (!this.scrollHandler) {\n                this.scrollHandler = new ConnectedOverlayScrollHandler(this.$el, () => {\n                    if (this.overlayVisible) {\n                        this.overlayVisible = false;\n                    }\n                });\n            }\n\n            this.scrollHandler.bindScrollListener();\n        },\n        unbindScrollListener() {\n            if (this.scrollHandler) {\n                this.scrollHandler.unbindScrollListener();\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = () => {\n                    if (this.overlayVisible) {\n                        this.overlayVisible = false;\n                    }\n                };\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        isOutsideClicked(event) {\n            return !(this.$el.isSameNode(event.target) || this.isNavIconClicked(event) ||\n                    this.$el.contains(event.target) || (this.$refs.overlay && this.$refs.overlay.contains(event.target)));\n        },\n        isNavIconClicked(event) {\n            return (DomHandler.hasClass(event.target, 'p-datepicker-prev') || DomHandler.hasClass(event.target, 'p-datepicker-prev-icon')\n                    || DomHandler.hasClass(event.target, 'p-datepicker-next') || DomHandler.hasClass(event.target, 'p-datepicker-next-icon'));\n        },\n        alignOverlay() {\n            if (this.touchUI) {\n                this.enableModality();\n            }\n            else if (this.$refs.overlay) {\n                if (this.appendTo)\n                    DomHandler.absolutePosition(this.$refs.overlay, this.$el);\n                else\n                    DomHandler.relativePosition(this.$refs.overlay, this.$el);\n            }\n        },\n        onButtonClick() {\n            if (this.isEnabled()) {\n                if (!this.overlayVisible) {\n                    this.$refs.input.$el.focus();\n                    this.overlayVisible = true;\n                }\n                else {\n                    this.overlayVisible = false;\n                }\n            }\n        },\n        isDateDisabled(day, month, year) {\n            if (this.disabledDates) {\n                for (let disabledDate of this.disabledDates) {\n                    if (disabledDate.getFullYear() === year && disabledDate.getMonth() === month && disabledDate.getDate() === day) {\n                        return true;\n                    }\n                }\n            }\n\n            return false;\n        },\n        isDayDisabled(day, month, year) {\n            if (this.disabledDays) {\n                let weekday = new Date(year, month, day);\n                let weekdayNumber = weekday.getDay();\n                return this.disabledDays.indexOf(weekdayNumber) !== -1;\n            }\n            return false;\n        },\n        onMonthDropdownChange(value) {\n            this.currentMonth = parseInt(value);\n            this.$emit('month-change', {month: this.currentMonth + 1, year: this.currentYear});\n        },\n        onYearDropdownChange(value) {\n            this.currentYear = parseInt(value);\n            this.$emit('year-change', {month: this.currentMonth + 1, year: this.currentYear});\n        },\n        onDateSelect(event, dateMeta) {\n            if (this.$attrs.disabled || !dateMeta.selectable) {\n                return;\n            }\n\n            DomHandler.find(this.$refs.overlay, '.p-datepicker-calendar td span:not(.p-disabled)').forEach(cell => cell.tabIndex = -1);\n\n            if (event) {\n                event.currentTarget.focus();\n            }\n\n            if (this.isMultipleSelection() && this.isSelected(dateMeta)) {\n                let newValue = this.value.filter(date => !this.isDateEquals(date, dateMeta));\n                this.updateModel(newValue);\n            }\n            else {\n                if (this.shouldSelectDate(dateMeta)) {\n                    if (dateMeta.otherMonth) {\n                        this.currentMonth = dateMeta.month;\n                        this.currentYear = dateMeta.year;\n                        this.selectDate(dateMeta);\n                    }\n                    else {\n                        this.selectDate(dateMeta);\n                    }\n                }\n            }\n\n            if (this.isSingleSelection() && (!this.showTime || this.hideOnDateTimeSelect)) {\n                setTimeout(() => {\n                    this.overlayVisible = false;\n                }, 150);\n            }\n        },\n        selectDate(dateMeta) {\n            let date = new Date(dateMeta.year, dateMeta.month, dateMeta.day);\n\n            if (this.showTime) {\n                if (this.hourFormat === '12' && this.pm && this.currentHour != 12)\n                    date.setHours(this.currentHour + 12);\n                else\n                    date.setHours(this.currentHour);\n\n                date.setMinutes(this.currentMinute);\n                date.setSeconds(this.currentSecond);\n            }\n\n            if (this.minDate && this.minDate > date) {\n                date = this.minDate;\n                this.currentHour = date.getHours();\n                this.currentMinute = date.getMinutes();\n                this.currentSecond = date.getSeconds();\n            }\n\n            if (this.maxDate && this.maxDate < date) {\n                date = this.maxDate;\n                this.currentHour = date.getHours();\n                this.currentMinute = date.getMinutes();\n                this.currentSecond = date.getSeconds();\n            }\n\n            let modelVal = null;\n\n            if (this.isSingleSelection()) {\n                modelVal = date;\n            }\n            else if (this.isMultipleSelection()) {\n                modelVal = this.value ? [...this.value, date] : [date];\n            }\n            else if (this.isRangeSelection()) {\n                if (this.value && this.value.length) {\n                    let startDate = this.value[0];\n                    let endDate = this.value[1];\n\n                    if (!endDate && date.getTime() >= startDate.getTime()) {\n                        endDate = date;\n                    }\n                    else {\n                        startDate = date;\n                        endDate = null;\n                    }\n                    modelVal = [startDate, endDate];\n                }\n                else {\n                    modelVal = [date, null];\n                }\n            }\n\n            if (modelVal !== null) {\n                this.updateModel(modelVal);\n            }\n            this.$emit('date-select', date);\n        },\n        updateModel(value) {\n            this.$emit('input', value);\n        },\n        shouldSelectDate() {\n            if (this.isMultipleSelection())\n                return this.maxDateCount != null ? this.maxDateCount > (this.value ? this.value.length : 0) : true;\n            else\n                return true;\n        },\n        isSingleSelection() {\n            return this.selectionMode === 'single';\n        },\n        isRangeSelection() {\n            return this.selectionMode === 'range';\n        },\n        isMultipleSelection() {\n            return this.selectionMode === 'multiple';\n        },\n        formatValue(value) {\n            if (typeof value === 'string') {\n                return value;\n            }\n\n            let formattedValue = '';\n            if (value) {\n                try {\n                    if (this.isSingleSelection()) {\n                        formattedValue = this.formatDateTime(value);\n                    }\n                    else if (this.isMultipleSelection()) {\n                        for(let i = 0; i < value.length; i++) {\n                            let dateAsString = this.formatDateTime(value[i]);\n                            formattedValue += dateAsString;\n                            if(i !== (value.length - 1)) {\n                                formattedValue += ', ';\n                            }\n                        }\n                    }\n                    else if (this.isRangeSelection()) {\n                        if (value && value.length) {\n                            let startDate = value[0];\n                            let endDate = value[1];\n\n                            formattedValue = this.formatDateTime(startDate);\n                            if (endDate) {\n                                formattedValue += ' - ' + this.formatDateTime(endDate);\n                            }\n                        }\n                    }\n                }\n                catch(err) {\n                    formattedValue = value;\n                }\n            }\n\n            return formattedValue;\n        },\n        formatDateTime(date) {\n            let formattedValue = null;\n            if (date) {\n                if(this.timeOnly) {\n                    formattedValue = this.formatTime(date);\n                }\n                else {\n                    formattedValue = this.formatDate(date, this.datePattern);\n                    if(this.showTime) {\n                        formattedValue += ' ' + this.formatTime(date);\n                    }\n                }\n            }\n\n            return formattedValue;\n        },\n        formatDate(date, format) {\n            if (!date) {\n                return '';\n            }\n\n            let iFormat;\n            const lookAhead = (match) => {\n                const matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) === match);\n                if (matches) {\n                    iFormat++;\n                }\n                return matches;\n            },\n                formatNumber = (match, value, len) => {\n                    let num = '' + value;\n                    if (lookAhead(match)) {\n                        while (num.length < len) {\n                            num = '0' + num;\n                        }\n                    }\n                    return num;\n                },\n                formatName = (match, value, shortNames, longNames) => {\n                    return (lookAhead(match) ? longNames[value] : shortNames[value]);\n                };\n            let output = '';\n            let literal = false;\n\n            if (date) {\n                for (iFormat = 0; iFormat < format.length; iFormat++) {\n                    if (literal) {\n                        if (format.charAt(iFormat) === '\\'' && !lookAhead('\\'')) {\n                            literal = false;\n                        } else {\n                            output += format.charAt(iFormat);\n                        }\n                    } else {\n                        switch (format.charAt(iFormat)) {\n                            case 'd':\n                                output += formatNumber('d', date.getDate(), 2);\n                                break;\n                            case 'D':\n                                output += formatName('D', date.getDay(), this.$primevue.config.locale.dayNamesShort, this.$primevue.config.locale.dayNames);\n                                break;\n                            case 'o':\n                                output += formatNumber('o',\n                                Math.round((\n                                    new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime() -\n                                    new Date(date.getFullYear(), 0, 0).getTime()) / 86400000), 3);\n                                break;\n                            case 'm':\n                                output += formatNumber('m', date.getMonth() + 1, 2);\n                                break;\n                            case 'M':\n                                output += formatName('M',date.getMonth(), this.$primevue.config.locale.monthNamesShort, this.$primevue.config.locale.monthNames);\n                                break;\n                            case 'y':\n                                output += lookAhead('y') ? date.getFullYear() : (date.getFullYear() % 100 < 10 ? '0' : '') + (date.getFullYear() % 100);\n                                break;\n                            case '@':\n                                output += date.getTime();\n                                break;\n                            case '!':\n                                output += date.getTime() * 10000 + this.ticksTo1970;\n                                break;\n                            case '\\'':\n                                if (lookAhead('\\'')) {\n                                    output += '\\'';\n                                } else {\n                                    literal = true;\n                                }\n                                break;\n                            default:\n                                output += format.charAt(iFormat);\n                        }\n                    }\n                }\n            }\n            return output;\n        },\n        formatTime(date) {\n            if (!date) {\n                return '';\n            }\n\n            let output = '';\n            let hours = date.getHours();\n            let minutes = date.getMinutes();\n            let seconds = date.getSeconds();\n\n            if (this.hourFormat === '12' && hours > 11 && hours !== 12) {\n                hours -= 12;\n            }\n\n            if (this.hourFormat === '12') {\n                output += hours === 0 ? 12 : (hours < 10) ? '0' + hours : hours;\n            }\n            else {\n                output += (hours < 10) ? '0' + hours : hours;\n            }\n            output += ':';\n            output += (minutes < 10) ? '0' + minutes : minutes;\n\n            if (this.showSeconds) {\n                output += ':';\n                output += (seconds < 10) ? '0' + seconds : seconds;\n            }\n\n            if (this.hourFormat === '12') {\n                output += date.getHours() > 11 ? ' PM' : ' AM';\n            }\n\n            return output;\n        },\n        onTodayButtonClick(event) {\n            let date = new Date();\n            let dateMeta = {\n                day: date.getDate(),\n                month: date.getMonth(),\n                year: date.getFullYear(),\n                otherMonth: date.getMonth() !== this.currentMonth || date.getFullYear() !== this.currentYear,\n                today: true,\n                selectable: true\n            };\n\n            this.onDateSelect(null, dateMeta);\n            this.$emit('today-click', date);\n            event.preventDefault();\n        },\n        onClearButtonClick(event) {\n            this.updateModel(null);\n            this.overlayVisible = false;\n            this.$emit('clear-click', event);\n            event.preventDefault();\n        },\n        onTimePickerElementMouseDown(event, type, direction) {\n            if (this.isEnabled()) {\n                this.repeat(event, null, type, direction);\n                event.preventDefault();\n            }\n        },\n        onTimePickerElementMouseUp(event) {\n            if (this.isEnabled()) {\n                this.clearTimePickerTimer();\n                this.updateModelTime();\n                event.preventDefault();\n            }\n        },\n        onTimePickerElementMouseLeave() {\n            this.clearTimePickerTimer();\n        },\n        repeat(event, interval, type, direction) {\n            let i = interval||500;\n\n            this.clearTimePickerTimer();\n            this.timePickerTimer = setTimeout(() => {\n                this.repeat(event, 100, type, direction);\n            }, i);\n\n            switch(type) {\n                case 0:\n                    if (direction === 1)\n                        this.incrementHour(event);\n                    else\n                        this.decrementHour(event);\n                break;\n\n                case 1:\n                    if (direction === 1)\n                        this.incrementMinute(event);\n                    else\n                        this.decrementMinute(event);\n                break;\n\n                case 2:\n                    if (direction === 1)\n                        this.incrementSecond(event);\n                    else\n                        this.decrementSecond(event);\n                break;\n            }\n        },\n        convertTo24Hour(hours, pm) {\n            if (this.hourFormat == '12') {\n                if (hours === 12) {\n                    return (pm ? 12 : 0);\n                } else {\n                    return (pm ? hours + 12 : hours);\n                }\n            }\n            return hours;\n        },\n        validateTime(hour, minute, second, pm) {\n            let value = this.isComparable() ? this.value : this.viewDate;\n            const convertedHour = this.convertTo24Hour(hour, pm);\n\n            if (this.isRangeSelection()) {\n                value = this.value[1] || this.value[0];\n            }\n            if (this.isMultipleSelection()) {\n                value = this.value[this.value.length - 1];\n            }\n            const valueDateString = value ? value.toDateString() : null;\n            if (this.minDate && valueDateString && this.minDate.toDateString() === valueDateString) {\n                if (this.minDate.getHours() > convertedHour) {\n                    return false;\n                }\n                if (this.minDate.getHours() === convertedHour) {\n                    if (this.minDate.getMinutes() > minute) {\n                        return false;\n                    }\n                    if (this.minDate.getMinutes() === minute) {\n                        if (this.minDate.getSeconds() > second) {\n                            return false;\n                        }\n                    }\n                }\n            }\n\n            if (this.maxDate && valueDateString && this.maxDate.toDateString() === valueDateString) {\n                if (this.maxDate.getHours() < convertedHour) {\n                    return false;\n                }\n                if (this.maxDate.getHours() === convertedHour) {\n                    if (this.maxDate.getMinutes() < minute) {\n                        return false;\n                    }\n                    if (this.maxDate.getMinutes() === minute) {\n                        if (this.maxDate.getSeconds() < second) {\n                            return false;\n                        }\n                    }\n                }\n            }\n            return true;\n        },\n        incrementHour(event) {\n            let prevHour = this.currentHour;\n            let newHour = this.currentHour + this.stepHour;\n            let newPM = this.pm;\n\n            if (this.hourFormat == '24')\n                newHour = (newHour >= 24) ? (newHour - 24) : newHour;\n            else if (this.hourFormat == '12') {\n                // Before the AM/PM break, now after\n                if (prevHour < 12 && newHour > 11) {\n                    newPM= !this.pm;\n                }\n                newHour = (newHour >= 13) ? (newHour - 12) : newHour;\n            }\n\n            if (this.validateTime(newHour, this.currentMinute, this.currentSecond, newPM)) {\n                this.currentHour = newHour;\n                this.pm = newPM;\n            }\n\n            event.preventDefault();\n        },\n        decrementHour(event) {\n            let newHour = this.currentHour - this.stepHour;\n            let newPM = this.pm;\n\n            if (this.hourFormat == '24')\n                newHour = (newHour < 0) ? (24 + newHour) : newHour;\n            else if (this.hourFormat == '12') {\n                // If we were at noon/midnight, then switch\n                if (this.currentHour === 12) {\n                    newPM = !this.pm;\n                }\n                newHour = (newHour <= 0) ? (12 + newHour) : newHour;\n            }\n\n            if (this.validateTime(newHour, this.currentMinute, this.currentSecond, newPM)) {\n                this.currentHour = newHour;\n                this.pm = newPM;\n            }\n\n            event.preventDefault();\n        },\n        incrementMinute(event) {\n            let newMinute = this.currentMinute + this.stepMinute;\n            if (this.validateTime(this.currentHour, newMinute, this.currentSecond, true)) {\n                this.currentMinute = (newMinute > 59) ? newMinute - 60 : newMinute;\n            }\n\n            event.preventDefault();\n        },\n        decrementMinute(event) {\n            let newMinute = this.currentMinute - this.stepMinute;\n            newMinute = (newMinute < 0) ? 60 + newMinute : newMinute;\n            if (this.validateTime(this.currentHour, newMinute, this.currentSecond, true)) {\n                this.currentMinute = newMinute;\n            }\n\n            event.preventDefault();\n        },\n        incrementSecond(event) {\n            let newSecond = this.currentSecond + this.stepSecond;\n            if (this.validateTime(this.currentHour, this.currentMinute, newSecond, true)) {\n                this.currentSecond = (newSecond > 59) ? newSecond - 60 : newSecond;\n            }\n\n            event.preventDefault();\n        },\n        decrementSecond(event) {\n            let newSecond = this.currentSecond - this.stepSecond;\n            newSecond = (newSecond < 0) ? 60 + newSecond : newSecond;\n            if (this.validateTime(this.currentHour, this.currentMinute, newSecond, true)) {\n                this.currentSecond = newSecond;\n            }\n\n            event.preventDefault();\n        },\n        updateModelTime() {\n            this.timePickerChange = true;\n            let value = this.isComparable() ? this.value : new Date();\n\n            if (this.isRangeSelection()) {\n                value = this.value[1] || this.value[0];\n            }\n            if (this.isMultipleSelection()) {\n                value = this.value[this.value.length - 1];\n            }\n            value = value ? new Date(value.getTime()) : new Date();\n\n            if (this.hourFormat == '12') {\n                if (this.currentHour === 12)\n                    value.setHours(this.pm ? 12 : 0);\n                else\n                    value.setHours(this.pm ? this.currentHour + 12 : this.currentHour);\n            }\n            else {\n                value.setHours(this.currentHour);\n            }\n\n            value.setMinutes(this.currentMinute);\n            value.setSeconds(this.currentSecond);\n\n            if (this.isRangeSelection()) {\n                if (this.value[1])\n                    value = [this.value[0], value];\n                else\n                    value = [value, null];\n            }\n\n            if (this.isMultipleSelection()){\n                value = [...this.value.slice(0, -1), value];\n            }\n\n            this.updateModel(value);\n            this.$emit('date-select', value);\n            setTimeout(() => this.timePickerChange = false, 0);\n        },\n        toggleAMPM(event) {\n            this.pm = !this.pm;\n            this.updateModelTime();\n            event.preventDefault();\n        },\n        clearTimePickerTimer() {\n            if (this.timePickerTimer) {\n                clearInterval(this.timePickerTimer);\n            }\n        },\n        onMonthSelect(event, month) {\n            if (this.view === 'month') {\n                this.onDateSelect(event, {year: this.currentYear, month: month, day: 1, selectable: true});\n            }\n            else {\n                this.currentMonth = month;\n                this.currentView = 'date';\n                this.$emit('month-change', {month: this.currentMonth + 1, year: this.currentYear});\n            }\n\n            setTimeout(this.updateFocus, 0);\n        },\n        onYearSelect(event, year) {\n            if (this.view === 'year') {\n                this.onDateSelect(event, {year: year, month: 0, day: 1, selectable: true});\n            }\n            else {\n                this.currentYear = year;\n                this.currentView = 'month';\n                this.$emit('year-change', {month: this.currentMonth + 1, year: this.currentYear});\n            }\n\n            setTimeout(this.updateFocus, 0);\n        },\n        enableModality() {\n            if (!this.mask) {\n                this.mask = document.createElement('div');\n                this.mask.style.zIndex = String(parseInt(this.$refs.overlay.style.zIndex, 10) - 1);\n                DomHandler.addMultipleClasses(this.mask, 'p-datepicker-mask p-datepicker-mask-scrollblocker p-component-overlay p-component-overlay-enter');\n\n                this.maskClickListener = () => {\n                    this.overlayVisible = false;\n                };\n                this.mask.addEventListener('click', this.maskClickListener);\n\n                document.body.appendChild(this.mask);\n                DomHandler.addClass(document.body, 'p-overflow-hidden');\n            }\n        },\n        disableModality() {\n            if (this.mask) {\n                this.overlayVisible = false;\n\n                DomHandler.addClass(this.mask, 'p-component-overlay-leave');\n                this.mask.addEventListener('animationend', () => {\n                    this.destroyMask();\n                });\n            }\n        },\n        destroyMask() {\n            this.mask.removeEventListener('click', this.maskClickListener);\n            this.maskClickListener = null;\n            document.body.removeChild(this.mask);\n            this.mask = null;\n\n            let bodyChildren = document.body.children;\n            let hasBlockerMasks;\n            for (let i = 0; i < bodyChildren.length; i++) {\n                let bodyChild = bodyChildren[i];\n                if(DomHandler.hasClass(bodyChild, 'p-datepicker-mask-scrollblocker')) {\n                    hasBlockerMasks = true;\n                    break;\n                }\n            }\n\n            if (!hasBlockerMasks) {\n                DomHandler.removeClass(document.body, 'p-overflow-hidden');\n            }\n        },\n        updateCurrentMetaData() {\n            const viewDate = this.viewDate;\n            this.currentMonth = viewDate.getMonth();\n            this.currentYear = viewDate.getFullYear();\n\n            if (this.showTime || this.timeOnly) {\n                this.updateCurrentTimeMeta(viewDate);\n            }\n        },\n        isValidSelection(value) {\n            let isValid = true;\n            if (this.isSingleSelection()) {\n                if (!this.isSelectable(value.getDate(), value.getMonth(), value.getFullYear(), false)) {\n                    isValid = false;\n                }\n            } else if (value.every(v => this.isSelectable(v.getDate(), v.getMonth(), v.getFullYear(), false))) {\n                if (this.isRangeSelection()) {\n                    isValid = value.length > 1 && value[1] > value[0] ? true : false;\n                }\n            }\n            return isValid;\n        },\n        parseValue(text) {\n            if (!text || text.trim().length === 0) {\n                return null;\n            }\n\n            let value;\n\n            if (this.isSingleSelection()) {\n                value = this.parseDateTime(text);\n            }\n            else if (this.isMultipleSelection()) {\n                let tokens = text.split(',');\n                value = [];\n                for (let token of tokens) {\n                    value.push(this.parseDateTime(token.trim()));\n                }\n            }\n            else if (this.isRangeSelection()) {\n                let tokens = text.split(' - ');\n                value = [];\n                for (let i = 0; i < tokens.length; i++) {\n                    value[i] = this.parseDateTime(tokens[i].trim());\n                }\n            }\n\n            return value;\n        },\n        parseDateTime(text) {\n            let date;\n            let parts = text.split(' ');\n\n            if (this.timeOnly) {\n                date = new Date();\n                this.populateTime(date, parts[0], parts[1]);\n            }\n            else {\n                const dateFormat = this.datePattern;\n                if (this.showTime) {\n                    date = this.parseDate(parts[0], dateFormat);\n                    this.populateTime(date, parts[1], parts[2]);\n                }\n                else {\n                    date = this.parseDate(text, dateFormat);\n                }\n            }\n\n            return date;\n        },\n        populateTime(value, timeString, ampm) {\n            if (this.hourFormat == '12' && !ampm) {\n                throw 'Invalid Time';\n            }\n\n            this.pm = (ampm === 'PM' || ampm === 'pm');\n            let time = this.parseTime(timeString);\n            value.setHours(time.hour);\n            value.setMinutes(time.minute);\n            value.setSeconds(time.second);\n        },\n        parseTime(value) {\n            let tokens = value.split(':');\n            let validTokenLength = this.showSeconds ? 3 : 2;\n            let regex = (/^[0-9][0-9]$/);\n\n            if (tokens.length !== validTokenLength || !tokens[0].match(regex) || !tokens[1].match(regex) || (this.showSeconds && !tokens[2].match(regex))) {\n                throw \"Invalid time\";\n            }\n\n            let h = parseInt(tokens[0]);\n            let m = parseInt(tokens[1]);\n            let s = this.showSeconds ? parseInt(tokens[2]) : null;\n\n            if (isNaN(h) || isNaN(m) || h > 23 || m > 59 || (this.hourFormat == '12' && h > 12) || (this.showSeconds && (isNaN(s) || s > 59))) {\n                throw \"Invalid time\";\n            }\n            else {\n                if (this.hourFormat == '12' && h !== 12 && this.pm) {\n                    h+= 12;\n                }\n\n                return {hour: h, minute: m, second: s};\n            }\n        },\n        parseDate(value, format) {\n            if (format == null || value == null) {\n                throw \"Invalid arguments\";\n            }\n\n            value = (typeof value === \"object\" ? value.toString() : value + \"\");\n            if (value === \"\") {\n                return null;\n            }\n\n            let iFormat, dim, extra,\n            iValue = 0,\n            shortYearCutoff = (typeof this.shortYearCutoff !== \"string\" ? this.shortYearCutoff : new Date().getFullYear() % 100 + parseInt(this.shortYearCutoff, 10)),\n            year = -1,\n            month = -1,\n            day = -1,\n            doy = -1,\n            literal = false,\n            date,\n            lookAhead = (match) => {\n                let matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) === match);\n                if (matches) {\n                    iFormat++;\n                }\n                return matches;\n            },\n            getNumber = (match) => {\n                let isDoubled = lookAhead(match),\n                    size = (match === \"@\" ? 14 : (match === \"!\" ? 20 :\n                    (match === \"y\" && isDoubled ? 4 : (match === \"o\" ? 3 : 2)))),\n                    minSize = (match === \"y\" ? size : 1),\n                    digits = new RegExp(\"^\\\\d{\" + minSize + \",\" + size + \"}\"),\n                    num = value.substring(iValue).match(digits);\n                if (!num) {\n                    throw \"Missing number at position \" + iValue;\n                }\n                iValue += num[ 0 ].length;\n                return parseInt(num[ 0 ], 10);\n            },\n            getName = (match, shortNames, longNames) => {\n                let index = -1;\n                let arr = lookAhead(match) ? longNames : shortNames;\n                let names = [];\n\n                for (let i = 0; i < arr.length; i++) {\n                    names.push([i,arr[i]]);\n                }\n                names.sort((a,b) => {\n                    return -(a[ 1 ].length - b[ 1 ].length);\n                });\n\n                for (let i = 0; i < names.length; i++) {\n                    let name = names[i][1];\n                    if (value.substr(iValue, name.length).toLowerCase() === name.toLowerCase()) {\n                        index = names[i][0];\n                        iValue += name.length;\n                        break;\n                    }\n                }\n\n                if (index !== -1) {\n                    return index + 1;\n                } else {\n                    throw \"Unknown name at position \" + iValue;\n                }\n            },\n            checkLiteral = () => {\n                if (value.charAt(iValue) !== format.charAt(iFormat)) {\n                    throw \"Unexpected literal at position \" + iValue;\n                }\n                iValue++;\n            };\n\n            if (this.currentView === 'month') {\n                day = 1;\n            }\n\n            for (iFormat = 0; iFormat < format.length; iFormat++) {\n                if (literal) {\n                    if (format.charAt(iFormat) === \"'\" && !lookAhead(\"'\")) {\n                        literal = false;\n                    } else {\n                        checkLiteral();\n                    }\n                } else {\n                    switch (format.charAt(iFormat)) {\n                        case \"d\":\n                            day = getNumber(\"d\");\n                            break;\n                        case \"D\":\n                            getName(\"D\", this.$primevue.config.locale.dayNamesShort, this.$primevue.config.locale.dayNames);\n                            break;\n                        case \"o\":\n                            doy = getNumber(\"o\");\n                            break;\n                        case \"m\":\n                            month = getNumber(\"m\");\n                            break;\n                        case \"M\":\n                            month = getName(\"M\", this.$primevue.config.locale.monthNamesShort, this.$primevue.config.locale.monthNames);\n                            break;\n                        case \"y\":\n                            year = getNumber(\"y\");\n                            break;\n                        case \"@\":\n                            date = new Date(getNumber(\"@\"));\n                            year = date.getFullYear();\n                            month = date.getMonth() + 1;\n                            day = date.getDate();\n                            break;\n                        case \"!\":\n                            date = new Date((getNumber(\"!\") - this.ticksTo1970) / 10000);\n                            year = date.getFullYear();\n                            month = date.getMonth() + 1;\n                            day = date.getDate();\n                            break;\n                        case \"'\":\n                            if (lookAhead(\"'\")) {\n                                checkLiteral();\n                            } else {\n                                literal = true;\n                            }\n                            break;\n                        default:\n                            checkLiteral();\n                    }\n                }\n            }\n\n            if (iValue < value.length) {\n                extra = value.substr(iValue);\n                if (!/^\\s+/.test(extra)) {\n                    throw \"Extra/unparsed characters found in date: \" + extra;\n                }\n            }\n\n            if (year === -1) {\n                year = new Date().getFullYear();\n            } else if (year < 100) {\n                year += new Date().getFullYear() - new Date().getFullYear() % 100 +\n                    (year <= shortYearCutoff ? 0 : -100);\n            }\n\n            if (doy > -1) {\n                month = 1;\n                day = doy;\n                do {\n                    dim = this.getDaysCountInMonth(year, month - 1);\n                    if (day <= dim) {\n                        break;\n                    }\n                    month++;\n                    day -= dim;\n                // eslint-disable-next-line\n                } while (true);\n            }\n\n            date = this.daylightSavingAdjust(new Date(year, month - 1, day));\n                    if (date.getFullYear() !== year || date.getMonth() + 1 !== month || date.getDate() !== day) {\n                        throw \"Invalid date\"; // E.g. 31/02/00\n                    }\n\n            return date;\n        },\n        getWeekNumber(date) {\n            let checkDate = new Date(date.getTime());\n            checkDate.setDate(checkDate.getDate() + 4 - ( checkDate.getDay() || 7 ));\n            let time = checkDate.getTime();\n            checkDate.setMonth( 0 );\n            checkDate.setDate( 1 );\n            return Math.floor( Math.round((time - checkDate.getTime()) / 86400000 ) / 7 ) + 1;\n        },\n        onDateCellKeydown(event, date, groupIndex) {\n            const cellContent = event.currentTarget;\n            const cell = cellContent.parentElement;\n\n            switch (event.which) {\n                //down arrow\n                case 40: {\n                    cellContent.tabIndex = '-1';\n                    let cellIndex = DomHandler.index(cell);\n                    let nextRow = cell.parentElement.nextElementSibling;\n                    if (nextRow) {\n                        let focusCell = nextRow.children[cellIndex].children[0];\n                        if (DomHandler.hasClass(focusCell, 'p-disabled')) {\n                            this.navigationState = {backward: false};\n                            this.navForward(event);\n                        }\n                        else {\n                            nextRow.children[cellIndex].children[0].tabIndex = '0';\n                            nextRow.children[cellIndex].children[0].focus();\n                        }\n                    }\n                    else {\n                        this.navigationState = {backward: false};\n                        this.navForward(event);\n                    }\n                    event.preventDefault();\n                    break;\n                }\n\n                //up arrow\n                case 38: {\n                    cellContent.tabIndex = '-1';\n                    let cellIndex = DomHandler.index(cell);\n                    let prevRow = cell.parentElement.previousElementSibling;\n                    if (prevRow) {\n                        let focusCell = prevRow.children[cellIndex].children[0];\n                        if (DomHandler.hasClass(focusCell, 'p-disabled')) {\n                            this.navigationState = {backward: true};\n                            this.navBackward(event);\n                        }\n                        else {\n                            focusCell.tabIndex = '0';\n                            focusCell.focus();\n                        }\n                    }\n                    else {\n                        this.navigationState = {backward: true};\n                        this.navBackward(event);\n                    }\n                    event.preventDefault();\n                    break;\n                }\n\n                //left arrow\n                case 37: {\n                    cellContent.tabIndex = '-1';\n                    let prevCell = cell.previousElementSibling;\n                    if (prevCell) {\n                        let focusCell = prevCell.children[0];\n                        if (DomHandler.hasClass(focusCell, 'p-disabled')) {\n                            this.navigateToMonth(true, groupIndex);\n                        }\n                        else {\n                            focusCell.tabIndex = '0';\n                            focusCell.focus();\n                        }\n                    }\n                    else {\n                        this.navigateToMonth(true, groupIndex);\n                    }\n                    event.preventDefault();\n                    break;\n                }\n\n                //right arrow\n                case 39: {\n                    cellContent.tabIndex = '-1';\n                    let nextCell = cell.nextElementSibling;\n                    if (nextCell) {\n                        let focusCell = nextCell.children[0];\n                        if (DomHandler.hasClass(focusCell, 'p-disabled')) {\n                            this.navigateToMonth(false, groupIndex);\n                        }\n                        else {\n                            focusCell.tabIndex = '0';\n                            focusCell.focus();\n                        }\n                    }\n                    else {\n                        this.navigateToMonth(false, groupIndex);\n                    }\n                    event.preventDefault();\n                    break;\n                }\n\n                //enter\n                case 13:\n                case 32: {\n                    this.onDateSelect(event, date);\n                    event.preventDefault();\n                    break;\n                }\n\n                //escape\n                case 27: {\n                    this.overlayVisible = false;\n                    event.preventDefault();\n                    break;\n                }\n\n                //tab\n                case 9: {\n                    if (!this.inline) {\n                        this.trapFocus(event);\n                    }\n                    break;\n                }\n\n                default:\n                    //no op\n                break;\n            }\n        },\n        navigateToMonth(prev, groupIndex) {\n            if (prev) {\n                if (this.numberOfMonths === 1 || (groupIndex === 0)) {\n                    this.navigationState = {backward: true};\n                    this.navBackward(event);\n                }\n                else {\n                    let prevMonthContainer = this.$refs.overlay.children[groupIndex - 1];\n                    let cells = DomHandler.find(prevMonthContainer, '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)');\n                    let focusCell = cells[cells.length - 1];\n                    focusCell.tabIndex = '0';\n                    focusCell.focus();\n                }\n            }\n            else {\n                if (this.numberOfMonths === 1 || (groupIndex === this.numberOfMonths - 1)) {\n                    this.navigationState = {backward: false};\n                    this.navForward(event);\n                }\n                else {\n                    let nextMonthContainer = this.$refs.overlay.children[groupIndex + 1];\n                    let focusCell = DomHandler.findSingle(nextMonthContainer, '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)');\n                    focusCell.tabIndex = '0';\n                    focusCell.focus();\n                }\n            }\n        },\n        onMonthCellKeydown(event, index) {\n            const cell = event.currentTarget;\n\n            switch (event.which) {\n                //arrows\n                case 38:\n                case 40: {\n                    cell.tabIndex = '-1';\n                    var cells = cell.parentElement.children;\n                    var cellIndex = DomHandler.index(cell);\n                    let nextCell = cells[event.which === 40 ? cellIndex + 3 : cellIndex -3];\n                    if (nextCell) {\n                        nextCell.tabIndex = '0';\n                        nextCell.focus();\n                    }\n                    event.preventDefault();\n                    break;\n                }\n\n                //left arrow\n                case 37: {\n                    cell.tabIndex = '-1';\n                    let prevCell = cell.previousElementSibling;\n                    if (prevCell) {\n                        prevCell.tabIndex = '0';\n                        prevCell.focus();\n                    }\n                    else {\n                        this.navigationState = {backward: true};\n                        this.navBackward(event);\n                    }\n                    event.preventDefault();\n                    break;\n                }\n\n                //right arrow\n                case 39: {\n                    cell.tabIndex = '-1';\n                    let nextCell = cell.nextElementSibling;\n                    if (nextCell) {\n                        nextCell.tabIndex = '0';\n                        nextCell.focus();\n                    }\n                    else {\n                        this.navigationState = {backward: false};\n                        this.navForward(event);\n                    }\n                    event.preventDefault();\n                    break;\n                }\n\n                //enter\n                case 13:\n                case 32: {\n                    this.onMonthSelect(event, index);\n                    event.preventDefault();\n                    break;\n                }\n\n                //escape\n                case 27: {\n                    this.overlayVisible = false;\n                    event.preventDefault();\n                    break;\n                }\n\n                //tab\n                case 9: {\n                    if (!this.inline) {\n                        this.trapFocus(event);\n                    }\n                    break;\n                }\n\n                default:\n                    //no op\n                break;\n            }\n        },\n        onYearCellKeydown(event, index) {\n            const cell = event.currentTarget;\n            switch (event.which) {\n                //arrows\n                case 38:\n                case 40: {\n                    cell.tabIndex = '-1';\n                    var cells = cell.parentElement.children;\n                    var cellIndex = DomHandler.index(cell);\n                    let nextCell = cells[event.which === 40 ? cellIndex + 2 : cellIndex - 2];\n                    if (nextCell) {\n                        nextCell.tabIndex = '0';\n                        nextCell.focus();\n                    }\n                    event.preventDefault();\n                    break;\n                }\n                //left arrow\n                case 37: {\n                    cell.tabIndex = '-1';\n                    let prevCell = cell.previousElementSibling;\n                    if (prevCell) {\n                        prevCell.tabIndex = '0';\n                        prevCell.focus();\n                    }\n                    else {\n                        this.navigationState = {backward: true};\n                        this.navBackward(event);\n                    }\n                    event.preventDefault();\n                    break;\n                }\n                //right arrow\n                case 39: {\n                    cell.tabIndex = '-1';\n                    let nextCell = cell.nextElementSibling;\n                    if (nextCell) {\n                        nextCell.tabIndex = '0';\n                        nextCell.focus();\n                    }\n                    else {\n                        this.navigationState = {backward: false};\n                        this.navForward(event);\n                    }\n                    event.preventDefault();\n                    break;\n                }\n                //enter\n                case 13:\n                case 32: {\n                    this.onMonthSelect(event, index);\n                    event.preventDefault();\n                    break;\n                }\n                //escape\n                case 27: {\n                    this.overlayVisible = false;\n                    event.preventDefault();\n                    break;\n                }\n                //tab\n                case 9: {\n                    this.trapFocus(event);\n                    break;\n                }\n                default:\n                    //no op\n                break;\n            }\n        },\n        updateFocus() {\n            let cell;\n            if (this.navigationState) {\n                if (this.navigationState.button) {\n                    this.initFocusableCell();\n                    if (this.navigationState.backward)\n                        DomHandler.findSingle(this.$refs.overlay, '.p-datepicker-prev').focus();\n                    else\n                        DomHandler.findSingle(this.$refs.overlay, '.p-datepicker-next').focus();\n                }\n                else {\n                    if (this.navigationState.backward) {\n                        let cells;\n                        if (this.currentView === 'month') {\n                            cells = DomHandler.find(this.$refs.overlay, '.p-monthpicker .p-monthpicker-month:not(.p-disabled)');\n                        }\n                        else if (this.currentView === 'year') {\n                            cells = DomHandler.find(this.$refs.overlay, '.p-yearpicker .p-yearpicker-year:not(.p-disabled)');\n                        }\n                        else {\n                            cells = DomHandler.find(this.$refs.overlay, '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)');\n                        }\n                        if (cells && cells.length > 0) {\n                            cell = cells[cells.length - 1];\n                        }\n                    }\n                    else {\n                        if (this.currentView === 'month') {\n                            cell = DomHandler.findSingle(this.$refs.overlay, '.p-monthpicker .p-monthpicker-month:not(.p-disabled)');\n                        }\n                        else if (this.currentView === 'year') {\n                            cell = DomHandler.findSingle(this.$refs.overlay, '.p-yearpicker .p-yearpicker-year:not(.p-disabled)');\n                        }\n                        else {\n                            cell = DomHandler.findSingle(this.$refs.overlay, '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)');\n                        }\n                    }\n                    if (cell) {\n                        cell.tabIndex = '0';\n                        cell.focus();\n                    }\n                }\n\n                this.navigationState = null;\n            }\n            else {\n                this.initFocusableCell();\n            }\n        },\n        initFocusableCell() {\n            let cell;\n            if (this.currentView === 'month') {\n                let cells = DomHandler.find(this.$refs.overlay, '.p-monthpicker .p-monthpicker-month');\n                let selectedCell= DomHandler.findSingle(this.$refs.overlay, '.p-monthpicker .p-monthpicker-month.p-highlight');\n                cells.forEach(cell => cell.tabIndex = -1);\n                cell = selectedCell || cells[0];\n            }\n            else if (this.currentView === 'year') {\n                let cells = DomHandler.find(this.$refs.overlay, '.p-yearpicker .p-yearpicker-year');\n                let selectedCell= DomHandler.findSingle(this.$refs.overlay, '.p-yearpicker .p-yearpicker-year.p-highlight');\n                cells.forEach(cell => cell.tabIndex = -1);\n                cell = selectedCell || cells[0];\n            }\n            else {\n                cell = DomHandler.findSingle(this.$refs.overlay, 'span.p-highlight');\n                if (!cell) {\n                    let todayCell = DomHandler.findSingle(this.$refs.overlay, 'td.p-datepicker-today span:not(.p-disabled):not(.p-ink)');\n                    if (todayCell)\n                        cell = todayCell;\n                    else\n                        cell = DomHandler.findSingle(this.$refs.overlay, '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink');\n                }\n            }\n\n            if (cell) {\n                cell.tabIndex = '0';\n\n                if (!this.preventFocus && (!this.navigationState || !this.navigationState.button) && !this.timePickerChange) {\n                    cell.focus();\n                }\n\n                this.preventFocus = false;\n            }\n        },\n        trapFocus(event) {\n            event.preventDefault();\n            let focusableElements = DomHandler.getFocusableElements(this.$refs.overlay);\n\n            if (focusableElements && focusableElements.length > 0) {\n                if (!document.activeElement) {\n                    focusableElements[0].focus();\n                }\n                else {\n                    let focusedIndex = focusableElements.indexOf(document.activeElement);\n\n                    if (event.shiftKey) {\n                        if (focusedIndex == -1 || focusedIndex === 0)\n                            focusableElements[focusableElements.length - 1].focus();\n                        else\n                            focusableElements[focusedIndex - 1].focus();\n                    }\n                    else {\n                        if (focusedIndex == -1 || focusedIndex === (focusableElements.length - 1))\n                            focusableElements[0].focus();\n                        else\n                            focusableElements[focusedIndex + 1].focus();\n                    }\n                }\n            }\n        },\n        onContainerButtonKeydown(event) {\n            switch (event.which) {\n                //tab\n                case 9:\n                    if (!this.inline) {\n                        this.trapFocus(event);\n                    }\n                break;\n\n                //escape\n                case 27:\n                    this.overlayVisible = false;\n                    event.preventDefault();\n                break;\n\n                default:\n                    //Noop\n                break;\n            }\n        },\n        onInput(val) {\n            // IE 11 Workaround for input placeholder : https://github.com/primefaces/primeng/issues/2026\n            if (!this.isKeydown) {\n                return;\n            }\n            this.isKeydown = false;\n\n            try {\n                this.selectionStart = this.$refs.input.$el.selectionStart;\n                this.selectionEnd = this.$refs.input.$el.selectionEnd;\n\n                let value = this.parseValue(val);\n                if (this.isValidSelection(value)) {\n                    this.updateModel(value);\n                }\n            }\n            catch(err) {\n                this.updateModel(val);\n            }\n        },\n        appendContainer() {\n            if (this.appendTo) {\n                if (this.appendTo === 'body')\n                    document.body.appendChild(this.$refs.overlay);\n                else\n                    document.getElementById(this.appendTo).appendChild(this.$refs.overlay);\n            }\n        },\n        restoreAppend() {\n            if (this.$refs.overlay && this.appendTo) {\n                if (this.appendTo === 'body')\n                    document.body.removeChild(this.$refs.overlay);\n                else\n                    document.getElementById(this.appendTo).removeChild(this.$refs.overlay);\n            }\n        },\n        getMonthName(index) {\n            return this.$primevue.config.locale.monthNames[index];\n        },\n        getYear(month) {\n            return this.currentView === 'month' ? this.currentYear : month.year;\n        },\n        createResponsiveStyle() {\n            if (this.numberOfMonths > 1 && this.responsiveOptions) {\n                if (!this.responsiveStyleElement) {\n                    this.responsiveStyleElement = document.createElement('style');\n                    this.responsiveStyleElement.type = 'text/css';\n                    document.body.appendChild(this.responsiveStyleElement);\n                }\n                let innerHTML = '';\n                if (this.responsiveOptions) {\n                    let responsiveOptions = [...this.responsiveOptions]\n                        .filter(o => !!(o.breakpoint && o.numMonths))\n                        .sort((o1, o2) => -1 * o1.breakpoint.localeCompare(o2.breakpoint, undefined, { numeric: true }));\n                    for (let i = 0; i < responsiveOptions.length; i++) {\n                        let { breakpoint, numMonths } = responsiveOptions[i];\n                        let styles = `\n                            .p-datepicker[${this.attributeSelector}] .p-datepicker-group:nth-child(${numMonths}) .p-datepicker-next {\n                                display: inline-flex !important;\n                            }\n                        `;\n                        for (let j = numMonths; j < this.numberOfMonths; j++) {\n                            styles += `\n                                .p-datepicker[${this.attributeSelector}] .p-datepicker-group:nth-child(${j + 1}) {\n                                    display: none !important;\n                                }\n                            `\n                        }\n                        innerHTML += `\n                            @media screen and (max-width: ${breakpoint}) {\n                                ${styles}\n                            }\n                        `\n                    }\n                }\n                this.responsiveStyleElement.innerHTML = innerHTML;\n            }\n\t\t},\n        destroyResponsiveStyleElement() {\n            if (this.responsiveStyleElement) {\n                this.responsiveStyleElement.remove();\n                this.responsiveStyleElement = null;\n            }\n        }\n    },\n    computed: {\n        listeners() {\n            let $vm = this;\n\n            return {\n                ...$vm.$listeners,\n                input: val => {\n                    this.onInput(val);\n                },\n                focus: event => {\n                    $vm.focus = true;\n                    if ($vm.showOnFocus && $vm.isEnabled()) {\n                        $vm.overlayVisible = true;\n                    }\n                    $vm.focused = true;\n                    $vm.$emit('focus', event)\n                },\n                blur: event => {\n                    $vm.focused = false;\n                    $vm.$emit('blur', event);\n                },\n                keydown: event => {\n                    $vm.isKeydown = true;\n\n                    if (event.keyCode === 40 && $vm.$refs.overlay) {\n                        $vm.trapFocus(event);\n                    }\n                    else if (event.keyCode === 27) {\n                        if ($vm.overlayVisible) {\n                            $vm.overlayVisible = false;\n                            event.preventDefault();\n                        }\n                    }\n                    else if (event.keyCode === 9) {\n                        DomHandler.getFocusableElements($vm.$refs.overlay).forEach(el => el.tabIndex = '-1');\n                        if ($vm.overlayVisible) {\n                            $vm.overlayVisible = false;\n                        }\n                    }\n\n                    $vm.$emit('keydown', event);\n                }\n            };\n        },\n        viewDate() {\n            let propValue = this.value;\n            if (typeof propValue === 'string') {\n                return new Date();\n            }\n\n            if (propValue && Array.isArray(propValue)) {\n                if (this.isRangeSelection()) {\n                    propValue = propValue[1] || propValue[0];\n                } else if (this.isMultipleSelection()) {\n                    propValue = propValue[propValue.length - 1];\n                }\n            }\n\n            return propValue || new Date();\n        },\n        inputFieldValue() {\n            return this.formatValue(this.value);\n        },\n        containerClass() {\n            return [\n                'p-calendar p-component p-inputwrapper', this.className,\n                {\n                    'p-calendar-w-btn': this.showIcon,\n                    'p-calendar-timeonly': this.timeOnly,\n                    'p-inputwrapper-filled': this.value,\n                    'p-inputwrapper-focus': this.focused\n                }\n            ];\n        },\n        panelStyleClass() {\n            return [\n                'p-datepicker p-component', this.panelClass,\n                {\n                    'p-datepicker-inline': this.inline,\n                    'p-disabled': this.$attrs.disabled,\n                    'p-datepicker-timeonly': this.timeOnly,\n                    'p-datepicker-multiple-month': this.numberOfMonths > 1,\n                    'p-datepicker-monthpicker': (this.currentView === 'month'),\n                    'p-datepicker-yearpicker': (this.currentView === 'year'),\n                    'p-datepicker-touch-ui': this.touchUI\n                }\n            ];\n        },\n        months() {\n            let months = [];\n            for (let i = 0 ; i < this.numberOfMonths; i++) {\n                let month = this.currentMonth + i;\n                let year = this.currentYear;\n                if (month > 11) {\n                    month = month % 11 - 1;\n                    year = year + 1;\n                }\n\n                let dates = [];\n                let firstDay = this.getFirstDayOfMonthIndex(month, year);\n                let daysLength = this.getDaysCountInMonth(month, year);\n                let prevMonthDaysLength = this.getDaysCountInPrevMonth(month, year);\n                let dayNo = 1;\n                let today = new Date();\n                let weekNumbers = [];\n                let monthRows = Math.ceil((daysLength + firstDay) / 7);\n\n                for (let i = 0; i < monthRows; i++) {\n                    let week = [];\n\n                    if (i == 0) {\n                        for (let j = (prevMonthDaysLength - firstDay + 1); j <= prevMonthDaysLength; j++) {\n                            let prev = this.getPreviousMonthAndYear(month, year);\n                            week.push({day: j, month: prev.month, year: prev.year, otherMonth: true,\n                                    today: this.isToday(today, j, prev.month, prev.year), selectable: this.isSelectable(j, prev.month, prev.year, true)});\n                        }\n\n                        let remainingDaysLength = 7 - week.length;\n                        for (let j = 0; j < remainingDaysLength; j++) {\n                            week.push({day: dayNo, month: month, year: year, today: this.isToday(today, dayNo, month, year),\n                                    selectable: this.isSelectable(dayNo, month, year, false)});\n                            dayNo++;\n                        }\n                    }\n                    else {\n                        for (let j = 0; j < 7; j++) {\n                            if (dayNo > daysLength) {\n                                let next = this.getNextMonthAndYear(month, year);\n                                week.push({day: dayNo - daysLength, month: next.month, year: next.year, otherMonth: true,\n                                            today: this.isToday(today, dayNo - daysLength, next.month, next.year),\n                                            selectable: this.isSelectable((dayNo - daysLength), next.month, next.year, true)});\n                            }\n                            else {\n                                week.push({day: dayNo, month: month, year: year, today: this.isToday(today, dayNo, month, year),\n                                    selectable: this.isSelectable(dayNo, month, year, false)});\n                            }\n\n                            dayNo++;\n                        }\n                    }\n\n                    if (this.showWeek) {\n                        weekNumbers.push(this.getWeekNumber(new Date(week[0].year, week[0].month, week[0].day)));\n                    }\n\n                    dates.push(week);\n                }\n\n                months.push({\n                    month: month,\n                    year: year,\n                    dates: dates,\n                    weekNumbers: weekNumbers\n                });\n            }\n\n            return months;\n        },\n        weekDays() {\n            let weekDays = [];\n            let dayIndex = this.$primevue.config.locale.firstDayOfWeek;\n            for (let i = 0; i < 7; i++) {\n                weekDays.push(this.$primevue.config.locale.dayNamesMin[dayIndex]);\n                dayIndex = (dayIndex == 6) ? 0 : ++dayIndex;\n            }\n\n            return weekDays;\n        },\n        ticksTo1970() {\n            return (((1970 - 1) * 365 + Math.floor(1970 / 4) - Math.floor(1970 / 100) + Math.floor(1970 / 400)) * 24 * 60 * 60 * 10000000);\n        },\n        sundayIndex() {\n            return this.$primevue.config.locale.firstDayOfWeek > 0 ? 7 - this.$primevue.config.locale.firstDayOfWeek : 0;\n        },\n        datePattern() {\n            return this.dateFormat || this.$primevue.config.locale.dateFormat;\n        },\n        yearOptions() {\n            if (this.yearRange) {\n                let $vm = this;\n                const years = this.yearRange.split(':');\n                let yearStart = parseInt(years[0]);\n                let yearEnd = parseInt(years[1]);\n                let yearOptions = [];\n\n                if (this.currentYear < yearStart) {\n                    $vm.currentYear = yearEnd;\n                }\n                else if (this.currentYear > yearEnd) {\n                    $vm.currentYear = yearStart;\n                }\n\n                for (let i = yearStart; i <= yearEnd; i++) {\n                    yearOptions.push(i);\n                }\n\n                return yearOptions;\n            }\n            else {\n                return null;\n            }\n        },\n        monthPickerValues() {\n            let monthPickerValues = [];\n            for (let i = 0; i <= 11; i++) {\n                monthPickerValues.push(this.$primevue.config.locale.monthNamesShort[i]);\n            }\n\n            return monthPickerValues;\n        },\n        yearPickerValues() {\n            let yearPickerValues = [];\n            let base = this.currentYear -  (this.currentYear % 10);\n            for (let i = 0; i < 10; i++) {\n                yearPickerValues.push(base + i);\n            }\n            return yearPickerValues;\n        },\n        formattedCurrentHour() {\n            return this.currentHour < 10 ? '0' + this.currentHour : this.currentHour;\n        },\n        formattedCurrentMinute() {\n            return this.currentMinute < 10 ? '0' + this.currentMinute : this.currentMinute;\n        },\n        formattedCurrentSecond() {\n            return this.currentSecond < 10 ? '0' + this.currentSecond : this.currentSecond;\n        },\n        todayLabel() {\n            return this.$primevue.config.locale.today;\n        },\n        clearLabel() {\n            return this.$primevue.config.locale.clear;\n        },\n        weekHeaderLabel() {\n            return this.$primevue.config.locale.weekHeader;\n        },\n        monthNames() {\n            return this.$primevue.config.locale.monthNames;\n        },\n        attributeSelector() {\n            return UniqueComponentId();\n        },\n        switchViewButtonDisabled() {\n            return this.numberOfMonths > 1 || this.$attrs.disabled;\n        }\n    },\n    components: {\n        'CalendarInputText': InputText,\n        'CalendarButton': Button\n    },\n    directives: {\n        'ripple': Ripple\n    }\n}\n</script>\n\n<style>\n.p-calendar {\n    position: relative;\n    display: inline-flex;\n    max-width: 100%;\n}\n\n.p-calendar .p-inputtext {\n    flex: 1 1 auto;\n    width: 1%;\n}\n\n.p-calendar-w-btn .p-inputtext {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n}\n\n.p-calendar-w-btn .p-datepicker-trigger {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n}\n\n/* Fluid */\n.p-fluid .p-calendar {\n    display: flex;\n}\n\n.p-fluid .p-calendar .p-inputtext {\n    width: 1%;\n}\n\n/* Datepicker */\n.p-calendar .p-datepicker {\n    min-width: 100%;\n}\n\n.p-datepicker {\n\twidth: auto;\n    position: absolute;\n}\n\n.p-datepicker-inline {\n    display: inline-block;\n    position: static;\n    overflow-x: auto;\n}\n\n/* Header */\n.p-datepicker-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\n.p-datepicker-header .p-datepicker-title {\n    margin: 0 auto;\n}\n\n.p-datepicker-prev,\n.p-datepicker-next {\n    cursor: pointer;\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    position: relative;\n}\n\n/* Multiple Month DatePicker */\n.p-datepicker-multiple-month .p-datepicker-group-container {\n    display: flex;\n}\n\n.p-datepicker-multiple-month .p-datepicker-group-container .p-datepicker-group {\n    flex: 1 1 auto;\n}\n\n/* DatePicker Table */\n.p-datepicker table {\n\twidth: 100%;\n\tborder-collapse: collapse;\n}\n\n.p-datepicker td > span {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    margin: 0 auto;\n    overflow: hidden;\n    position: relative;\n}\n\n/* Month Picker */\n.p-monthpicker-month {\n    width: 33.3%;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    overflow: hidden;\n    position: relative;\n}\n\n/* Year Picker */\n.p-yearpicker-year {\n    width: 50%;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    overflow: hidden;\n    position: relative;\n}\n\n/*  Button Bar */\n.p-datepicker-buttonbar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n/* Time Picker */\n.p-timepicker {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.p-timepicker button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    overflow: hidden;\n    position: relative;\n}\n\n.p-timepicker > div {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n}\n\n/* Touch UI */\n.p-datepicker-touch-ui,\n.p-calendar .p-datepicker-touch-ui {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    min-width: 80vw;\n    transform: translate(-50%, -50%);\n}\n\n</style>"]}]}