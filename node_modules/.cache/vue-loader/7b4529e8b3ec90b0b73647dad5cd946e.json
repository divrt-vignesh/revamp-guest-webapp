{"remainingRequest":"/home/vignesh/DIVRT/guest-webapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vignesh/DIVRT/guest-webapp/src/views/CheckedIn.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/home/vignesh/DIVRT/guest-webapp/src/views/CheckedIn.vue","mtime":1687332364199},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["CheckedIn.vue"],"names":[],"mappingsusfile":"CheckedIn.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <v-container class=\"pa-4\" fluid>\n        <v-row class=\"text-center\" no-gutters>\n            <v-col cols=\"12\">\n                <v-img alt=\"PARKING.COM\" class=\"my-3\" height=\"42\" contain src=\"../assets/logo_huge_drk.png\" />\n            </v-col>\n        </v-row>\n        <v-row no-gutters>\n            <v-col>\n                <v-card class=\"mx-auto rounded-lg\" max-width=\"374\">\n                    <v-dialog v-model=\"loading\" persistent>\n                        <v-card class=\"pa-4\">\n                            <v-progress-circular indeterminate color=\"red\"></v-progress-circular>\n                            <span class=\"ml-4\" style=\"font-size: 14px\">Please wait...</span>\n                        </v-card>\n                    </v-dialog>\n                    <!-- <v-responsive :aspect-ratio=\"16/9\"> -->\n\n                    <template slot=\"progress\">\n                        <v-progress-linear color=\"red\" height=\"10\" indeterminate></v-progress-linear>\n                    </template>\n                    <div style=\"position: relative\">\n                        <!-- <v-skeleton-loader\n                  v-show=\"!bookingDetails.hasOwnProperty('zone')\"\n                  height=\"260px\"\n                  class=\"rounded-t-lg\"\n                  type=\"image\"\n                ></v-skeleton-loader>-->\n                        <v-img class=\"rounded-t-lg\" :max-height=\"logoHeight\" style=\"filter: brightness(50%)\" :src=\"bookingDetails.hasOwnProperty('zone') &&\n                            bookingDetails.zone.image != '' &&\n                            bookingDetails.zone.image != null\n                            ? bookingDetails.zone.image\n                            : zoneImgURL\n                            \" :lazy-src=\"bookingDetails.hasOwnProperty('zone') &&\n        bookingDetails.zone.image != '' &&\n        bookingDetails.zone.image != null\n        ? bookingDetails.zone.image\n        : zoneImgURL\n        \" alt=\"Parking.com garage\">\n                            <template v-slot:placeholder>\n                                <v-row class=\"fill-height ma-0\" align=\"center\" justify=\"center\" no-gutters>\n                                    <v-progress-circular indeterminate color=\"grey lighten-5\"></v-progress-circular>\n                                </v-row>\n                            </template>\n                        </v-img>\n                        <div class=\"booking_header white--text text-left mr-4\">\n                            <span>\n                                {{\n                                    bookingDetails.hasOwnProperty(\"booking\")\n                                    ? bookingDetails.booking.header\n                                    : \"\"\n                                }}\n                            </span>\n                        </div>\n                        <div class=\"booking_divider_div\"\n                            v-if=\"Object.hasOwnProperty.call(bookingDetails, 'booking') && Object.hasOwnProperty.call(bookingDetails.booking, 'TypeOfBooking') && (bookingDetails.booking.TypeOfBooking != 'Self reservation')\">\n                            <v-divider class=\"booking_divider mx-4\"></v-divider>\n                        </div>\n                        <div class=\"booking_content white--text\"\n                            v-if=\"Object.hasOwnProperty.call(bookingDetails, 'booking') && Object.hasOwnProperty.call(bookingDetails.booking, 'TypeOfBooking') && bookingDetails.booking.TypeOfBooking != 'Self reservation'\">\n                            Checked in at\n                            {{\n                                bookingDetails.hasOwnProperty(\"booking\") ? booking_content : \"\"\n                            }}\n                            <span v-if=\"bookingDetails.hasOwnProperty('booking') &&\n                                bookingDetails.hasOwnProperty('zone') &&\n                                bookingDetails.booking.vehicleNo != null &&\n                                bookingDetails.booking.vehicleNo != ''\n                                \">\n                                with license plate\n                                {{\n                                    bookingDetails.hasOwnProperty(\"booking\")\n                                    ? bookingDetails.booking.vehicleNo\n                                    : \"\"\n                                }}\n                            </span>\n                        </div>\n                    </div>\n                    <v-fab-transition>\n                        <v-btn v-show=\"Object.hasOwnProperty.call(bookingDetails, 'zone') &&\n                                bookingDetails.zone.isPedestrian == 1\n                                \" class=\"fabIcon\" color=\"#f2555c !important\" fab dark raised large right\n                            @click=\"getpedestrianAccess()\" style=\"bottom: 35px; float: right; right: 10px\">\n                            <v-img src=\"../assets/pedestrain_door.png\" style=\"opacity: 1\" width=\"32\" height=\"32\"\n                                contain></v-img>\n                            <!-- <v-icon class=\"material-icons-outlined\">directions_walk</v-icon> -->\n                        </v-btn>\n                    </v-fab-transition>\n\n                    <v-card-title class=\"pa-1\"></v-card-title>\n                    <v-card-text class=\"pa-1\">\n                        <v-row align=\"center\" class=\"mx-0 pb-0\" no-gutters v-if=\"bookingDetails.hasOwnProperty('booking') &&\n                            bookingDetails.booking.hasOwnProperty('TypeOfBooking') &&\n                            bookingDetails.booking.TypeOfBooking != 'Self reservation'\">\n                            <v-col cols=\"2\">\n                                <v-icon style=\"font-size: 50px\">mdi-clock-outline</v-icon>\n                            </v-col>\n                            <v-col cols=\"10\" class=\"pl-1\">\n                                <v-row no-gutters class=\"counter-content-position\">\n                                    <v-col cols=\"12\" class=\"pa-0\">\n                                        <v-skeleton-loader v-show=\"!bookingDetails.hasOwnProperty('booking') ||\n                                            timeAgo == '' ||\n                                            timeAgo == null\n                                            \" height=\"40px\" max-width=\"200\" type=\"heading\"></v-skeleton-loader>\n                                        <span class=\"grey--text text--darken-1 time_ago\"\n                                            v-show=\"!(validatedDateTime > 0)\">{{\n                                                timeAgo\n                                            }}</span>\n                                        <!-- <span\n                          class=\"grey--text text--darken-1 time_ago\"\n                          v-show=\"gracePeriodTime > 0\"\n                          >{{ countDownGracePeriodTime }}</span\n                        >-->\n                                        <span class=\"grey--text text--darken-1 time_ago\" v-show=\"bookingDetails.hasOwnProperty('booking') &&\n                                                bookingDetails.booking.hasOwnProperty('validated') &&\n                                                bookingDetails.booking.validated == '1' &&\n                                                validatedDateTime > 0\n                                                \">{{ countDownValidatedTime }}</span>\n                                    </v-col>\n                                    <v-col cols=\"12\" v-if=\"bookingDetails.hasOwnProperty('booking') &&\n                                        validatedDateTime <= 0\n                                        \">\n                                        <span class=\"grey--text text--darken-1 time_ago_context\">Since you parked</span>\n                                    </v-col>\n                                    <!-- <v-col cols=\"12\" v-else-if=\"bookingDetails.hasOwnProperty('booking') && gracePeriodTime > 0\">\n                        <span class=\"grey--text text--darken-1 time_ago_context\"\n                          >Grace period remaining</span\n                        >\n                      </v-col>-->\n                                    <v-col cols=\"12\" v-else-if=\"bookingDetails.hasOwnProperty('booking') &&\n                                        bookingDetails.booking.hasOwnProperty('validated') &&\n                                        bookingDetails.booking.validated == '1' &&\n                                        validatedDateTime > 0\n                                        \">\n                                        <span class=\"grey--text text--darken-1 time_ago_context\">Validation time\n                                            remaining</span>\n                                    </v-col>\n                                    <v-col cols=\"12\" v-show=\"bookingDetails.hasOwnProperty('booking') &&\n                                        bookingDetails.booking.hasOwnProperty('validated') &&\n                                        bookingDetails.booking.validated == '1' &&\n                                        bookingDetails.booking.hasOwnProperty(\n                                            'validationType'\n                                        ) &&\n                                        bookingDetails.booking.validationType == 'DIVRT'\n                                        \">\n                                        <span class=\"grey--text text--darken-1 validated_time\">Validated until {{\n                                            validated_content\n                                        }}</span>\n                                    </v-col>\n                                </v-row>\n                            </v-col>\n                            <v-col cols class=\"align-self-center text-center\" v-show=\"bookingDetails.hasOwnProperty('booking') &&\n                                    bookingDetails.booking.hasOwnProperty('TypeOfBooking') &&\n                                    bookingDetails.booking.TypeOfBooking == 'Monthly'\n                                    \">\n                                <v-btn class=\"elevation-0 white--text\" tile x-small color=\"green darken-2\">Monthly</v-btn>\n                            </v-col>\n                            <v-col cols class=\"align-self-center text-center\" v-show=\"bookingDetails.hasOwnProperty('booking') &&\n                                bookingDetails.booking.hasOwnProperty('TypeOfBooking') &&\n                                bookingDetails.booking.TypeOfBooking == 'Employee'\n                                \">\n                                <v-btn class=\"elevation-0 white--text\" tile x-small color=\"green darken-2\">Employee</v-btn>\n                            </v-col>\n                        </v-row>\n                        <v-row class=\"mx-0 pb-0 black--text pl-2\" no-gutters v-if=\"bookingDetails.hasOwnProperty('booking') &&\n                            bookingDetails.booking.hasOwnProperty('TypeOfBooking') &&\n                            bookingDetails.booking.TypeOfBooking == 'Self reservation'\">\n                            <v-row no-gutters class=\"pb-4\"><v-col>\n                                    <div>\n                                        Checked in at\n                                        {{\n                                            bookingDetails.hasOwnProperty(\"booking\") ? checkin_content : \"\"\n                                        }}\n\n                                    </div>\n                                    <span v-if=\"bookingDetails.hasOwnProperty('booking') &&\n                                        bookingDetails.hasOwnProperty('zone') &&\n                                        bookingDetails.booking.revEnd != null &&\n                                        bookingDetails.booking.revEnd != ''\n                                        \">\n\n                                        {{ checkout_content }}\n                                    </span>\n                                </v-col></v-row>\n                        </v-row>\n                        <v-container fluid pa-0 style=\"margin-left: 4.5rem;\" v-if=\"bookingDetails.hasOwnProperty('booking') &&\n                            bookingDetails.booking.hasOwnProperty('TypeOfBooking') &&\n                            bookingDetails.booking.TypeOfBooking == 'Self reservation'\">\n                            <v-row no-gutters>\n                                <v-col cols=\"12\" class=\"pl-1    \">\n                                    <v-row no-gutters class=\"counter-content-position\">\n                                        <v-col cols=\"12\" class=\"pa-0\">\n                                            <v-icon class=\"material-icons-outlined pr-2\"\n                                                style=\"font-size: 50px\">history_toggle_off</v-icon>\n                                            <v-skeleton-loader v-show=\"!bookingDetails.hasOwnProperty('booking')\n                                                \" height=\"40px\" max-width=\"200\" type=\"heading\"></v-skeleton-loader>\n                                            <span class=\"grey--text text--darken-1 time_ago\" v-show=\"exitDateTime > 0\n                                                \">{{ countDownExitTime }}</span>\n                                            <p class=\"grey--text text--darken-1 time_ago_context pl-15 \"\n                                                style=\"margin-top: -15px;\" v-if=\"exitDateTime > 0\">Remaining</p>\n                                        </v-col>\n                                    </v-row>\n                                </v-col>\n                            </v-row>\n                        </v-container>\n                        <v-row no-gutters align=\"center\" class=\"my-1\">\n                            <v-col cols=\"12\" class=\"pa-0 align-self-center text-center\">\n                                <v-btn class=\"elevation-0 white--text\" tile x-small color=\"green darken-2\" v-show=\"bookingDetails.hasOwnProperty('booking') &&\n                                    bookingDetails.booking.hasOwnProperty('validated') &&\n                                    bookingDetails.booking.validated == '1'\n                                    \">VALIDATED</v-btn>\n                                <!-- <v-icon color=\"red\" class=\"ml-2\" v-show=\"(bookingDetails.hasOwnProperty('booking') && bookingDetails.booking.validated == '1' && showPaymentCardAdded == '1')\" >approval</v-icon> -->\n                            </v-col>\n                        </v-row>\n                        <v-row class=\"justify-center mb-3\" no-gutters v-show=\"Object.hasOwnProperty.call(bookingDetails, 'zone') &&\n                            !(bookingDetails.zone.isGated == '0')\n                            \">\n                            <span class=\"grey--text text--darken-1 font-weight-bold\"\n                                v-if=\"showPaymentCardAdded && (isCheckoutEnabled(1) || isCheckoutEnabled(2) || isCheckoutEnabled(3))\">Click\n                                an option below to exit</span>\n                        </v-row>\n                        <v-row class=\"justify-center my-3\" no-gutters\n                            v-show=\"!(isCheckoutEnabled(1) || isCheckoutEnabled(2) || isCheckoutEnabled(3))\">\n                            <span class=\"black--text text--darken-1 font-weight-bold text-h5\">Checked In</span>\n                        </v-row>\n                    </v-card-text>\n                    <!-- <v-card-text class=\"text-center\">Click an option to exit</v-card-text> -->\n                    <v-card-actions class=\"text-center justify-center px-0 pb-4  \" v-if=\"Object.hasOwnProperty.call(bookingDetails, 'booking') &&\n                        !showPaymentCardAdded\n                        \">\n                        <v-container class=\"pa-0\" fluid>\n                            <v-row no-gutters>\n                                <v-col cols=\"12\" class=\"px-4\"\n                                    v-if=\"iosDevice && Object.hasOwnProperty.call(bookingDetails, 'zone') && Object.hasOwnProperty.call(bookingDetails.zone, 'paymentServices') && Object.hasOwnProperty.call(bookingDetails.zone.paymentServices, 'apple_pay') && bookingDetails.zone.paymentServices.apple_pay == '1'\">\n                                    <apple-pay width='75%' height=\"43px\"\n                                        :ios-device=\"iosDevice && Object.hasOwnProperty.call(bookingDetails, 'zone') && Object.hasOwnProperty.call(bookingDetails.zone, 'paymentServices') && Object.hasOwnProperty.call(bookingDetails.zone.paymentServices, 'apple_pay') && bookingDetails.zone.paymentServices.apple_pay == '1'\"></apple-pay>\n                                </v-col>\n                                <v-col cols=\"12\" class=\"px-4\"\n                                    v-if=\"!iosDevice && Object.hasOwnProperty.call(bookingDetails, 'zone') && Object.hasOwnProperty.call(bookingDetails.zone, 'paymentServices') && Object.hasOwnProperty.call(bookingDetails.zone.paymentServices, 'google_pay') && bookingDetails.zone.paymentServices.google_pay == '1'\">\n                                    <google-pay width='75%' height=\"43px\"></google-pay>\n                                </v-col>\n                                <v-col cols=\"12\" class=\"px-4\">\n                                    <v-btn style=\"font-weight:700\" elevation=\"20\" rounded width=\"75%\"\n                                        class=\"add_credit_card_btn white--text  \" @click=\"navigateToAddPayment\"> Add Credit\n                                        Card</v-btn>\n                                </v-col>\n                                <v-col cols=\"12\" class=\"mt-4 px-4\"\n                                    v-if=\"bookingDetails.zone.isPQREndReservation == 1 && (bookingDetails.booking.TypeOfBooking == 'Guest' || bookingDetails.booking.TypeOfBooking == 'Transient')\">\n                                    <v-btn text color=\"primary\"\n                                        style=\"font-size: 15px;font-weight: bolder;text-decoration: underline;\"\n                                        @click=\"hotelGuest\">I am an\n                                        overnight\n                                        hotel guest</v-btn>\n                                </v-col>\n                                <v-col cols=\"12\" class=\"mt-4 px-4\" v-show=\"bookingDetails.hasOwnProperty('booking') &&\n                                    bookingDetails.booking.hasOwnProperty('validated') &&\n                                    bookingDetails.booking.validated != '1' &&\n                                    bookingDetails.booking.isValidationEnabled == '1'\n                                    \">\n                                    <v-btn rounded elevation=\"20\" dense width=\"75%\"\n                                        class=\"validate_btn white--text blue darken-2 no-upper-case px-4\"\n                                        @click=\"openValidationDialog()\">Apply\n                                        Your Validation</v-btn>\n                                </v-col>\n                                <v-col cols=\"12\" class=\"mt-10 pa-0\"\n                                    v-if=\"Object.hasOwnProperty.call(bookingDetails, 'zone') && Object.hasOwnProperty.call(bookingDetails.zone, 'isLoyaltySupported') && bookingDetails.zone.isLoyaltySupported == '1' && bookingDetails.booking.validated != '1' && (bookingDetails.booking.TypeOfBooking == 'Guest' || bookingDetails.booking.TypeOfBooking == 'Transient')\">\n                                    <v-card flat color=\"#ececec\" class=\"ma-0\" tile max-width=\"100%\">\n                                        <v-card-text>\n                                            <v-row class=\"text-center pt-0\" no-gutters>\n                                                <v-col cols=\"12\" class=\"pa-0\">\n                                                    <p style=\"font-size: 15px;color: #F2555C;font-weight: bolder;\">CLAIM\n                                                        YOUR PARKING DISCOUNT</p>\n                                                </v-col>\n                                                <v-col cols=\"12\">\n                                                    <v-btn color=\"black\" class=\"pa-0 ma-0\" rounded width=\"270\" height=\"70\"\n                                                        elevation=\"20\" @click=\"loyalty = true\">\n                                                        <v-avatar tile width=\"200\" height=\"100\">\n                                                            <v-img src=\"../assets/GNLoyalty.png\" height=\"60px\"\n                                                                width=\"400px\"></v-img>\n                                                        </v-avatar>\n                                                    </v-btn>\n                                                </v-col>\n                                            </v-row>\n\n                                        </v-card-text>\n                                    </v-card>\n                                </v-col>\n                                <v-divider style=\"color:black\"></v-divider>\n                                <v-col cols=\"12\" class=\"mt-4 text-center color-black px-4\" style=\"font-size: 12px;\" v-show=\"Object.hasOwnProperty.call(bookingDetails, 'zone') &&\n                                    !(bookingDetails.zone.isGated == '0')\n                                    \">\n                                    <p>\n                                        Credit card is required unless otherwise specified. Please enter your card number\n                                        now to avoid a slow\n                                        down at the exit.\n                                    </p>\n                                </v-col>\n                                <v-col cols=\"12\" class=\"mt-4 text-center color-black px-4\" style=\"font-size: 12px\" v-show=\"Object.hasOwnProperty.call(bookingDetails, 'zone') &&\n                                    !(bookingDetails.zone.isGated == '1') &&\n                                    validatedDateTime <= 0\n                                    \">\n                                    <p>\n                                        A valid credit card is required to park. Without one, you\n                                        could be subject to a parking violation and issued a\n                                        citation.\n                                    </p>\n                                </v-col>\n                                <v-col cols=\"12\" class=\"mt-4 color-black text-center px-4\" style=\"font-size: 12px\" v-show=\"bookingDetails.hasOwnProperty('booking') &&\n                                    bookingDetails.booking.hasOwnProperty('validated') &&\n                                    bookingDetails.booking.validated == '1' &&\n                                    validatedDateTime > 0\n                                    \">\n                                    <p>\n                                        Exiting after the validated time period will require a valid\n                                        credit card to continue parking. Without one, you could be\n                                        subject to a parking violation and issued a citation.\n                                    </p>\n                                </v-col>\n                                <v-col cols=\"12\" class=\"px-4 mt-2 color-black text-center\" style=\"font-size: 12px\"\n                                    v-show=\"iosDevice\">\n                                    <p>\n                                        You're only authorizing payment now. We'll charge you automatically when you\n                                        checkout based on the\n                                        duration of stay.\n                                    </p>\n                                </v-col>\n                            </v-row>\n\n                        </v-container>\n                    </v-card-actions>\n                    <v-card-actions class=\"justify-center pb-10\" v-if=\"showPaymentCardAdded\">\n                        <v-container class=\"pa-0\" fluid>\n                            <v-row no-gutters class=\"text-center px-10\" v-if=\"bookingDetails.hasOwnProperty('exitOptions') &&\n                                Object.hasOwnProperty.call(bookingDetails, 'zone') &&\n                                !(bookingDetails.zone.isGated == '0') && bookingDetails.exitOptions.length > 0\n                                \">\n                                <v-col v-if=\"isCheckoutEnabled(1)\">\n                                    <v-avatar color=\"red\" class=\"pa-6\" @click=\"openSMSDialog()\">\n                                        <v-icon medium color=\"white accent-2\" class=\"px-4\" dark>\n                                            {{\n                                                getExitIcon(1)\n                                            }}\n                                        </v-icon>\n                                    </v-avatar>\n                                    <p class=\"grey--text text--darken-1 exit-option-text\">\n                                        {{ getExitText(1) }}\n                                    </p>\n                                </v-col>\n                                <v-col v-if=\"isCheckoutEnabled(2)\">\n                                    <v-avatar color=\"red\" class=\"pa-6\" @click.stop=\"openSmsQrScanner()\">\n                                        <v-icon medium color=\"white accent-2\" class=\"px-4\" dark>\n                                            {{\n                                                getExitIcon(2)\n                                            }}\n                                        </v-icon>\n                                    </v-avatar>\n                                    <p class=\"grey--text text--darken-1 exit-option-text\">\n                                        {{ getExitText(2) }}\n                                    </p>\n                                </v-col>\n                                <v-col v-if=\"isCheckoutEnabled(3)\">\n                                    <v-avatar color=\"red\" class=\"pa-6\" @click=\"dialerDialog = true\">\n                                        <v-icon medium color=\"white accent-2\" class=\"px-4\" dark>\n                                            {{\n                                                getExitIcon(3)\n                                            }}\n                                        </v-icon>\n                                    </v-avatar>\n                                    <p class=\"grey--text text--darken-1 exit-option-text\">{{ getExitText(3) }}</p>\n                                </v-col>\n                            </v-row>\n                            <v-row no-gutters\n                                v-if=\"bookingDetails.zone.isPQREndReservation == 1 && bookingDetails.booking.TypeOfBooking == 'Self reservation'\">\n                                <v-col cols=\"12\" class=\"px-2 mt-4\">\n                                    <v-btn rounded elevation=\"20\" class=\"add_licence_plate_btn white--text\"\n                                        @click=\"openExtDialog()\">Extend\n                                        Parking</v-btn>\n                                </v-col>\n                            </v-row>\n                            <v-row no-gutters v-show=\"Object.hasOwnProperty.call(bookingDetails, 'zone') &&\n                                !(bookingDetails.zone.isGated == '0') && (isCheckoutEnabled(1) || isCheckoutEnabled(2) || isCheckoutEnabled(3))\n                                \">\n                                <v-col cols=\"12\" class=\"mt-2 text-center color-black\" style=\"font-size: 12px\">\n                                    <p class=\"mb-0\">\n                                        When you're ready to leave, please look for the\n                                        <strong>3 digit</strong> gate code on the sign in the exit\n                                        lane. Type that code when prompted. Have a good day!\n                                    </p>\n                                </v-col>\n                            </v-row>\n                            <v-row no-gutters class=\"mt-4\"\n                                v-if=\"Object.hasOwnProperty.call(bookingDetails, 'booking') && Object.hasOwnProperty.call(bookingDetails.booking, 'paymentType') && bookingDetails.booking.paymentType != '' && (bookingDetails.booking.paymentType == 'APPLE_PAY' || bookingDetails.booking.paymentType == 'GOOGLE_PAY')\">\n                                <v-col cols=\"12\" class=\"text-center font-weight-bold\">\n                                    <span style=\"font-size: 13px;\">Authorized with {{\n                                        getPaymentType(bookingDetails.booking.paymentType) }}</span>\n                                </v-col>\n                            </v-row>\n                            <v-row no-gutters>\n                                <v-col cols=\"12\" class=\"px-4 mt-4 text-center color-black font-weight-bold\"\n                                    style=\"font-size: 13px\" v-show=\"(bookingDetails.hasOwnProperty('booking') &&\n                                        bookingDetails.booking.hasOwnProperty('cardNo') &&\n                                        bookingDetails.booking.hasOwnProperty('accountType') &&\n                                        bookingDetails.booking.accountType == '2') ||\n                                        (bookingDetails.booking.cardOnfile == '1' &&\n                                            (bookingDetails.booking.accountType == '0' ||\n                                                bookingDetails.booking.accountType == '1') &&\n                                            !(\n                                                bookingDetails.booking.cardNo == '0' ||\n                                                bookingDetails.booking.cardNo == '' ||\n                                                bookingDetails.booking.cardNo == null\n                                            ))\n                                        \">\n                                    <p class=\"mb-0\">\n                                        Card ending with *{{\n                                            bookingDetails.hasOwnProperty(\"booking\") &&\n                                            bookingDetails.booking.hasOwnProperty(\"cardNo\")\n                                            ? bookingDetails.booking.cardNo\n                                            : \"\"\n                                        }}\n                                        on file\n                                    </p>\n                                </v-col>\n                            </v-row>\n                            <v-row no-gutters\n                                v-if=\"bookingDetails.zone.isPQREndReservation == 1 &&\n                                        (bookingDetails.booking.cardOnfile == '1' || bookingDetails.booking.cardOnfile == '2') && (bookingDetails.booking.TypeOfBooking == 'Guest' || bookingDetails.booking.TypeOfBooking == 'Transient')\">\n                                <v-col cols=\"12\" class=\"mt-4 text-center\">\n                                    <v-btn text color=\"primary\"\n                                        style=\"font-size: 15px;font-weight: bolder;text-decoration: underline;\"\n                                        @click=\"hotelGuest\">I am an\n                                        overnight\n                                        hotel guest</v-btn>\n                                </v-col>\n                            </v-row>\n                            <v-row no-gutters class=\"mt-2\">\n                                <v-col cols=\"12\" class=\"text-center mt-2\" v-show=\"bookingDetails.hasOwnProperty('booking') &&\n                                    bookingDetails.booking.hasOwnProperty('validated') &&\n                                    bookingDetails.booking.validated != '1' &&\n                                    bookingDetails.booking.isValidationEnabled == '1'\n                                    \">\n                                    <v-btn rounded elevation=\"24\" dense width=\"75%\"\n                                        class=\"validate_btn white--text blue darken-2 no-upper-case\"\n                                        @click=\"openValidationDialog()\">Apply\n                                        Your Validation\n                                    </v-btn>\n                                </v-col>\n                            </v-row>\n                            <v-col cols=\"12\" class=\"mt-10 pa-0\"\n                                v-if=\"Object.hasOwnProperty.call(bookingDetails, 'zone') && Object.hasOwnProperty.call(bookingDetails.zone, 'isLoyaltySupported') && bookingDetails.zone.isLoyaltySupported == '1' && bookingDetails.booking.validated != '1' && (bookingDetails.booking.TypeOfBooking == 'Guest' || bookingDetails.booking.TypeOfBooking == 'Transient')\">\n                                <v-card flat color=\"#ececec\" class=\"ma-0\" tile max-width=\"100%\">\n                                    <v-card-text>\n                                        <v-row class=\"text-center pt-0\" no-gutters>\n                                            <v-col cols=\"12\" class=\"pa-0\">\n                                                <p style=\"font-size: 15px;color: #F2555C;font-weight: bolder;\">CLAIM\n                                                    YOUR PARKING DISCOUNT</p>\n                                            </v-col>\n                                            <v-col cols=\"12\">\n                                                <v-btn color=\"black\" class=\"pa-0 ma-0\" rounded width=\"270\" height=\"70\"\n                                                    elevation=\"20\" @click=\"loyalty = true\">\n                                                    <v-avatar tile width=\"200\" height=\"100\">\n                                                        <v-img src=\"../assets/GNLoyalty.png\" height=\"60px\"\n                                                            width=\"400px\"></v-img>\n                                                    </v-avatar>\n                                                </v-btn>\n                                            </v-col>\n                                        </v-row>\n\n                                    </v-card-text>\n                                </v-card>\n                            </v-col>\n                            <v-row no-gutters class=\"text-center mt-1\" v-show=\"Object.hasOwnProperty.call(bookingDetails, 'zone') &&\n                                bookingDetails.zone.isGated == '0' &&\n                                bookingDetails.booking.cardOnfile == '1' &&\n                                validatedDateTime <= 0\n                                \">\n                                <v-col cols=\"12\" class=\"mt-2 color-black\" style=\"font-size: 12px\">\n                                    <p class=\"mb-0\">\n                                        The card on file will be automatically charged for the time\n                                        parked when you exit the garage.\n                                    </p>\n                                </v-col>\n                            </v-row>\n\n                            <v-row no-gutters>\n                                <v-col cols=\"12\" class=\"mt-1 text-center\" v-show=\"bookingDetails.hasOwnProperty('booking') &&\n                                    bookingDetails.booking.hasOwnProperty('cardNo') &&\n                                    bookingDetails.booking.hasOwnProperty('accountType') &&\n                                    bookingDetails.booking.hasOwnProperty('cardUpdated') &&\n                                    !(bookingDetails.booking.cardUpdated == '1') &&\n                                    (bookingDetails.booking.accountType == '2' ||\n                                        (bookingDetails.booking.cardOnfile == '1' &&\n                                            bookingDetails.booking.accountType == '0')) &&\n                                    !(bookingDetails.booking.tapToChangeCard == '0') && !(bookingDetails.booking.paymentType == 'APPLE_PAY' || bookingDetails.booking.paymentType == 'GOOGLE_PAY')\n                                    \">\n                                    <a class=\"text-caption\" @click=\"navigateToAddPayment()\">Tap to change card</a>\n                                </v-col>\n                            </v-row>\n                            <v-row no-gutters>\n                                <v-col cols=\"12\" class=\"mt-4 text-center color-black\" style=\"font-size: 12px\" v-show=\"Object.hasOwnProperty.call(bookingDetails, 'zone') &&\n                                    !(bookingDetails.zone.isGated == '1') &&\n                                    validatedDateTime <= 0 &&\n                                    bookingDetails.booking.cardOnfile != '1'\n                                    \">\n                                    <p>\n                                        A valid credit card is required to park. Without one, you\n                                        could be subject to a parking violation and issued a\n                                        citation.\n                                    </p>\n                                </v-col>\n                            </v-row>\n                            <v-row no-gutters>\n                                <v-col cols=\"12\" class=\"mt-4 text-center color-black\" style=\"font-size: 12px\" v-show=\"bookingDetails.hasOwnProperty('booking') &&\n                                    bookingDetails.booking.hasOwnProperty('validated') &&\n                                    bookingDetails.booking.validated == '1' &&\n                                    validatedDateTime > 0\n                                    \">\n                                    <p>\n                                        Exiting after the validated time period will require a valid\n                                        credit card to continue parking. Without one, you could be\n                                        subject to a parking violation and issued a citation.\n                                    </p>\n                                </v-col>\n                            </v-row>\n                        </v-container>\n                    </v-card-actions>\n                    <!-- <v-row v-if=\"showPaymentCardAdded\">\n                <v-col>\n                  <v-icon\n                    x-small\n                    color=\"green\"\n                    class=\"px-4\"\n                    dark\n                    @click=\"navigateToCheckOut\"\n                  >mdi-exit-to-app</v-icon>\n                </v-col>\n              </v-row>-->\n                    <!-- </v-responsive> -->\n                </v-card>\n            </v-col>\n        </v-row>\n        <v-dialog v-model=\"alertDialog\" persistent max-width=\"290\">\n            <v-card class=\"pa-0\">\n                <v-card-title class=\"justify-center\" style=\"position: relative\">\n                    <v-icon x-large color=\"green accent-2\">{{ alertIcon }}</v-icon>\n                </v-card-title>\n                <v-card-text class=\"text-center mt-5\">\n                    <span style=\"font-size: 20px\">{{ alertMsg }}</span>\n                </v-card-text>\n                <v-card-actions class=\"text-center pb-6\">\n                    <v-container pa-0 fluid>\n                        <v-row no-gutters>\n                            <v-col cols=\"12\">\n                                <v-btn rounded block elevation=\"0\" class=\"white--text exit_dialog_btn\"\n                                    @click=\"closeAlertDialog()\">Close</v-btn>\n                            </v-col>\n                        </v-row>\n                    </v-container>\n                </v-card-actions>\n            </v-card>\n        </v-dialog> <v-dialog v-model=\"loyalty\" width=\"750px\">\n            <v-card>\n                <v-row no-gutters style=\"background-color: black;\" class=\"text-center\">\n                    <v-col class=\"text-center pt-1 \">\n                        <img src=\"../assets/GNLoyalty.png\" width=\"200px\" height=\"65px\">\n                    </v-col>\n                </v-row>\n                <v-card-text>\n                    <v-row no-gutters class=\"mt-4\">\n                        <v-col>\n                            <p style=\"font-size:large;color: black;\">Enter the 24K Select number found on your Loyalty Card\n                            </p>\n                        </v-col>\n                    </v-row>\n                    <v-row no-gutters class=\"mt-2\">\n                        <v-col>\n                            <v-text-field label=\"24K Select Number\" outlined v-model=\"loyalty24knum\"\n                                @keyup=\"loyaltyValid\"></v-text-field>\n                        </v-col>\n                    </v-row>\n                    <v-row no-gutters class=\"mt-2 text-center\">\n                        <v-col>\n                            <v-btn color=\"#F2555C\" width=\"180\" rounded class=\"white--text\" :disabled=\"disableLoyalty\"\n                                @click=\"submitLoyalty(loyalty24knum)\">Submit</v-btn>\n                        </v-col>\n                    </v-row>\n                </v-card-text>\n            </v-card>\n        </v-dialog>\n        <v-dialog v-model=\"qrCodeDialog\" width=\"fit-content\" persistent>\n            <v-card>\n                <v-card-title>\n                    <v-spacer></v-spacer>\n                    <v-icon @click=\"closeQRCodeDialog()\">mdi-close</v-icon>\n                </v-card-title>\n                <v-card-text class=\"pa-1\">\n                    <qr-code-scanner :scan=\"'sms'\" v-bind:qrbox=\"250\" v-bind:fps=\"30\"\n                        :cameraStatus=\"cameraStatus\"></qr-code-scanner>\n                    <v-progress-circular v-if=\"!cameraStatus\" class=\"validation-pending\" indeterminate\n                        color=\"red\"></v-progress-circular>\n                </v-card-text>\n                <v-card-actions>\n                    <v-container class=\"pa-0\" fluid>\n                        <v-row no-gutters>\n                            <v-col cols=\"7\">\n                                <p class=\"grey--text font-weight-bold qr_text mr-4\">Scan the QR code affixed to exit the\n                                    gate</p>\n                            </v-col>\n                            <v-spacer></v-spacer>\n                            <v-img src=\"../assets/qr-code.png\" style=\"opacity: 0.7\" max-width=\"52\"></v-img>\n                        </v-row>\n                    </v-container>\n                </v-card-actions>\n            </v-card>\n        </v-dialog>\n        <div>\n            <v-dialog v-model=\"smsDialog\" width=\"fit-content\">\n                <v-card class=\"pa-0\" ref=\"smscontainer\">\n                    <v-card-title class=\"justify-center\" style=\"position: relative\">\n                        <v-btn class elevation=\"0\" color=\"white\" dark fab x-large>\n                            <v-icon x-large color=\"red accent-2\">mdi-message-text</v-icon>\n                        </v-btn>\n                    </v-card-title>\n                    <v-card-text class=\"pa-0\">\n                        <v-container class=\"px-4\" fluid>\n                            <v-row no-gutters>\n                                <v-col cols=\"12\" class=\"text-left\">\n                                    <p class=\"color-black\" style=\"font-size: 24px; line-height: 35px\">Enter the gate code\n                                        shown in the\n                                        lane to exit.</p>\n                                    <!-- <p class=\"sms-caption color-black\">\n                        We'll copy the code into a text message for you. You'll need\n                        to tap send on the message to open the gate.\n                      </p>-->\n                                </v-col>\n                                <v-col cols=\"12\" class=\"mt-2\">\n                                    <v-text-field class=\"sms-input\" color=\"red\" v-model=\"smsText\" outlined label=\"Gate code\"\n                                        maxlength=\"6\" type=\"tel\" autofocus v-on:keyup.enter=\"openSMSApp()\"\n                                        @focus=\"scrollToSubmit()\" @mouseup=\"scrollToSubmit()\" @keydown=\"scrollToSubmit()\"\n                                        clearable height=\"80px\"></v-text-field>\n                                </v-col>\n                            </v-row>\n                        </v-container>\n                        <v-progress-circular v-if=\"smsPending\" class=\"validation-pending\" indeterminate\n                            color=\"red\"></v-progress-circular>\n                    </v-card-text>\n                    <v-card-actions class=\"text-center\">\n                        <v-container pa-0 fluid>\n                            <v-row no-gutters>\n                                <v-col cols=\"12\">\n                                    <v-btn id=\"submitsmsbtn\" rounded block elevation=\"20\"\n                                        :disabled=\"smsText == '' || smsPending\" class=\"white--text exit_dialog_btn\"\n                                        @click=\"openSMSApp()\">SUBMIT</v-btn>\n                                </v-col>\n                                <v-col cols=\"12\" class=\"mt-2\">\n                                    <p style=\"cursor: pointer\" @click=\"smsDialog = false\">\n                                        Close\n                                    </p>\n                                </v-col>\n                            </v-row>\n                        </v-container>\n                    </v-card-actions>\n                </v-card>\n            </v-dialog>\n        </div>\n        <div>\n            <v-dialog v-model=\"validateQRCodeDialog\" width=\"fit-content\" persistent>\n                <v-card>\n                    <v-card-title>\n                        <v-spacer></v-spacer>\n                        <v-icon @click=\"closeValidationQRDialog()\">mdi-close</v-icon>\n                    </v-card-title>\n                    <v-card-text class=\"pa-1\">\n                        <validation-qr-code-scanner :scan=\"'validationCode'\" v-bind:qrbox=\"250\" v-bind:fps=\"30\"\n                            :cameraStatus=\"validationCameraStatus\"></validation-qr-code-scanner>\n                        <v-progress-circular v-if=\"!validationCameraStatus\" class=\"validation-pending\" indeterminate\n                            color=\"red\"></v-progress-circular>\n                    </v-card-text>\n                    <v-card-actions>\n                        <v-container class=\"pa-0\" fluid>\n                            <v-row no-gutters>\n                                <v-col cols=\"7\">\n                                    <p class=\"grey--text font-weight-bold qr_text mr-4\">Please scan the validation QR code\n                                    </p>\n                                </v-col>\n                                <v-spacer></v-spacer>\n                                <v-img src=\"../assets/qr-code.png\" style=\"opacity: 0.7\" max-width=\"52\"></v-img>\n                            </v-row>\n                        </v-container>\n                    </v-card-actions>\n                </v-card>\n            </v-dialog>\n        </div>\n        <div>\n            <v-dialog v-model=\"validateBookingDialog\" width=\"fit-content\">\n                <v-card class=\"pa-0\" ref=\"validatecontainer\">\n                    <v-card-title class=\"justify-center\" style=\"position: relative\">\n                        <v-btn class elevation=\"0\" color=\"white\" dark fab large>\n                            <v-icon x-large color=\"red accent-2\">mdi-ticket-percent</v-icon>\n                        </v-btn>\n                    </v-card-title>\n                    <v-card-text class=\"pa-0\">\n                        <v-container class=\"px-4 py-0\" fluid>\n                            <v-row no-gutters>\n                                <v-col cols=\"12\" class=\"text-left\">\n                                    <p class=\"color-black text-center\" style=\"font-size: 24px; line-height: 35px\">\n                                        If the Merchant provided you a validation code, you may scan\n                                        it or enter it here.\n                                    </p>\n                                </v-col>\n                                <v-col cols=\"12\">\n                                    <v-btn rounded block elevation=\"20\" class=\"white--text exit_dialog_btn\"\n                                        @click=\"openScanValidationCode()\">Scan Validation Code</v-btn>\n                                </v-col>\n                                <v-col cols=\"12\" class=\"text-left mt-4\">\n                                    <p class=\"color-black\" style=\"font-size: 24px; line-height: 35px\">or enter it below</p>\n                                </v-col>\n                                <v-col cols=\"12\">\n                                    <v-text-field class=\"sms-input\" color=\"red\" v-model=\"validateBookingTxt\" outlined\n                                        label=\"Validation code\" hide-details=\"auto\" v-on:keyup.enter=\"validateBooking()\"\n                                        @focus=\"scrollToValidateBtn()\" @mouseup=\"scrollToValidateBtn()\"\n                                        @keydown=\"scrollToValidateBtn()\" clearable height=\"80px\"></v-text-field>\n                                </v-col>\n                            </v-row>\n                        </v-container>\n                        <v-progress-circular v-if=\"validateBookingPending\" class=\"validation-pending\" indeterminate\n                            color=\"red\"></v-progress-circular>\n                    </v-card-text>\n                    <v-card-actions class=\"text-center\">\n                        <v-container pa-0 fluid>\n                            <v-row no-gutters>\n                                <v-col cols=\"12\">\n                                    <v-btn id=\"validatebookingbtn\" rounded block elevation=\"20\" :disabled=\"validateBookingTxt == '' ||\n                                        validateBookingTxt == null ||\n                                        validateBookingPending\n                                        \" class=\"white--text exit_dialog_btn\" @click=\"onValidateText()\">SUBMIT</v-btn>\n                                </v-col>\n                                <v-col cols=\"12\" class=\"mt-2\">\n                                    <p style=\"cursor: pointer\" @click=\"validateBookingDialog = false\">\n                                        Close\n                                    </p>\n                                </v-col>\n                            </v-row>\n                        </v-container>\n                    </v-card-actions>\n                </v-card>\n            </v-dialog>\n        </div>\n        <div>\n            <v-dialog v-model=\"dialerDialog\" width=\"fit-content\">\n                <v-card class=\"pa-0\">\n                    <v-card-title class=\"justify-center\" style=\"position: relative\">\n                        <v-btn class elevation=\"0\" color=\"white\" dark fab x-large>\n                            <v-icon x-large color=\"red accent-2\">mdi-phone-in-talk</v-icon>\n                        </v-btn>\n                    </v-card-title>\n                    <v-card-text class=\"pa-0\">\n                        <v-container class=\"px-4\" fluid>\n                            <v-row no-gutters>\n                                <v-col cols=\"12\" class=\"text-left\">\n                                    <p class=\"color-black\" style=\"font-size: 24px; line-height: 35px\">\n                                        Tap to call the gate. When prompted, enter the gate code\n                                        shown in the lane to exit.\n                                    </p>\n                                </v-col>\n                            </v-row>\n                        </v-container>\n                    </v-card-text>\n                    <v-card-actions class=\"text-center\">\n                        <v-container pa-0 fluid>\n                            <v-row no-gutters>\n                                <v-col cols=\"12\">\n                                    <v-btn rounded block elevation=\"20\" class=\"white--text exit_dialog_btn\"\n                                        @click=\"openDialerApp\">CALL\n                                        GATE</v-btn>\n                                </v-col>\n                                <v-col cols=\"12\" class=\"mt-2\">\n                                    <p style=\"cursor: pointer\" @click=\"dialerDialog = false\">\n                                        Close\n                                    </p>\n                                </v-col>\n                            </v-row>\n                        </v-container>\n                    </v-card-actions>\n                </v-card>\n            </v-dialog>\n        </div>\n        <v-dialog v-model=\"extensionDialog\">\n            <v-card class=\"pa-0\">\n                <v-card-title></v-card-title>\n                <v-card-text class=\"pa-0\">\n                    <v-row class=\"text-center mt-3\" no-gutters>\n                        <v-col>\n                            <p class=\"black--text\" style=\"font-weight:bold\">Choose Date <span\n                                    v-if=\"Object.hasOwnProperty.call(bookingDetails, 'zone') && Object.hasOwnProperty.call(bookingDetails.zone, 'timePickerConfiguration') && this.bookingDetails.zone.timePickerConfiguration == '1' && bookingDetails.zone.isPQREndReservation == 1\">and\n                                    Time</span></p>\n                            <p>Expires at {{ countDownExitTime }}</p>\n                        </v-col>\n                    </v-row>\n                    <v-row no-gutters>\n                        <v-col cols=\"1\" class=\"text-right align-self-center py-5\">\n                            <v-icon class=\"material-icons-outlined\">calendar_month</v-icon>\n                        </v-col>\n                        <v-col cols=\"11\" class=\"px-2\">\n                            <v-text-field v-model=\"computedDateFormatted\" @click=\"() => { openDatePicker = true }\"\n                                hide-details=\"auto\" readonly></v-text-field>\n                            <v-dialog v-model=\"openDatePicker\" max-width=\"450px\">\n                                <v-card style=\"background-color: #F2555C;color: white;\"><v-card-title>\n                                        <v-row no-gutters>\n                                            <v-col class=\"text-left\" cols=\"12\">\n                                                <span style=\"font-size:15px;color: #fabbbe;\">{{ time !== null && time !== \"\"\n                                                    ?\n                                                    formattedYear : \"\" }}</span>\n                                            </v-col>\n                                            <v-col>\n                                                <span style=\"font-size:30px\"> {{ time !== null && time !== \"\" ?\n                                                    formattedDateTime :\n                                                    \"\"\n                                                }}</span>\n                                            </v-col>\n                                        </v-row>\n                                    </v-card-title></v-card>\n                                <Calendar inline class=\"text-left\" value :stepMinute=\"15\" hourFormat=\"12\" :minDate=\"minDate\"\n                                    @date-select=\"onTimePickerChange\" :maxDate=\"maxDate\" v-model=\"time\" />\n                            </v-dialog>\n                        </v-col>\n                    </v-row>\n\n                    <v-row no-gutters\n                        v-if=\"Object.hasOwnProperty.call(bookingDetails, 'zone') && Object.hasOwnProperty.call(bookingDetails.zone, 'timePickerConfiguration') && bookingDetails.zone.timePickerConfiguration == '1'\">\n                        <v-col cols=\"1\" class=\"text-right align-self-center\">\n                            <v-icon class=\"material-icons-outlined\">schedule</v-icon>\n                        </v-col>\n                        <v-col cols=\"11\" class=\"px-3\">\n                            <v-row>\n                                <v-col>\n                                    <v-text-field v-model=\"formattedTime\"\n                                        @click=\"() => { openTimePicker = true; round(time) }\" readonly></v-text-field>\n                                    <v-dialog v-model=\"openTimePicker\" max-width=\"320px\" class=\"pa-0\"\n                                        @click:outside=\"() => { setDefaultDate(); onTimePickerChange() }\">\n                                        <v-card><v-card-title style=\"background-color: #F2555C;color: white;\">What time will\n                                                you\n                                                exit?</v-card-title>\n                                            <Calendar inline show-time time-only class=\"text-left \" value :stepMinute=\"15\"\n                                                selection-mode=\"single\" hourFormat=\"12\" :minDate=\"minDate\"\n                                                :maxDate=\"maxDate\" v-model=\"time\" />\n                                        </v-card>\n\n                                    </v-dialog>\n                                </v-col>\n                            </v-row>\n                        </v-col>\n                    </v-row>\n\n                    <v-container fluid pa-0>\n                        <Estimate :singleQuotes=\"singleQuotes\" :doubleQuotes=\"doubleQuotes\" :estimate=\"estimate\"\n                            :formattedEntryDisplayTime=\"formattedEntryDisplayTime\" :beforeEstimate=\"beforeEstimate\"\n                            :state=\"'20px'\">\n                        </Estimate>\n                        <v-row no-gutters class=\"mt-3 pa-4\">\n                            <v-col>\n                                <v-btn rounded elevation=\"20\" :loading=\"extendBtnLoading\"\n                                    class=\"add_licence_plate_btn white--text\" @click=\"extendEDT()\">Extend\n                                    Parking</v-btn>\n                            </v-col>\n                        </v-row>\n                    </v-container>\n                </v-card-text>\n            </v-card>\n        </v-dialog>\n        <v-dialog v-model=\"invalidQRDialog\" persistent max-width=\"290\">\n            <v-card class=\"pa-0\">\n                <v-card-title class=\"justify-center\" style=\"position: relative\">\n                    <v-icon x-large color=\"red accent-2\">mdi-alert-outline</v-icon>\n                </v-card-title>\n                <v-card-text class=\"text-center mt-5\">\n                    <span style=\"font-size: 20px\">{{ invalidQRMsg }}</span>\n                </v-card-text>\n                <v-card-actions class=\"text-center pb-6\">\n                    <v-container pa-0 fluid>\n                        <v-row no-gutters>\n                            <v-col cols=\"12\">\n                                <v-btn rounded block elevation=\"20\" class=\"white--text exit_dialog_btn\"\n                                    @click=\"reScanQR()\">Re-Scan\n                                    Code</v-btn>\n                            </v-col>\n                        </v-row>\n                    </v-container>\n                </v-card-actions>\n            </v-card>\n        </v-dialog>\n        <v-dialog v-model=\"invalidValidationQRDialog\" persistent max-width=\"290\">\n            <v-card class=\"pa-0\">\n                <v-card-title class=\"justify-center\" style=\"position: relative\">\n                    <v-icon x-large color=\"red accent-2\">mdi-alert-outline</v-icon>\n                </v-card-title>\n                <v-card-text class=\"text-center mt-5\">\n                    <span style=\"font-size: 20px\">{{ invalidValidationQRMsg }}</span>\n                </v-card-text>\n                <v-card-actions class=\"text-center pb-6\">\n                    <v-container pa-0 fluid>\n                        <v-row no-gutters>\n                            <v-col cols=\"12\">\n                                <v-btn rounded block elevation=\"20\" class=\"white--text exit_dialog_btn\"\n                                    @click=\"reScanValidationQR()\">Re-Scan Code</v-btn>\n                            </v-col>\n                        </v-row>\n                    </v-container>\n                </v-card-actions>\n            </v-card>\n        </v-dialog>\n        <v-dialog v-model=\"invalidSMSDialog\" persistent max-width=\"290\">\n            <v-card class=\"pa-0\">\n                <v-card-title class=\"justify-center\" style=\"position: relative\">\n                    <v-icon x-large color=\"red accent-2\">mdi-alert-outline</v-icon>\n                </v-card-title>\n                <v-card-text class=\"text-center mt-5\">\n                    <span style=\"font-size: 20px\">{{ invalidSMSMsg }}</span>\n                </v-card-text>\n                <v-card-actions class=\"text-center pb-6\">\n                    <v-container pa-0 fluid>\n                        <v-row no-gutters>\n                            <v-col cols=\"12\">\n                                <v-btn rounded block elevation=\"20\" class=\"white--text exit_dialog_btn\"\n                                    @click=\"invalidSMSDialog = false\">Re-Enter Code</v-btn>\n                            </v-col>\n                        </v-row>\n                    </v-container>\n                </v-card-actions>\n            </v-card>\n        </v-dialog>\n\n        <v-dialog v-model=\"pedestrianAccessDialog\" persistent max-width=\"290\">\n            <v-card class=\"pa-0\">\n                <v-card-title class=\"justify-center\" style=\"position: relative\">\n                    <v-icon x-large color=\"red accent-2\">mdi-alert-outline</v-icon>\n                </v-card-title>\n                <v-card-text class=\"text-center mt-5\">\n                    <span style=\"font-size: 20px\">{{ pedestrianAccessText }}</span>\n                </v-card-text>\n                <v-card-actions class=\"text-center pb-6\">\n                    <v-container pa-0 fluid>\n                        <v-row no-gutters>\n                            <v-col cols=\"12\">\n                                <v-btn rounded block elevation=\"0\" class=\"white--text exit_dialog_btn\"\n                                    @click=\"pedestrianAccessDialog = false\">Close</v-btn>\n                            </v-col>\n                        </v-row>\n                    </v-container>\n                </v-card-actions>\n            </v-card>\n        </v-dialog>\n    </v-container>\n</template>\n\n<script>\nimport Calendar from '../uiComponents/Calendar/Calendar';\nimport Estimate from '../components/Estimate.vue'\nimport APIHelper from \"../apiHelper\";\nimport \"primevue/resources/themes/saga-blue/theme.css\"       //theme\nimport \"primevue/resources/primevue.min.css\"                 //core css\nimport \"primeicons/primeicons.css\"\nimport GooglePay from \"./GooglePay.vue\";\n// import loggerHelper from \"../loggerHelper\";\nimport { mapGetters } from \"vuex\";\n// import { QrcodeStream } from \"vue-qrcode-reader\";\nimport QrCodeScanner from \"@/views/QrCodeScanner.vue\";\nimport ValidationQrCodeScanner from \"@/views/ValidationQrCodeScanner.vue\";\nimport ApplePay from \"@/views/ApplePay.vue\";\nimport { formatDateTime } from \"@/utils/formatDateTime\";\nimport { EventBus } from \"@/lib/EventBus\";\nimport { secondsToHms } from \"@/utils/formatDateTime\";\nimport { addMinutes, addDays, addHours, set } from \"date-fns\";\nimport { format, isValid } from \"date-fns\";\nimport { dateToTimeZoneDate } from \"@/utils/formatDateTime\";\n// import QrScanner from 'qr-scanner';\nexport default {\n    name: \"CheckIn\",\n    components: { QrCodeScanner, ValidationQrCodeScanner, ApplePay, GooglePay, Calendar, Estimate },\n    data: () => ({\n        // rules: {\n        //   counter: value => value.length <= 6 || \"Max 6 characters\"\n        // },\n        time: \"\",\n        openTimePicker: false,\n        openDatePicker: false,\n        minTimeDate: null,\n        maxTimeDate: null,\n        beforeEstimate: null,\n        currentDate: format((new Date()), 'yyyy-MM-dd'),\n        loyalty24knum: \"\",\n        alertIcon: \"mdi-check-circle\",\n        alertDialog: false,\n        alertMsg: \"\",\n        loyalty: false,\n        extDateAndTime: null,\n        extendBtnLoading: false,\n        loading: false,\n        extensionDialog: false,\n        stopTime: \"\",\n        exitTimeSelected: {},\n        timePickerHrRange: null,\n        timeExceeded: false,\n        timePickerMinRange: null,\n        minDate: null,\n        maxDate: null,\n        Timemenu: false,\n        startDate: \"\",\n        maxDateTime: null,\n        estimate: null,\n        Datemenu: false,\n        exitDate: null,\n        dateFormatted: null,\n        exitDateTime: 0,\n        exitTimeInterval: null,\n        iosDevice: false,\n        invalidValidationQRDialog: false,\n        cameraStatus: false,\n        validationCameraStatus: false,\n        validatedDateTime: 0,\n        gracePeriodTime: 0,\n        validatedInterval: \"\",\n        duration: 300,\n        offset: 0,\n        pedestrianAccessDialog: false,\n        pedestrianAccessText: \"\",\n        easing: \"easeInOutCubic\",\n        pageHeight: window.outerHeight,\n        qrCodeDialog: false,\n        countUpTime: \"\",\n        interval: \"\",\n        isValid: undefined,\n        camera: \"auto\",\n        smsText: \"\",\n        smsDialog: false,\n        dialerDialog: false,\n        invalidQRMsg: \"\",\n        invalidValidationQRMsg: \"\",\n        invalidQRDialog: false,\n        invalidSMSMsg: \"\",\n\n        invalidSMSDialog: false,\n        smsPending: false,\n        validateBookingPending: false,\n        validateBookingDialog: false,\n        validateBookingTxt: \"\",\n        validateQRCodePending: false,\n        validateQRCodeDialog: false,\n    }),\n    computed: {\n        ...mapGetters({\n            bookingId: \"getterBookingId\",\n            bookingDetails: \"getterBookingDetails\",\n            zoneDetails: \"getterZoneDetails\",\n            entryTime: \"getterEntryTime\",\n            exitGateCodes: \"getterExitGateCodes\",\n            isPQREndReservation: \"getterZoneIsPQREndReservation\",\n\n        }),\n        logoHeight() {\n            return Object.hasOwnProperty.call(this.bookingDetails, 'booking') && Object.hasOwnProperty.call(this.bookingDetails.booking, 'TypeOfBooking') && this.bookingDetails.booking.TypeOfBooking == 'Self reservation' ? '100px' : '150px';\n        },\n        computedDateFormatted() {\n            return this.time !== null && this.time !== \"\" && this.time !== undefined ? format(this.time, 'yyyy/MM/dd') : new Date()\n        },\n        formattedTime() {\n            return this.time ? format(this.time, 'hh:mm aa') : \"\"\n        },\n        formattedDateTime() {\n            return this.time !== null && this.time !== \"\" ? format(this.time, 'iii, LLL dd') : \"\"\n        },\n        formattedYear() {\n            return this.time !== null && this.time !== \"\" ? format(this.time, 'yyyy') : \"\"\n        },\n        formattedEntryDisplayTime() {\n            return Object.hasOwnProperty.call(this.bookingDetails, 'booking') && Object.hasOwnProperty.call(this.bookingDetails.booking, 'entrytime') && this.bookingDetails.booking.entrytime !== null && this.bookingDetails.booking.entrytime !== undefined && this.bookingDetails.booking.entrytime !== \"\" ? format(new Date(this.formatExitDateTime(this.bookingDetails?.booking?.entrytime, 'date')), \"hh:mm a\") : format(dateToTimeZoneDate(new Date(), this.bookingDetails?.zone?.timezone), 'hh:mm a');\n        },\n        singleQuotes() {\n\n            return Object.hasOwnProperty.call(this.bookingDetails, 'zone') && Object.hasOwnProperty.call(this.bookingDetails.zone, 'timePickerConfiguration') && this.bookingDetails.zone.timePickerConfiguration == \"0\" ? ((this.time !== null && this.time !== undefined && this.time !== \"\" && this.minDate !== null && this.minDate !== undefined && this.minDate !== \"\" && format(this.time, 'yyyy-MM-dd') == format(this.minDate, 'yyyy-MM-dd')) || (this.beforeEstimate !== null && this.beforeEstimate !== undefined && this.beforeEstimate !== \"\" && this.estimate !== null && this.estimate !== undefined && this.estimate !== \"\" && this.beforeEstimate.grandTotal == this.estimate.grandTotal)) : true\n        },\n        doubleQuotes() {\n            return Object.hasOwnProperty.call(this.bookingDetails, 'zone') && Object.hasOwnProperty.call(this.bookingDetails.zone, 'timePickerConfiguration') && this.bookingDetails.zone.timePickerConfiguration == \"0\" ? ((this.time !== null && this.time !== undefined && this.time !== \"\" && this.minDate !== null && this.minDate !== undefined && this.minDate !== \"\" && format(this.time, 'yyyy-MM-dd') != format(this.minDate, 'yyyy-MM-dd')) && (this.beforeEstimate !== null && this.beforeEstimate !== undefined && this.beforeEstimate !== \"\" && this.estimate !== null && this.estimate !== undefined && this.estimate !== \"\" && this.beforeEstimate.grandTotal != this.estimate.grandTotal)) : false\n        },\n        disableLoyalty() {\n            let disabled = this.loyalty24knum === undefined || this.loyalty24knum === null || this.loyalty24knum == \"\"\n            return disabled\n        },\n        disableExtend() {\n            let disabled = (\n                this.time === null || this.time === \"\" || this.time === undefined || this.estimate === null || this.estimate === undefined || Object.keys(this.estimate).length === 0) || (this.bookingDetails?.zone?.timePickerConfiguration == '0' && (format(this.time, 'yyyy-MM-dd') == format(this.maxDate, 'yyyy-MM-dd')) ? true : false)\n            return disabled;\n        },\n        countDownExitTime() {\n            if (this.exitDateTime < 0) {\n                this.$store.commit(\"SET_VALIDATED_TIME_STATUS\", true);\n                clearInterval(this.exitTimeInterval);\n            }\n            return secondsToHms(this.exitDateTime / 1000 + 59);\n        },\n        countDownEstimateTime() {\n            if (this.exitDateTime < 0) {\n                this.$store.commit(\"SET_VALIDATED_TIME_STATUS\", true);\n                clearInterval(this.exitTimeInterval);\n            }\n            return secondsToHms(this.exitDateTime / 1000 + 59);\n        },\n        isExtra() {\n            return window.location.pathname.includes(\"/gx/\");\n        },\n        options() {\n            return {\n                duration: this.duration,\n                offset: this.offset,\n                easing: this.easing,\n            };\n        },\n        showPaymentCardAdded: function getCardStatus() {\n            var cardOnFile = this.bookingDetails?.booking?.cardOnfile\n                ? this.bookingDetails.booking.cardOnfile\n                : null;\n            var validatedState = this.bookingDetails?.booking?.validated\n                ? this.bookingDetails.booking.validated\n                : null;\n            var state =\n                cardOnFile == \"1\"\n                    ? true\n                    : cardOnFile == \"2\" &&\n                    validatedState == \"1\" &&\n                    this.validatedDateTime > 0;\n            return state;\n        },\n        timeAgo: function getTimeAgo() {\n            return this.countUpTime;\n        },\n        validationPending: function qrValidation() {\n            return this.isValid === undefined && this.camera === \"off\";\n        },\n        booking_content() {\n            let dateTime = formatDateTime(\n                Number(this.bookingDetails.booking.entrytime)\n            );\n            return dateTime[0] + \" on \" + dateTime[1] + \" \" + dateTime[2];\n        },\n        checkin_content() {\n            return this.formatExitDateTime(this.bookingDetails.booking.entrytime, 'checkin');\n        },\n        checkout_content() {\n            return 'Checkout before ' + this.formatExitDateTime(this.bookingDetails.booking.revEnd, 'expire')\n        },\n        validated_content() {\n            if (this.bookingDetails?.zone?.timezoneoffset) {\n                let dateTime = this.bookingDetails.booking.type == \"13\" ? formatDateTime(\n                    Number(this.bookingDetails.booking.revStart) +\n                    Number(this.bookingDetails.booking.couponValidTime)\n                ) : formatDateTime(\n                    Number(this.bookingDetails.booking.entrytime) +\n                    Number(this.bookingDetails.booking.couponValidTime)\n                );\n                return dateTime[0] + \", \" + dateTime[1] + \" \" + dateTime[2];\n            }\n            return \"\";\n        },\n        countDownValidatedTime() {\n            if (this.validatedDateTime < 0) {\n                this.$store.commit(\"SET_VALIDATED_TIME_STATUS\", true);\n                clearInterval(this.validatedInterval);\n            }\n            return this.secondsToHms(this.validatedDateTime / 1000 + 59);\n        },\n        countDownGracePeriodTime() {\n            if (this.gracePeriodTime < 0) {\n                this.$store.commit(\"SET_GRACE_PERIOD_TIME_STATUS\", true);\n                clearInterval(this.gracePeriodInterval);\n            }\n            //add 59 sec to graceperiod time to skip 0 min.\n            return this.secondsToHms(this.gracePeriodTime / 1000 + 59);\n        },\n        // gracePeriodCountDownTime,\n        // countDownValidationtime(){\n        //   return\n        // }\n    },\n    watch: {\n        time(newVal, oldVal) {\n            if (oldVal != null && newVal != null && oldVal != newVal && oldVal != \"\" && newVal != \"\" && (isValid(newVal))) {\n                this.bookingDetails?.zone?.timePickerConfiguration == '1' ? this.round(newVal) : set(newVal, { hour: 23, minutes: 59, seconds: 59 })\n            }\n        },\n    },\n    created() { },\n    mounted: function () {\n        EventBus.$on('SET_TIME', () => {\n            this.onTimePickerChange();\n        })\n        this.exitDateTime = this.calculateExitDateTime();\n        this.exitTimeInterval = setInterval(() => {\n            if (\n                this.bookingDetails?.zone?.timezone\n\n            ) {\n                this.exitDateTime = this.calculateExitDateTime();\n            }\n        }, 1000);\n        if (\n            this.entryTime != null &&\n            !this.bookingDetails?.booking?.exittime &&\n            this.bookingDetails?.zone?.timezone &&\n            this.bookingDetails?.booking?.gracePeriod\n        ) {\n            this.countUpTime = this.calculateParkingTime(\n                this.entryTime,\n                this.bookingDetails.booking.gracePeriod,\n                this.bookingDetails.zone.timezone\n            );\n        }\n        this.interval = setInterval(() => {\n            if (\n                this.entryTime != null &&\n                !this.bookingDetails?.booking?.exittime &&\n                this.bookingDetails?.zone?.timezone &&\n                this.bookingDetails?.booking?.gracePeriod\n            ) {\n                this.countUpTime = this.calculateParkingTime(\n                    this.entryTime,\n                    this.bookingDetails.booking.gracePeriod,\n                    this.bookingDetails.zone.timezone\n                );\n            }\n        }, 1000);\n        if (\n            this.bookingDetails?.booking?.exittime &&\n            this.bookingDetails.booking.exittime != null &&\n            this.bookingDetails.booking.exittime != \"\"\n        ) {\n            clearInterval(this.interval);\n        }\n        if (\n            this.bookingDetails?.booking?.validated &&\n            this.bookingDetails.booking.validated == \"1\" &&\n            this.bookingDetails?.booking?.validationType &&\n            this.bookingDetails.booking.validationType == \"DIVRT\"\n        ) {\n            this.validatedDateTime = this.calculateValidatedTime();\n        }\n\n        this.validatedInterval = setInterval(() => {\n            if (\n                this.bookingDetails?.zone?.timezone &&\n                this.bookingDetails?.booking?.validated &&\n                this.bookingDetails.booking.validated == \"1\" &&\n                this.bookingDetails?.booking?.validationType &&\n                this.bookingDetails.booking.validationType == \"DIVRT\"\n            ) {\n                this.validatedDateTime = this.calculateValidatedTime();\n            }\n        }, 1000);\n        if (\n            this.bookingDetails?.booking?.validated &&\n            this.bookingDetails.booking.validated == \"1\" &&\n            this.bookingDetails?.booking?.validationType &&\n            this.bookingDetails.booking.validationType == \"DIVRT\"\n        ) {\n            if (this.validatedDateTime < 0) {\n                this.$store.commit(\"SET_VALIDATED_TIME_STATUS\", true);\n                clearInterval(this.validatedInterval);\n            }\n        }\n\n        if (this.bookingDetails?.booking?.gracePeriod > 0) {\n            this.gracePeriodTime = this.calculateGracePeriodTime();\n        }\n\n        this.gracePeriodInterval = setInterval(() => {\n            if (this.bookingDetails?.zone?.timezone) {\n                this.gracePeriodTime = this.calculateGracePeriodTime();\n            }\n        }, 1000);\n        if (this.bookingDetails?.booking?.gracePeriod > 0) {\n            if (this.gracePeriodTime < 0) {\n                this.$store.commit(\"SET_GRACE_PERIOD_TIME_STATUS\", true);\n                clearInterval(this.gracePeriodInterval);\n            }\n        }\n        EventBus.$on(\"sms-qr-result\", (result) => {\n            this.onDecode(result);\n        });\n        EventBus.$on(\"validation-qr-result\", (result) => {\n            this.onValidateQRCode(result);\n        });\n\n        // if(this.bookingDetails?.zone?.isPedestrian=='1'){\n        //   this.pedestrianAccess=true\n        // }\n    },\n    destroyed() {\n        clearInterval(this.interval);\n        clearInterval(this.validatedInterval);\n        clearInterval(this.gracePeriodInterval);\n    },\n    beforeRouteEnter(to, from, next) {\n        next(async (vm) => {\n            vm.getMobileOperatingSystem() === 'iOS' ? vm.iosDevice = true : vm.iosDevice = false;\n            if (\n                vm.bookingDetails?.booking?.exittime &&\n                vm.bookingDetails.booking.exittime != null &&\n                vm.bookingDetails.booking.exittime != \"\"\n            ) {\n                clearInterval(vm.interval);\n            }\n            if (vm.bookingDetails?.booking?.validated == \"0\") {\n                if (vm.validatedDateTime < 0) {\n                    vm.$store.commit(\"SET_VALIDATED_TIME_STATUS\", true);\n                    clearInterval(vm.validatedInterval);\n                }\n            }\n        });\n    },\n    methods: {\n        formatExitDateTime(time, val) {\n            if (time !== null && time !== undefined && time != '') {\n                let utcDate = new Date(time * 1000).toUTCString(); //\"Wed, 27 Jan 2021 13:59:04 GMT\"\n                let month = utcDate.split(\",\")[1].split(\" \")[2]; // Jan\n                let date = utcDate.split(\",\")[1].split(\" \")[1]; // 27\n                let year = utcDate.split(\",\")[1].split(\" \")[3];\n                let hr = utcDate.split(\",\")[1].split(\" \")[4].split(\":\")[0]; // 13\n                let min = utcDate.split(\",\")[1].split(\" \")[4].split(\":\")[1]; //59\n                let formatHr = Number(hr) > 12 ? Number(hr) - 12 : Number(hr); // 1\n                formatHr = Number(hr) == 0 ? 12 : formatHr;\n\n                formatHr = Number(formatHr) >= 10 ? Number(formatHr) : '0' + formatHr; //01\n                let amOrpm = Number(hr) >= 12 ? \"p\" : \"a\"; //PM\n                let ampm = Number(hr) >= 12 ? \"PM\" : \"AM\";\n                switch (val) {\n                    case 'hour': {\n                        return formatHr + amOrpm;\n                    }\n                    case 'mins': {\n                        return min\n                    }\n                    case 'date': {\n                        return month + \" \" + date + \", \" + year + \" \" + formatHr + \":\" + min + \" \" + ampm;\n                    }\n                    case 'expire': {\n                        return formatHr + \":\" + min + \" \" + ampm + ' on ' + month + \" \" + date\n                    }\n                    case 'checkin': {\n                        return formatHr + \":\" + min + \" \" + ampm + ' on ' + month + \" \" + date\n                    }\n                }\n            }\n            //Jan 27, 01:59 PM\n        },\n        round(time) {\n            let exitdate = time !== null && time !== '' ? format(time, 'yyyy/MM/dd') : new Date();\n            let selectedMins = time !== null && time !== '' ? format(time, 'mm') : new Date();\n            let selectedHours = time !== null && time !== '' ? format(time, 'hh') : new Date();\n            let selectedAMPM = time !== null && time !== '' ? format(time, 'a') : new Date();\n            if (exitdate != null && selectedMins != '15' && selectedMins != '30' && selectedMins != '45' && selectedMins != '00' && selectedMins != null && selectedMins != \"\" && selectedHours != null && selectedHours != \"\" && selectedAMPM != null && selectedAMPM != \"\") {\n                let intervalMilliseconds = 900000\n                let datetime = new Date(exitdate + \" \" + selectedHours + \":\" + selectedMins + \" \" + selectedAMPM)\n                let interval = datetime.getTime() % intervalMilliseconds;\n                let delta = interval === 0 ? 0 : datetime.getTime() - interval;\n                delta += intervalMilliseconds;\n                // this.exitTimeSelected = Object.assign(this.exitTimeSelected, { hh: format(new Date(delta), 'hh'), mm: format(new Date(delta), 'mm'), a: format(new Date(delta), 'a'), })\n                return new Date(delta)\n            }\n        },\n        loyaltyValid() {\n            if (!(/^[a-z0-9]+$/i).test(this.loyalty24knum)) {\n                this.loyalty24knum = this.loyalty24knum.replace(/[^\\w\\s]/gi, '')\n            }\n        },\n        async submitLoyalty(code) {\n            try {\n                this.validateBookingPending = true;\n                let result = await this.validateBooking(code);\n                if (!result.data.status) {\n                    this.invalidSMSMsg = result?.data?.message\n                        ? result.data.message\n                        : \"Validation not recognized. Please try again\";\n                    this.invalidSMSDialog = true;\n                    this.validateBookingPending = false;\n                    this.postToLoggerAPI({\n                        phone: this.bookingDetails.user.contact,\n                        refId: this.bookingId,\n                        error: this.invalidSMSMsg,\n                        icon: \"redeem\",\n                        statusText:\n                            \"Error in validating the session on entering validation code - \" +\n                            this.validateBookingTxt,\n                    });\n                } else {\n                    this.postToLoggerAPI({\n                        phone: this.bookingDetails.user.contact,\n                        refId: this.bookingId,\n                        icon: \"redeem\",\n                        statusText:\n                            \"Parker validated the session successfully by entering validation code - \" +\n                            this.validateBookingTxt,\n                    });\n                    this.validateBookingPending = false;\n                    this.validateBookingDialog = false;\n                    this.$store.commit(\n                        \"SET_VALIDATED_MERCHANT\",\n                        result?.data?.merchantName\n                    );\n                    this.$router.replace({ path: \"/validatesuccess\" });\n                }\n            } catch (error) {\n                console.log(error);\n                this.validateBookingPending = false;\n            }\n        },\n        closeAlertDialog() {\n            this.alertDialog = false;\n\n        },\n        getPaymentType(type) {\n            switch (type) {\n                case 'APPLE_PAY': {\n                    return 'Apple Pay';\n                }\n                case 'GOOGLE_PAY': {\n                    return 'Google Pay'\n                }\n                case 'Card': {\n                    return 'Card'\n                }\n            }\n        },\n\n        /** @methods to find the the UTC date \n    @params the bookings date value , type 'exit (2023-12-02)' or 'formatdate (12/02/2023)'\n    */\n        formatUTCDefaultDate(defaultDate, type) {\n            let utcDate = new Date(defaultDate * 1000).toUTCString();\n            let month = utcDate.split(\",\")[1].split(\" \")[2]; // Jan\n            let date = utcDate.split(\",\")[1].split(\" \")[1]; // 27\n            let year = utcDate.split(\",\")[1].split(\" \")[3]; //2023\n            let exitformat = format(new Date(month + \" \" + date + \" \" + year), 'yyyy-MM-dd');\n            let dateformat = format(new Date(month + \" \" + date + \" \" + year), \"MM/dd/yyyy\");\n            return type === \"exit\" ? exitformat : dateformat;\n\n        },\n        async extendEDT() {\n            try {\n                //format(new Date(this.checkinDate), \"yyyy-MM-dd'T'HH:mm:ss\");\n                this.extendBtnLoading = true;\n                let timeconfig = format(this.time, 'yyyy/MM/dd') + \" \" + \"11:59 PM\";\n                let time = this.bookingDetails?.zone?.timePickerConfiguration == '0' ? new Date(timeconfig) : this.time\n                let exitDateTime = time != null || time !== undefined || time != \"\" ?\n                    format(time, 'yyyy/MM/dd')\n                    +\n                    \" \" +\n                    format(time, 'hh:mm a') : new Date();\n                let data = {\n                    bid: this.bookingDetails?.booking?.bid,\n                    extendedTime: format(new Date(exitDateTime), \"yyyy-MM-dd HH:mm:ss\")//\"2022-12-29T02:26:00.000\",\n                };\n                var extendSessionRes = await APIHelper(\n                    \"POST\",\n                    \"/api/v1/prepaid/extendReservation\", data\n                );\n                if (extendSessionRes?.data?.message == \"Successfully updated!!\") {\n                    await this.getBookingDetails();\n                    this.extendBtnLoading = false;\n                    this.extensionDialog = false;\n                } else {\n                    this.alertDialog = true;\n                    this.alertMsg = extendSessionRes?.data?.message || \"Error in extending the session\"\n                }\n\n            } catch (error) {\n                this.extendBtnLoading = false;\n                console.log(error);\n            }\n        },\n        formatDate(date) {\n            let stringdate = date.toString();\n            if (!date) return null;\n\n            const [year, month, day] = stringdate.split(\"-\");\n            return `${month}/${day}/${year}`;\n        },\n        parseDate(date) {\n            if (!date) return null;\n\n            const [month, day, year] = date.split(\"/\");\n            return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\n        },\n        async openExtDialog() {\n\n            // await axios.get(\n            //   process.env.VUE_APP_ON_DEMAND_URL + \"/\" + \"32899\"+ \".json\"\n            // );\n            this.setDefaultDate();\n            this.setDatePicker();\n            // this.setTimePicker();\n            this.extensionDialog = true;\n            this.extendBtnLoading = false;\n        },\n\n        setDefaultDate() {\n            //formatted exit date value to display\n            this.dateFormatted =\n                this.bookingDetails?.booking?.reservationEndDate ? this.formatUTCDefaultDate(this.bookingDetails?.booking?.revEnd\n                    , 'format') : \"\";\n            this.time = new Date(this.formatExitDateTime(this.bookingDetails?.booking?.revEnd, 'date'))\n            this.exitDate = this.time;\n            let fifteenTime = this.time;\n\n            this.time = format(this.time, 'mm') == '15' || format(this.time, 'mm') == '30' || format(this.time, 'mm') == '45' || format(this.time, 'mm') == '00' ? fifteenTime : this.bookingDetails?.zone?.timePickerConfiguration == '1' ? this.round(this.time) : set(this.time, { hour: 23, minutes: 59, seconds: 59 });\n            // this.dateTimeChange()\n            // Object.hasOwnProperty.call(this.bookingDetails.booking, 'isGated') && this.bookingDetails.booking?.isGated == \"1\" && format(this.time, 'yyyy-MM-dd') != format(dateToTimeZoneDate(new Date(), this.bookingDetails?.zone?.timezone), 'yyyy-MM-dd') ? this.beforeDateTimeChange() : \"\";\n\n        },\n        onTimePickerChange() {\n            let exitdate = this.time !== null && this.time !== undefined && this.time !== \"\" ? format(this.time, 'yyyy/MM/dd') : \"\";\n            let selectedMins = this.time !== null && this.time !== undefined && this.time !== \"\" ? format(this.time, 'mm') : \"\";\n            let selectedHours = this.time !== null && this.time !== undefined && this.time !== \"\" ? format(this.time, 'HH') : \"\";\n            let selectedAMPM = this.time !== null && this.time !== undefined && this.time !== \"\" ? format(this.time, 'a') : \"\";\n            this.stopTime = selectedMins != null && selectedMins != \"\" && selectedHours != null && selectedHours != \"\" && selectedAMPM != null && selectedAMPM != \"\" ? selectedHours + \":\" + selectedMins + \":\" + \"00\" : \"\";\n            let currenTime = this.bookingDetails.zone.timezone\n                ? format(\n                    dateToTimeZoneDate(new Date(),\n                        this.bookingDetails.zone.timezone\n                    ),\n                    \"yyyy-MM-dd HH:mm:ss\"\n                )\n                : format(new Date(), \"yyyy-MM-dd  HH:mm:ss\");\n            if (\n                selectedMins != null && selectedMins != \"\" && selectedHours != null && selectedHours != \"\" && selectedAMPM != null && selectedAMPM != \"\" &&\n                new Date(exitdate + \" \" + this.stopTime).getTime() >\n                new Date(currenTime).getTime()\n            ) {\n                format(this.time, 'yyyy-MM-dd') != format(this.minDate, 'yyyy-MM-dd') ? this.beforeDateTimeChange() : \"\";\n                this.dateTimeChange();\n            }\n        },\n        setDatePicker() {\n            //set the minimum date to today date(zone time zone date)\n            this.minDate = this.bookingDetails.zone.timezone\n                ?\n                new Date(this.formatExitDateTime(this.bookingDetails?.booking?.revEnd, 'date'))\n                :\n                dateToTimeZoneDate(\n                    new Date(Number(this.bookingDetails?.booking?.revEnd) * 1000 - Number(this.bookingDetails.zone.timezoneoffset) * 1000)\n                    , this.bookingDetails.zone.timezone\n                );\n            //calculate max parkign time in seconds\n            let maxPark = this.bookingDetails != null ? this.bookingDetails?.zone?.maxParkingTime : null;\n\n            let addeddays = addDays(new Date(), maxPark?.days);\n            let addedhours = addHours(addeddays, maxPark?.hours);\n            let addedmins = addMinutes(addedhours, maxPark?.minutes);\n            //get max date in seconds based on max parking time\n            let maxZoneDate = addedmins;\n            this.maxDate = this.bookingDetails?.zone.timezone\n                ?\n                dateToTimeZoneDate(\n                    maxZoneDate,\n                    this.bookingDetails?.zone?.timezone\n                )\n                : new Date(maxZoneDate);\n            //get max date with time and set it to maxDateTime\n            this.maxDateTime = this.bookingDetails?.zone?.timezone\n                ? format(\n                    dateToTimeZoneDate(\n                        new Date(maxZoneDate),\n                        this.bookingDetails?.zone?.timezone\n                    ),\n                    \"yyyy-MM-dd hh:mm aaaaa\"\n                )\n                : format(new Date(), \"yyyy-MM-dd hh:mm aaaaa\");\n        },\n        // onOpen() {\n        //   this.setTimePicker(this.exitTimeSelected);\n        // },\n        /** @methods to find the estimate rate \n       @params startDate , stopDate,zcode, type , env_overRide\n       */\n        async beforeDateTimeChange() {\n            if (!this.bookingDetails.zone.zcode) {\n                return\n            }\n            try {\n                // format(new Date(this.checkinDate), \"yyyy-MM-dd'T'HH:mm:ss\");\n\n                let edtEntryTime = this.bookingDetails?.booking?.entrytime\n                this.startDate = edtEntryTime !== null && edtEntryTime !== undefined && edtEntryTime !== \"\" ? format(new Date(this.formatExitDateTime(edtEntryTime, 'date')), \"yyyy-MM-dd'T'HH:mm:ss\") : this.bookingDetails.zone.timezone\n                    ? format(\n                        dateToTimeZoneDate(\n                            new Date(),\n                            this.bookingDetails.zone.timezone\n                        ),\n                        \"yyyy-MM-dd'T'HH:mm:ss\"\n                    )\n                    : format(new Date(), \"yyyy-MM-dd'T'HH:mm:ss\");\n                let stopTime = this.stopTime\n                let selectedHours = this.bookingDetails.booking.entrytime != null && this.bookingDetails.booking.entrytime !== undefined && this.bookingDetails.booking.entrytime != \"\" ? format(new Date(this.formatExitDateTime(this.bookingDetails?.booking?.entrytime, 'date')), \"HH\") : format(dateToTimeZoneDate(new Date(), this.bookingDetails.zone.timezone), 'HH');\n                let selectedMins = this.bookingDetails.booking.entrytime != null && this.bookingDetails.booking.entrytime !== undefined && this.bookingDetails.booking.entrytime != \"\" ? format(new Date(this.formatExitDateTime(this.bookingDetails?.booking?.entrytime, 'date')), \"mm\") : format(dateToTimeZoneDate(new Date(), this.bookingDetails.zone.timezone), 'mm');\n                let exittime = Object.hasOwnProperty.call(this.bookingDetails, 'zone') && Object.hasOwnProperty.call(this.bookingDetails.zone, 'timePickerConfiguration') && this.bookingDetails.zone.timePickerConfiguration == '1' ? 'T' + stopTime : 'T' + selectedHours + \":\" + selectedMins + \":00\";\n                let exitdate = format(this.time, 'yyyy-MM-dd');\n                let stopDate = exitdate + exittime;\n                let data = {\n                    startAt: this.startDate,\n                    stopAt: stopDate,\n                    zcode: this.bookingDetails.zone.zcode,\n                };\n                this.addPaymentBtnLoading = true;\n                var getRate = await APIHelper(\"POST\", \"/api/v2/getRate\", data);\n                //condition to check if the date time selected is lesser than current time\n                if (!getRate?.data?.status && !this.getRateCall) {\n                    this.disableAddPaymentBtn = true;\n                    this.alertDialog = true;\n                    this.alertMsg =\n                        getRate?.data?.message || \"Error in getting rate details\";\n                    this.openDatePicker = false;\n                    this.openTimePicker = false;\n                } else {\n                    this.disableAddPaymentBtn = false;\n                    this.openDatePicker = false;\n                    this.openTimePicker = false;\n                }\n                this.beforeEstimate = Object.assign({}, getRate?.data?.data);\n                // estimatedVal != \"\" &&\n                // estimatedVal != null &&\n                // estimatedVal != undefined\n                //   ? Number(estimatedVal).toFixed(2)\n                //   : estimatedVal;\n                this.addPaymentBtnLoading = false;\n            }\n            catch (error) {\n                this.addPaymentBtnLoading = false;\n                console.log(error);\n            }\n        },\n        async dateTimeChange() {\n            if (!this.bookingDetails.zone.zcode) {\n                return\n            }\n            this.extendBtnLoading = true;\n\n            try {\n                // format(new Date(this.checkinDate), \"yyyy-MM-dd'T'HH:mm:ss\");\n                let edtEntryTime = this.bookingDetails?.booking?.entrytime\n                this.startDate = edtEntryTime !== null && edtEntryTime !== undefined && edtEntryTime !== \"\" ? format(new Date(this.formatExitDateTime(edtEntryTime, 'date')), \"yyyy-MM-dd'T'HH:mm:ss\") : this.bookingDetails.zone.timezone\n                    ? format(\n                        dateToTimeZoneDate(\n                            new Date(),\n                            this.bookingDetails.zone.timezone\n                        ),\n                        \"yyyy-MM-dd'T'HH:mm:ss\"\n                    )\n                    : format(dateToTimeZoneDate(new Date(), this.bookingDetails.zone.timezone), \"yyyy-MM-dd'T'HH:mm:ss\");\n                // console.log(this.exitTimeSelected?.hh+\":\"+this.exitTimeSelected.mm+\":00\")\n                // this.exitDate + \"T23:59:00\";\n                let selectedHours = this.time !== null && this.time !== \"\" && this.time !== undefined ? format(this.time, 'HH') : format(dateToTimeZoneDate(new Date(), this.bookingDetails.zone.timezone), 'HH')\n                let selectedMins = this.time !== null && this.time !== \"\" && this.time !== undefined ? format(this.time, 'mm') : format(dateToTimeZoneDate(new Date(), this.bookingDetails.zone.timezone), 'mm')\n                let exitdate = this.time !== null && this.time !== \"\" && this.time !== undefined ? format(this.time, 'yyyy-MM-dd') : \"\";\n                let exittime = Object.hasOwnProperty.call(this.bookingDetails, 'zone') && Object.hasOwnProperty.call(this.bookingDetails.zone, 'timePickerConfiguration') && this.bookingDetails?.zone?.timePickerConfiguration == '1' ? 'T' + selectedHours + \":\" + selectedMins + \":00\" : \"T23:59:00\"\n                let stopDate = exitdate + exittime;\n\n                let data = {\n                    startAt: this.startDate,\n                    stopAt: stopDate,\n                    zcode: this.bookingDetails?.zone?.zcode,\n                };\n                this.addPaymentBtnLoading = true;\n                var getRate = await APIHelper(\"POST\", \"/api/v2/getRate\", data);\n                this.extendBtnLoading = false;\n                this.extDateAndTime = stopDate;\n                //condition to check if the date time selected is lesser than current time\n                if (!getRate?.data?.status && !this.getRateCall) {\n                    this.disableAddPaymentBtn = true;\n                    this.alertDialog = true;\n                    this.alertMsg =\n                        getRate?.data?.message || \"Error in getting rate details\";\n                    this.openDatePicker = false;\n                    this.openTimePicker = false;\n                    EventBus.$emit('datetime-set');\n                } else {\n                    this.disableAddPaymentBtn = false;\n                    this.openDatePicker = false;\n                    this.openTimePicker = false;\n                    EventBus.$emit('datetime-set');\n                }\n                this.estimate = Object.assign({}, getRate?.data?.data);\n                // estimatedVal != \"\" &&\n                // estimatedVal != null &&\n                // estimatedVal != undefined\n                //   ? Number(estimatedVal).toFixed(2)\n                //   : estimatedVal;\n                this.addPaymentBtnLoading = false;\n            }\n            catch (error) {\n                this.addPaymentBtnLoading = false;\n                console.log(error);\n            }\n        },\n        calculateExitDateTime() {\n            if (this.bookingDetails?.zone?.timezone) {\n                //   var currentTime =\n                // new Date().getTime() +\n                // (Number(this.bookingDetails.zone.timezoneoffset) * 1000 +\n                //   Number(this.bookingDetails.zone.timezonedstoffset) * 1000);\n                var currentTime =\n                    new Date().getTime() +\n                    (Number(this.bookingDetails.zone.timezoneoffset) * 1000 +\n                        Number(this.bookingDetails.zone.timezonedstoffset) * 1000);\n                var exitTime =\n                    new Date(this.bookingDetails.booking.reservationEndDate).getTime();\n                this.$store.commit(\"SET_EXIT_TIME_TIME_STATUS\", this.exitDateTime < 0);\n                exitTime - currentTime < 0\n                    ? clearInterval(this.exitInterval)\n                    : \"\";\n                return exitTime - currentTime;\n            }\n            return 0\n\n        },\n        hotelGuest() {\n            let url = window.location.origin + '?zcode=' + this.bookingDetails?.zone?.locationCode + '#/createsession';\n            let plate = this.bookingDetails?.booking?.vehicleNo || \"\";\n            let phone = this.bookingDetails?.user?.contact || \"\";\n            let bid = this.bookingDetails?.booking?.bid || \"\";\n            let checkindate = this.bookingDetails?.booking?.entrytime || \"\";\n            let params = '/?phone=' + phone + '&bid=' + bid + '&plate=' + plate + '&entrytime=' + checkindate;\n            window.location.replace(url + params);\n            // this.$router.replace({path:'/'});\n\n        },\n        closeQRCodeDialog() {\n            this.qrCodeDialog = false;\n            this.cameraStatus = false;\n        },\n        closeValidationQRDialog() {\n            this.validationCameraStatus = false;\n            this.validateBookingDialog = true;\n            this.validateQRCodeDialog = false;\n        },\n        reScanQR() {\n            this.invalidQRDialog = false;\n            this.cameraStatus = true;\n        },\n        reScanValidationQR() {\n            this.invalidValidationQRDialog = false;\n            this.validationCameraStatus = true;\n        },\n        openSmsQrScanner() {\n            this.qrCodeDialog = true;\n            this.cameraStatus = true;\n        },\n        openSMSDialog() {\n            this.smsDialog = true;\n            let exitLanes =\n                this.exitGateCodes.length > 0\n                    ? this.exitGateCodes.filter((a) => a.isPedestrian == \"0\")\n                    : [];\n            if (\n                this.bookingDetails?.booking?.prePopulateGateCodes &&\n                this.bookingDetails.booking.prePopulateGateCodes == \"1\"\n            ) {\n                this.smsText = exitLanes.length == 1 ? exitLanes[0].sms_code : \"\";\n            }\n        },\n        scrollToSubmit() {\n            const el = document.querySelector(\"#submitsmsbtn\");\n            if (el) {\n                el.scrollIntoView(this.options);\n            }\n        },\n        scrollToValidateBtn() {\n            const el = document.querySelector(\"#validatebookingbtn\");\n            if (el) {\n                el.scrollIntoView(this.options);\n            }\n        },\n        calculateGracePeriodTime() {\n            var currentTime =\n                new Date().getTime() +\n                (Number(this.bookingDetails.zone.timezoneoffset) * 1000 +\n                    Number(this.bookingDetails.zone.timezonedstoffset) * 1000);\n            var gracePeriodTime =\n                (Number(this.bookingDetails.booking.entrytime) +\n                    Number(this.bookingDetails.booking.gracePeriod)) *\n                1000; //\n            this.$store.commit(\n                \"SET_GRACE_PERIOD_TIME_STATUS\",\n                this.gracePeriodTime <= 0\n            );\n            return gracePeriodTime - currentTime;\n        },\n        calculateValidatedTime() {\n            var currentTime =\n                new Date().getTime() +\n                (Number(this.bookingDetails.zone.timezoneoffset) * 1000 +\n                    Number(this.bookingDetails.zone.timezonedstoffset) * 1000);\n            var validatedTime = this.bookingDetails.booking.type == \"13\" ?\n                (Number(this.bookingDetails.booking.revStart) +\n                    Number(this.bookingDetails.booking.couponValidTime)) *\n                1000 : (Number(this.bookingDetails.booking.entrytime) +\n                    Number(this.bookingDetails.booking.couponValidTime)) *\n                1000\n            this.$store.commit(\"SET_VALIDATED_TIME_STATUS\", this.validatedTime < 0);\n            validatedTime - currentTime < 0\n                ? clearInterval(this.validatedInterval)\n                : \"\";\n            return validatedTime - currentTime;\n        },\n        calculateParkingTime(parkingStartTime, gracePeriod, zone) {\n            var currentTime = new Date();\n            currentTime.toLocaleString(\"en-US\", { timeZone: zone });\n            var differenceTime =\n                gracePeriod > 0\n                    ? currentTime.getTime() - parkingStartTime * 1000 // - gracePeriod * 1000 to exclude grace period\n                    : currentTime.getTime() - parkingStartTime * 1000;\n            let parkedTime = this.secondsToHms(differenceTime / 1000);\n            return parkedTime;\n        },\n        secondsToHms(timeDifference) {\n            var d = Number(timeDifference);\n            // if (timeDifference >= 86400) {\n            //   var days = Math.floor(d / 86400);\n            //   var hrs = Math.floor((d % 86400) / 3600);\n            //   var dayDisplay =\n            //     days > 0 ? days + (days == 1 ? \" day \" : \" days \") : \"\";\n            //   var hrDisplay = hrs > 0 ? hrs + (hrs == 1 ? \" hr \" : \" hrs \") : \"\";\n            //   return dayDisplay + hrDisplay;\n            // }\n            var h = Math.floor(d / 3600);\n            var m = Math.floor((d % 3600) / 60);\n            // var s = Math.floor(d % 3600 % 60);\n            var hDisplay = h > 0 ? h + \" h \" : \"\";\n            var mDisplay = m > 0 ? m + (m == 1 ? \" min \" : \" min\") : \" 0 min\";\n            // var sDisplay = s > 0 ? s + (s == 1 ? \" second\" : \" seconds\") : \"\";\n            return hDisplay + mDisplay;\n        },\n        isCheckoutEnabled(type) {\n            if (Object.hasOwnProperty.call(this.bookingDetails, 'exitOptions') && this.bookingDetails.exitOptions.length != 0) {\n                let option = this.bookingDetails.exitOptions.some(\n                    (t) => t.techType == type\n                );\n                return option;\n            }\n            return false;\n\n        },\n        async getBookingDetails() {\n            try {\n                let bookingId = window.location.pathname.substring(3);\n                var bookingDetails = await APIHelper(\n                    \"GET\",\n                    \"/api/v1/booking/config/\" + bookingId\n                );\n                this.$store.commit(\n                    \"SET_BOOKING_DETAILS\",\n                    bookingDetails.data?.data ? bookingDetails.data.data : null\n                );\n            } catch (error) {\n                console.log(error);\n            }\n        },\n        async getpedestrianAccess() {\n            try {\n                // let bookingId = window.location.pathname.substring(3);\n                var pedesAccess = await APIHelper(\n                    \"POST\",\n                    \"api/v1/open/\" + this.bookingId,\n                    { source: \"webView\" }\n                );\n                // console.log(pedesAccess)\n                // console.log(pedesAccess?.data?.status)\n                if (pedesAccess?.data?.status) {\n                    this.postToLoggerAPI({\n                        phone: this.bookingDetails.user.contact,\n                        refId: this.bookingId,\n                        image: \"https://sppl-dev.divrt.co/img/pedestrain_door.042f0927.png\",\n                        statusText: \"Parker accessed pedestrian door successfully.\",\n                    });\n                    this.$router.replace({ path: \"/pedestrianaccess\" });\n                } else {\n                    this.pedestrianAccessText = pedesAccess.data.message;\n                    this.postToLoggerAPI({\n                        phone: this.bookingDetails.user.contact,\n                        refId: this.bookingId,\n                        error: this.pedestrianAccessText,\n                        image: \"https://sppl-dev.divrt.co/img/pedestrain_door.042f0927.png\",\n                        statusText: \"Error in opening the pedestrian door.\",\n                    });\n                    this.pedestrianAccessDialog = true;\n                }\n            } catch (error) {\n                console.log(error);\n            }\n            // this.$router.replace({ path: \"/pedestrianaccess/\"+true });\n        },\n        navigateToAddPayment() {\n            this.postToLoggerAPI({\n                phone: this.bookingDetails.user.contact,\n                refId: this.bookingId,\n                statusText: \"Parker clicked on ADD CREDIT CARD btn.\",\n            });\n            this.$router.replace({ path: \"/addpayment\" });\n        },\n        openValidationDialog() {\n            this.validateBookingDialog = true;\n        },\n        async openSMSApp() {\n            this.postToLoggerAPI({\n                phone: this.bookingDetails.user.contact,\n                refId: this.bookingId,\n                statusText: \"Parker clicked on SMS submit btn.\",\n            });\n            if (this.smsText == null || this.smsText == \"\") {\n                this.invalidSMSMsg = \"Gate code cannot be empty\";\n                this.invalidSMSDialog = true;\n            } else {\n                try {\n                    this.smsPending = true;\n                    var preValidateSendSMS = await APIHelper(\"POST\", \"/receive_sms\", {\n                        bid: this.bookingId,\n                        From: this.bookingDetails.user.contact,\n                        Text: this.smsText,\n                        To: this.bookingDetails.zone.ToMobileNo,\n                        Mode: \"SMS\",\n                        webView: \"1\",\n                        preValidate: 1,\n                    });\n                    this.smsPending = false;\n                    if (\n                        preValidateSendSMS?.data?.status &&\n                        preValidateSendSMS.data.status\n                    ) {\n                        this.smsDialog = false;\n                        this.$router.replace({ path: \"/success\" });\n                        try {\n                            var sendSMS = await APIHelper(\"POST\", \"/receive_sms\", {\n                                bid: this.bookingId,\n                                From: this.bookingDetails.user.contact,\n                                Text: this.smsText,\n                                To: this.bookingDetails.zone.ToMobileNo,\n                                Mode: \"SMS\",\n                                webView: \"1\",\n                            });\n                            if (sendSMS?.data?.status && sendSMS.data.status) {\n                                this.smsDialog = false;\n                                this.postToLoggerAPI({\n                                    phone: this.bookingDetails.user.contact,\n                                    refId: this.bookingId,\n                                    icon: \"logout\",\n                                    statusText:\n                                        \"Parker checked out successfully using SMS - \" +\n                                        this.smsText,\n                                });\n                            } else {\n                                this.invalidSMSMsg = sendSMS?.data?.message\n                                    ? sendSMS.data.message\n                                    : \"Please try again\";\n                                this.invalidSMSDialog = true;\n                                this.postToLoggerAPI({\n                                    phone: this.bookingDetails.user.contact,\n                                    refId: this.bookingId,\n                                    error: this.invalidSMSMsg,\n                                    icon: \"logout\",\n                                    statusText:\n                                        \"Error occured while checking out using SMS - \" +\n                                        this.smsText,\n                                });\n                            }\n                        } catch (error) {\n                            console.log(error);\n                        }\n                    } else {\n                        this.invalidSMSMsg = preValidateSendSMS?.data?.message\n                            ? preValidateSendSMS.data.message\n                            : \"Please try again\";\n                        this.invalidSMSDialog = true;\n                        this.postToLoggerAPI({\n                            phone: this.bookingDetails.user.contact,\n                            refId: this.bookingId,\n                            error: this.invalidSMSMsg,\n                            icon: \"logout\",\n                            statusText:\n                                \"Error occured while checking out using SMS - \" + this.smsText,\n                        });\n                    }\n                } catch (error) {\n                    console.log(error);\n                }\n            }\n        },\n        getMobileOperatingSystem() {\n            var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n            // Windows Phone must come first because its UA also contains \"Android\"\n            if (/windows phone/i.test(userAgent)) {\n                return \"Windows Phone\";\n            }\n\n            if (/android/i.test(userAgent)) {\n                return \"Android\";\n            }\n\n            // iOS detection from: http://stackoverflow.com/a/9039885/177710\n            if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\n                return \"iOS\";\n            }\n            return \"unknown\";\n        },\n        getExitIcon(exitId) {\n            let exitDetails = this.bookingDetails.exitOptions.find(\n                (p) => p.techType == exitId\n            );\n            return exitDetails.icon;\n        },\n        getExitText(exitId) {\n            let exitDetails = this.bookingDetails.exitOptions.find(\n                (p) => p.techType == exitId\n            );\n            return exitDetails.name;\n        },\n        openDialerApp() {\n            this.postToLoggerAPI({\n                phone: this.bookingDetails.user.contact,\n                refId: this.bookingId,\n                statusText: \"Parker clicked on dialer submit btn.\",\n            });\n            this.dialerDialog = false;\n            var url = \"tel:\" + this.bookingDetails.zone.ToMobileNo;\n            window.location.href = url;\n            if (this.getMobileOperatingSystem() == \"Android\") {\n                window.close();\n            }\n        },\n        turnCameraOn() {\n            this.camera = \"auto\";\n        },\n\n        turnCameraOff() {\n            this.camera = \"off\";\n        },\n        validateDecodedString(str) {\n            let validateDivrtStr = str.startsWith(\"divrt://\");\n            let validateMMID = str.split(\"/\")[2] == this.bookingDetails.booking.mmid;\n            let validateMajorId =\n                str.split(\"/\")[3] == this.bookingDetails.booking.majorid;\n            let validateMinorId = this.bookingDetails.booking.minor_ids.includes(\n                str.split(\"/\")[4]\n            );\n            return (\n                validateDivrtStr && validateMMID && validateMajorId && validateMinorId\n            );\n        },\n        async onDecode(decodedString) {\n            var self = this;\n            this.qrCode = decodedString;\n            this.cameraStatus = false;\n            try {\n                var preValidateQrResult = await APIHelper(\n                    \"POST\",\n                    \"/api/v1/checkout/\" + this.bookingId,\n                    {\n                        beaconId: decodedString,\n                        preValidate: 1,\n                        zid: this.bookingDetails.zone.locationCode\n                    }\n                );\n                if (preValidateQrResult.data.status) {\n                    try {\n                        self.$router.replace({ path: \"/success\" });\n                        var qrResult = await APIHelper(\n                            \"POST\",\n                            \"/api/v1/checkout/\" + this.bookingId,\n                            {\n                                beaconId: decodedString,\n                                zid: this.bookingDetails.zone.locationCode\n                            }\n                        );\n                        if (qrResult.data.status) {\n                            this.postToLoggerAPI({\n                                phone: self.bookingDetails.user.contact,\n                                refId: self.bookingId,\n                                icon: \"logout\",\n                                statusText:\n                                    \"Parker successfully checked out using QR - \" + decodedString,\n                            });\n                            this.$store.commit(\"SET_CHECKOUT\", true);\n                        } else {\n                            this.invalidQRMsg = qrResult?.data?.message\n                                ? qrResult.data.message\n                                : \"Please try again\";\n                            this.invalidQRDialog = true;\n                            this.postToLoggerAPI({\n                                phone: self.bookingDetails.user.contact,\n                                refId: self.bookingId,\n                                error: self.invalidQRMsg,\n                                icon: \"logout\",\n                                statusText:\n                                    \"Error Occured while checking out using QR - \" +\n                                    decodedString,\n                            });\n                        }\n                    } catch (error) {\n                        console.log(error);\n                    }\n                } else {\n                    this.invalidQRMsg = preValidateQrResult?.data?.message\n                        ? preValidateQrResult.data.message\n                        : \"Please try again\";\n                    this.invalidQRDialog = true;\n                    this.postToLoggerAPI({\n                        phone: self.bookingDetails.user.contact,\n                        refId: self.bookingId,\n                        icon: \"logout\",\n                        error: self.invalidQRMsg,\n                        statusText:\n                            \"Error Occured while checking out using QR - \" + decodedString,\n                    });\n                }\n            } catch (error) {\n                console.log(error);\n            }\n        },\n        async onInit(promise) {\n            try {\n                await promise;\n            } catch (error) {\n                if (error.name === \"NotAllowedError\") {\n                    this.invalidQRMsg = \"Please grant camera access permisson\";\n                } else if (error.name === \"NotFoundError\") {\n                    this.invalidQRMsg = \"No camera found on this device\";\n                } else if (error.name === \"NotSupportedError\") {\n                    this.invalidQRMsg = \"Secure context required (HTTPS, localhost)\";\n                } else if (error.name === \"NotReadableError\") {\n                    this.invalidQRMsg = \"Is the camera already in use? Please check.\";\n                } else if (error.name === \"OverconstrainedError\") {\n                    this.invalidQRMsg = \"Installed camera is not suitable\";\n                } else if (error.name === \"StreamApiNotSupportedError\") {\n                    this.invalidQRMsg = \"Stream API is not supported in this browser\";\n                }\n                this.invalidQRDialog = true;\n            }\n        },\n        async onValidateText() {\n            this.validateBookingPending = true;\n            let result = await this.validateBooking(this.validateBookingTxt);\n            if (!result.data.status) {\n                this.invalidSMSMsg = result?.data?.message\n                    ? result.data.message\n                    : \"Validation not recognized. Please try again\";\n                this.invalidSMSDialog = true;\n                this.validateBookingPending = false;\n                this.postToLoggerAPI({\n                    phone: this.bookingDetails.user.contact,\n                    refId: this.bookingId,\n                    error: this.invalidSMSMsg,\n                    icon: \"redeem\",\n                    statusText:\n                        \"Error in validating the session on entering validation code - \" +\n                        this.validateBookingTxt,\n                });\n            } else {\n                this.postToLoggerAPI({\n                    phone: this.bookingDetails.user.contact,\n                    refId: this.bookingId,\n                    icon: \"redeem\",\n                    statusText:\n                        \"Parker validated the session successfully by entering validation code - \" +\n                        this.validateBookingTxt,\n                });\n                this.goldenNugget = false;\n                this.validateBookingPending = false;\n                this.validateBookingDialog = false;\n                this.$store.commit(\n                    \"SET_VALIDATED_MERCHANT\",\n                    result?.data?.merchantName\n                );\n                this.$router.replace({ path: \"/validatesuccess\" });\n            }\n        },\n        async validateBooking(code) {\n            try {\n                let validateResult = await APIHelper(\n                    \"POST\",\n                    \"/api/v1/validate/\" + this.bookingId,\n                    {\n                        coupon: code,\n                        zid: this.bookingDetails.zone.locationCode\n                    }\n                );\n                return validateResult;\n            } catch (error) {\n                console.log(error);\n                return error;\n            }\n        },\n        async openScanValidationCode() {\n            this.validateBookingDialog = false;\n            this.validateBookingTxt = \"\";\n            this.validateQRCodeDialog = true;\n            this.validationCameraStatus = true;\n        },\n        async onValidateQRCode(decodedString) {\n            this.validationCameraStatus = false;\n            this.validateQRCodePending = true;\n            try {\n                let result = await this.validateBooking(decodedString);\n                if (!result.data.status) {\n                    this.invalidValidationQRMsg = result?.data?.message\n                        ? result.data.message\n                        : \"Validation not recognized. Please try again\";\n                    this.invalidValidationQRDialog = true;\n                    this.validateQRCodePending = false;\n                    this.postToLoggerAPI({\n                        phone: this.bookingDetails.user.contact,\n                        refId: this.bookingId,\n                        error: this.invalidQRMsg,\n                        icon: \"redeem\",\n                        statusText:\n                            \"Error in validating the session on scanning validation QR - \" +\n                            decodedString,\n                    });\n                } else {\n                    this.postToLoggerAPI({\n                        phone: this.bookingDetails.user.contact,\n                        refId: this.bookingId,\n                        icon: \"redeem\",\n                        statusText:\n                            \"Parker validated the session successfully by scanning validation QR - \" +\n                            decodedString,\n                    });\n                    this.validateQRCodePending = false;\n                    this.validateQRCodeDialog = false;\n                    this.$store.commit(\n                        \"SET_VALIDATED_MERCHANT\",\n                        result?.data?.merchantName\n                    );\n                    this.$router.replace({ path: \"/validatesuccess\" });\n                }\n            } catch (error) {\n                console.log(error);\n            }\n        },\n    },\n}\n</script>\n<style lang=\"less\">\n.add_licence_plate_btn {\n    width: 100%;\n    background-color: #f2555c !important;\n    font-size: 18px !important;\n    font-weight: 700 !important;\n    letter-spacing: normal !important;\n    height: 50px !important;\n}\n\n.booking_header {\n    position: absolute;\n    bottom: 72px;\n    top: 20px;\n    left: 16px;\n    font-size: 18px;\n    font-weight: bolder;\n}\n\n.time_ago {\n    font-size: 22px;\n    font-weight: 600;\n    line-height: 2.5rem;\n    letter-spacing: 0.0073529412em !important;\n}\n\n.time_ago_context {\n    font-size: 16px;\n    font-weight: 500;\n}\n\n.validated_time {\n    font-size: 13px;\n    font-weight: 500;\n}\n\n.booking_divider {\n    border-color: white !important;\n    margin-top: 12px;\n}\n\n.booking_divider_div {\n    position: absolute;\n    bottom: 60px;\n    width: 100%;\n}\n\n.booking_content {\n    position: absolute !important;\n    bottom: 18px !important;\n    left: 16px !important;\n    font-size: 13px !important;\n    font-weight: normal !important;\n}\n\n.add_credit_card_btn {\n    // border-radius: 30px;\n    width: 100%;\n    background-color: #f2555c !important;\n    font-size: 18px !important;\n    letter-spacing: normal !important;\n    height: 37px !important;\n}\n\n.validation-pending {\n    position: absolute !important;\n    left: 50%;\n    top: 50%;\n    -webkit-transform: translateX(-50%);\n    transform: translateX(-50%);\n}\n\n.qr_text {\n    font-size: 13px;\n}\n\n.exit_dialog_btn {\n    width: 100%;\n    background-color: #f2555c !important;\n    font-size: 18px !important;\n    font-weight: 700 !important;\n    letter-spacing: normal !important;\n    height: 50px !important;\n}\n\n.sms-input input {\n    font-size: 36px;\n    font-weight: 500;\n    color: #44515a !important;\n}\n\n.v-text-field--enclosed .v-input__append-inner {\n    margin-top: 26px !important;\n}\n\n.exit-option-text {\n    font-size: 14px;\n}\n\n.sms-caption {\n    font-size: 0.75rem !important;\n    font-weight: 400;\n    line-height: 1.25rem;\n    letter-spacing: 0.0333333333em !important;\n}\n\n.qrcode-stream-wrapper video {\n    max-height: 300px;\n}\n\n.counter-content-position {\n    position: relative;\n}\n\n.grace-period-image {\n    position: absolute !important;\n    right: -51px;\n    bottom: 5px;\n}\n\n.fabIcon {\n    animation: pulse 2s infinite;\n    box-shadow: 0 0 0 0 rgba(0, 0, 0, 1);\n    transform: scale(1);\n\n    @keyframes pulse {\n        0% {\n            transform: scale(0.95);\n            box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.7);\n        }\n\n        70% {\n            transform: scale(1);\n            box-shadow: 0 0 0 10px rgba(0, 0, 0, 0);\n        }\n\n        100% {\n            transform: scale(0.95);\n            box-shadow: 0 0 0 0 rgba(0, 0, 0, 0);\n        }\n    }\n}\n\n#qr-code-full-region__dashboard {\n    display: none;\n}\n\n#qr-code-full-region>video {\n    width: 100% !important;\n}\n\n#validation-qr-code>video {\n    width: 100% !important;\n}\n\n#qr-code-full-region img {\n    display: none;\n}\n\n.no-upper-case {\n    text-transform: unset !important;\n}\n\n.time-picker-input {\n    flex: 1 1 auto;\n    line-height: 20px;\n    padding: 8px 0 8px;\n    max-width: 100%;\n    min-width: 0px;\n    font-size: 16px;\n    font-family: \"Work Sans\";\n}\n\n.time-picker-input :focus-visible {\n    outline-color: #1976d2;\n}\n\n.vue__time-picker input.display-time {\n    padding: 0px !important;\n    border-bottom: 1px solid #767676;\n    border-top: 0px;\n    border-right: 0px;\n    border-left: 0px;\n}\n\n.vue__time-picker-dropdown ul li:not([disabled]).active,\n.vue__time-picker-dropdown ul li:not([disabled]).active:focus,\n.vue__time-picker-dropdown ul li:not([disabled]).active:hover,\n.vue__time-picker .dropdown ul li:not([disabled]).active,\n.vue__time-picker .dropdown ul li:not([disabled]).active:focus,\n.vue__time-picker .dropdown ul li:not([disabled]).active:hover {\n    background: #f2555c !important;\n}\n\n[data-key=\"am\"] {\n    border: 0.2px solid red;\n    border-radius: 2px;\n    margin-left: 2px;\n}\n\n[data-key=\"pm\"] {\n    border: 0.2px solid red;\n    margin-top: 0.5em;\n    margin-left: 2px;\n}\n\n.hours .hint {\n    position: sticky;\n    top: 0;\n    text-align: center;\n    background: #68808c;\n    z-index: 1;\n    -webkit-text-fill-color: white;\n    margin-bottom: 10px;\n}\n\n.apms .hint {\n    position: sticky;\n    top: 0;\n    text-align: center;\n    background: #68808c;\n    z-index: 1;\n    margin-left: 1px;\n    -webkit-text-fill-color: white;\n    margin-bottom: 10px;\n}\n\n.hours::-webkit-scrollbar {\n    display: none;\n}\n\n.minutes::-webkit-scrollbar {\n    display: none;\n}\n\n.minutes .hint {\n    position: sticky;\n    top: 0;\n    text-align: center;\n    background: #68808c;\n    z-index: 1;\n    -webkit-text-fill-color: white;\n    margin-bottom: 10px;\n}\n\nhr {\n    border: 1px solid #ffbc1f;\n}\n\n#apple-pay-button {\n    height: 48px;\n    width: 100%;\n    display: inline-block;\n    -webkit-appearance: -apple-pay-button;\n    -apple-pay-button-type: plain;\n    -apple-pay-button-style: black;\n}\n\n[data-key='am'] {\n    border: 0.2px solid red;\n    border-radius: 2px;\n    margin-left: 2px;\n}\n\n[data-key='pm'] {\n    border: 0.2px solid red;\n    margin-top: 0.5em;\n    margin-left: 2px;\n}\n\n.hours .hint {\n    position: sticky;\n    top: 0;\n    text-align: center;\n    background: #68808c;\n    z-index: 1;\n    -webkit-text-fill-color: white;\n    margin-bottom: 10px\n}\n\n.apms .hint {\n    position: sticky;\n    top: 0;\n    text-align: center;\n    background: #68808c;\n    z-index: 1;\n    margin-left: 1px;\n    -webkit-text-fill-color: white;\n    margin-bottom: 10px\n}\n\n.hours::-webkit-scrollbar {\n    display: none;\n}\n\n.minutes::-webkit-scrollbar {\n    display: none;\n}\n\n.minutes .hint {\n    position: sticky;\n    top: 0;\n    text-align: center;\n    background: #68808c;\n    z-index: 1;\n    -webkit-text-fill-color: white;\n    margin-bottom: 10px\n}\n\n.booking_date {\n    font-weight: normal;\n    font-size: 13px;\n    color: #3d3f3c !important;\n}\n\n.booking_date_header {\n    color: #3d3f3c !important;\n    font-weight: bold;\n    font-size: 14px;\n}\n\n.total-parking {\n    color: #3d3f3c;\n    font-size: 0.875rem !important;\n    font-weight: 500;\n    line-height: 2.25rem;\n    letter-spacing: 0.0892857143em !important;\n    text-transform: uppercase !important;\n}\n\n.amount-text {\n    color: #3d3f3c;\n    font-size: 34px;\n}\n\n.amount-content-position {\n    position: relative;\n}\n\n.p-calendar {\n    width: 100%;\n}\n</style>"]}]}