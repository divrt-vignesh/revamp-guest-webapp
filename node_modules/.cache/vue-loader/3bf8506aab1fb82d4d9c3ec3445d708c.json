{"remainingRequest":"/home/vignesh/DIVRT/guest-webapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vignesh/DIVRT/guest-webapp/src/uiComponents/Calendar/Calendar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vignesh/DIVRT/guest-webapp/src/uiComponents/Calendar/Calendar.vue","mtime":1686824874961},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBDb25uZWN0ZWRPdmVybGF5U2Nyb2xsSGFuZGxlciBmcm9tICcuL0Nvbm5lY3RlZE92ZXJsYXlTY3JvbGxIYW5kbGVyJzsKaW1wb3J0IFVuaXF1ZUNvbXBvbmVudElkIGZyb20gJy4vVW5pcXVlQ29tcG9uZW50SWQnOwppbXBvcnQgSW5wdXRUZXh0IGZyb20gJy4vSW5wdXRUZXh0JzsKaW1wb3J0IEJ1dHRvbiBmcm9tICcuLi9DYWxlbmRhci9CdXR0b24nOwppbXBvcnQgRG9tSGFuZGxlciBmcm9tICcuLi9DYWxlbmRhci9Eb21IYW5kbGVyJzsKaW1wb3J0IHsgZm9ybWF0IH0gZnJvbSAiZGF0ZS1mbnMiOwoKaW1wb3J0IHsgRXZlbnRCdXMgfSBmcm9tICJAL2xpYi9FdmVudEJ1cyI7CmltcG9ydCBSaXBwbGUgZnJvbSAnLi4vQ2FsZW5kYXIvUmlwcGxlJzsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIGluaGVyaXRBdHRyczogZmFsc2UsCiAgICBwcm9wczogewogICAgICAgIHZhbHVlOiBudWxsLAogICAgICAgIHNlbGVjdGlvbk1vZGU6IHsKICAgICAgICAgICAgdHlwZTogU3RyaW5nLAogICAgICAgICAgICBkZWZhdWx0OiAnc2luZ2xlJwogICAgICAgIH0sCiAgICAgICAgZGF0ZUZvcm1hdDogU3RyaW5nLAogICAgICAgIGlubGluZTogewogICAgICAgICAgICB0eXBlOiBCb29sZWFuLAogICAgICAgICAgICBkZWZhdWx0OiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgc2hvd090aGVyTW9udGhzOiB7CiAgICAgICAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgICAgICAgIGRlZmF1bHQ6IHRydWUKICAgICAgICB9LAogICAgICAgIHNlbGVjdE90aGVyTW9udGhzOiB7CiAgICAgICAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgICAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICBzaG93SWNvbjogewogICAgICAgICAgICB0eXBlOiBCb29sZWFuLAogICAgICAgICAgICBkZWZhdWx0OiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgaWNvbjogewogICAgICAgICAgICB0eXBlOiBTdHJpbmcsCiAgICAgICAgICAgIGRlZmF1bHQ6ICdwaSBwaS1jYWxlbmRhcicKICAgICAgICB9LAogICAgICAgIG51bWJlck9mTW9udGhzOiB7CiAgICAgICAgICAgIHR5cGU6IE51bWJlciwKICAgICAgICAgICAgZGVmYXVsdDogMQogICAgICAgIH0sCiAgICAgICAgcmVzcG9uc2l2ZU9wdGlvbnM6IEFycmF5LAogICAgICAgIHZpZXc6IHsKICAgICAgICAgICAgdHlwZTogU3RyaW5nLAogICAgICAgICAgICBkZWZhdWx0OiAnZGF0ZScKICAgICAgICB9LAogICAgICAgIHRvdWNoVUk6IHsKICAgICAgICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgICAgICAgZGVmYXVsdDogZmFsc2UKICAgICAgICB9LAogICAgICAgIG1vbnRoTmF2aWdhdG9yOiB7CiAgICAgICAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgICAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICB5ZWFyTmF2aWdhdG9yOiB7CiAgICAgICAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgICAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICB5ZWFyUmFuZ2U6IHsKICAgICAgICAgICAgdHlwZTogU3RyaW5nLAogICAgICAgICAgICBkZWZhdWx0OiBudWxsCiAgICAgICAgfSwKICAgICAgICBwYW5lbENsYXNzOiB7CiAgICAgICAgICAgIHR5cGU6IFN0cmluZywKICAgICAgICAgICAgZGVmYXVsdDogbnVsbAogICAgICAgIH0sCiAgICAgICAgcGFuZWxTdHlsZTogewogICAgICAgICAgICB0eXBlOiBTdHJpbmcsCiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwKICAgICAgICB9LAogICAgICAgIG1pbkRhdGU6IHsKICAgICAgICAgICAgdHlwZTogRGF0ZSwKICAgICAgICAgICAgdmFsdWU6IG51bGwKICAgICAgICB9LAogICAgICAgIG1heERhdGU6IHsKICAgICAgICAgICAgdHlwZTogRGF0ZSwKICAgICAgICAgICAgdmFsdWU6IG51bGwKICAgICAgICB9LAogICAgICAgIGRpc2FibGVkRGF0ZXM6IHsKICAgICAgICAgICAgdHlwZTogQXJyYXksCiAgICAgICAgICAgIHZhbHVlOiBudWxsCiAgICAgICAgfSwKICAgICAgICBkaXNhYmxlZERheXM6IHsKICAgICAgICAgICAgdHlwZTogQXJyYXksCiAgICAgICAgICAgIHZhbHVlOiBudWxsCiAgICAgICAgfSwKICAgICAgICBtYXhEYXRlQ291bnQ6IHsKICAgICAgICAgICAgdHlwZTogTnVtYmVyLAogICAgICAgICAgICB2YWx1ZTogbnVsbAogICAgICAgIH0sCiAgICAgICAgc2hvd09uRm9jdXM6IHsKICAgICAgICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgICAgICAgZGVmYXVsdDogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgYXV0b1pJbmRleDogewogICAgICAgICAgICB0eXBlOiBCb29sZWFuLAogICAgICAgICAgICBkZWZhdWx0OiB0cnVlCiAgICAgICAgfSwKICAgICAgICBiYXNlWkluZGV4OiB7CiAgICAgICAgICAgIHR5cGU6IE51bWJlciwKICAgICAgICAgICAgZGVmYXVsdDogMAogICAgICAgIH0sCiAgICAgICAgc2hvd0J1dHRvbkJhcjogewogICAgICAgICAgICB0eXBlOiBCb29sZWFuLAogICAgICAgICAgICBkZWZhdWx0OiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgc2hvcnRZZWFyQ3V0b2ZmOiB7CiAgICAgICAgICAgIHR5cGU6IFN0cmluZywKICAgICAgICAgICAgZGVmYXVsdDogJysxMCcKICAgICAgICB9LAogICAgICAgIHNob3dUaW1lOiB7CiAgICAgICAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgICAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICB0aW1lT25seTogewogICAgICAgICAgICB0eXBlOiBCb29sZWFuLAogICAgICAgICAgICBkZWZhdWx0OiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgaG91ckZvcm1hdDogewogICAgICAgICAgICB0eXBlOiBTdHJpbmcsCiAgICAgICAgICAgIGRlZmF1bHQ6ICcyNCcKICAgICAgICB9LAogICAgICAgIHN0ZXBIb3VyOiB7CiAgICAgICAgICAgIHR5cGU6IE51bWJlciwKICAgICAgICAgICAgZGVmYXVsdDogMQogICAgICAgIH0sCiAgICAgICAgc3RlcE1pbnV0ZTogewogICAgICAgICAgICB0eXBlOiBOdW1iZXIsCiAgICAgICAgICAgIGRlZmF1bHQ6IDEKICAgICAgICB9LAogICAgICAgIHN0ZXBTZWNvbmQ6IHsKICAgICAgICAgICAgdHlwZTogTnVtYmVyLAogICAgICAgICAgICBkZWZhdWx0OiAxCiAgICAgICAgfSwKICAgICAgICBzaG93U2Vjb25kczogewogICAgICAgICAgICB0eXBlOiBCb29sZWFuLAogICAgICAgICAgICBkZWZhdWx0OiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgaGlkZU9uRGF0ZVRpbWVTZWxlY3Q6IHsKICAgICAgICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgICAgICAgZGVmYXVsdDogZmFsc2UKICAgICAgICB9LAogICAgICAgIHRpbWVTZXBhcmF0b3I6IHsKICAgICAgICAgICAgdHlwZTogU3RyaW5nLAogICAgICAgICAgICBkZWZhdWx0OiAnOicKICAgICAgICB9LAogICAgICAgIHNob3dXZWVrOiB7CiAgICAgICAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgICAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICBtYW51YWxJbnB1dDogewogICAgICAgICAgICB0eXBlOiBCb29sZWFuLAogICAgICAgICAgICBkZWZhdWx0OiB0cnVlCiAgICAgICAgfSwKICAgICAgICBhcmlhTGFiZWxsZWRCeTogewogICAgICAgICAgICB0eXBlOiBTdHJpbmcsCiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwKICAgICAgICB9LAogICAgICAgIGFwcGVuZFRvOiB7CiAgICAgICAgICAgIHR5cGU6IFN0cmluZywKICAgICAgICAgICAgZGVmYXVsdDogbnVsbAogICAgICAgIH0sCiAgICAgICAgaW5wdXRDbGFzczogbnVsbCwKICAgICAgICBpbnB1dFN0eWxlOiBudWxsLAogICAgICAgIGNsYXNzTmFtZTogbnVsbCwKICAgICAgICBzdHlsZXM6IG51bGwKICAgIH0sCiAgICBuYXZpZ2F0aW9uU3RhdGU6IG51bGwsCiAgICB0aW1lUGlja2VyQ2hhbmdlOiBmYWxzZSwKICAgIHNjcm9sbEhhbmRsZXI6IG51bGwsCiAgICBvdXRzaWRlQ2xpY2tMaXN0ZW5lcjogbnVsbCwKICAgIG1hc2tDbGlja0xpc3RlbmVyOiBudWxsLAogICAgcmVzaXplTGlzdGVuZXI6IG51bGwsCiAgICBtYXNrOiBudWxsLAogICAgdGltZVBpY2tlclRpbWVyOiBudWxsLAoKICAgIGlzS2V5ZG93bjogZmFsc2UsCiAgICBwcmV2ZW50Rm9jdXM6IGZhbHNlLAogICAgY3JlYXRlZCgpIHsKICAgICAgICB0aGlzLnVwZGF0ZUN1cnJlbnRNZXRhRGF0YSgpCiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgICB0aGlzLmNyZWF0ZVJlc3BvbnNpdmVTdHlsZSgpOwogICAgICAgIGlmICh0aGlzLmlubGluZSkgewogICAgICAgICAgICB0aGlzLiRyZWZzLm92ZXJsYXkgJiYgdGhpcy4kcmVmcy5vdmVybGF5LnNldEF0dHJpYnV0ZSh0aGlzLmF0dHJpYnV0ZVNlbGVjdG9yLCAnJyk7CiAgICAgICAgICAgIGlmICghdGhpcy4kYXR0cnMuZGlzYWJsZWQpIHsKICAgICAgICAgICAgICAgIHRoaXMuaW5pdEZvY3VzYWJsZUNlbGwoKTsKICAgICAgICAgICAgICAgIHRoaXMuJHJlZnMub3ZlcmxheS5zdHlsZS53aWR0aCA9IERvbUhhbmRsZXIuZ2V0T3V0ZXJXaWR0aCh0aGlzLiRlbCkgKyAncHgnOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIEV2ZW50QnVzLiRvbignZGF0ZXRpbWUtc2V0JywgKCkgPT4gewogICAgICAgICAgICB0aGlzLnNldEJ1dHRvbkxvYWRpbmcgPSBmYWxzZTsKICAgICAgICB9KQogICAgfSwKICAgIHVwZGF0ZWQoKSB7CiAgICAgICAgaWYgKHRoaXMuJHJlZnMub3ZlcmxheSkgewogICAgICAgICAgICB0aGlzLnByZXZlbnRGb2N1cyA9IHRydWU7CiAgICAgICAgICAgIHRoaXMudXBkYXRlRm9jdXMoKTsKICAgICAgICB9CgogICAgICAgIGlmICh0aGlzLiRyZWZzLmlucHV0ICYmIHRoaXMuc2VsZWN0aW9uU3RhcnQgIT0gbnVsbCAmJiB0aGlzLnNlbGVjdGlvbkVuZCAhPSBudWxsKSB7CiAgICAgICAgICAgIHRoaXMuJHJlZnMuaW5wdXQuJGVsLnNlbGVjdGlvblN0YXJ0ID0gdGhpcy5zZWxlY3Rpb25TdGFydDsKICAgICAgICAgICAgdGhpcy4kcmVmcy5pbnB1dC4kZWwuc2VsZWN0aW9uRW5kID0gdGhpcy5zZWxlY3Rpb25FbmQ7CiAgICAgICAgICAgIHRoaXMuc2VsZWN0aW9uU3RhcnQgPSBudWxsOwogICAgICAgICAgICB0aGlzLnNlbGVjdGlvbkVuZCA9IG51bGw7CiAgICAgICAgfQogICAgfSwKICAgIGJlZm9yZURlc3Ryb3koKSB7CiAgICAgICAgaWYgKHRoaXMudGltZVBpY2tlclRpbWVyKSB7CiAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVQaWNrZXJUaW1lcik7CiAgICAgICAgfQoKICAgICAgICBpZiAodGhpcy5tYXNrKSB7CiAgICAgICAgICAgIHRoaXMuZGVzdHJveU1hc2soKTsKICAgICAgICB9CgogICAgICAgIHRoaXMuZGVzdHJveVJlc3BvbnNpdmVTdHlsZUVsZW1lbnQoKTsKICAgICAgICB0aGlzLnJlc3RvcmVBcHBlbmQoKTsKICAgICAgICB0aGlzLnVuYmluZE91dHNpZGVDbGlja0xpc3RlbmVyKCk7CiAgICAgICAgdGhpcy51bmJpbmRSZXNpemVMaXN0ZW5lcigpOwoKICAgICAgICBpZiAodGhpcy5zY3JvbGxIYW5kbGVyKSB7CiAgICAgICAgICAgIHRoaXMuc2Nyb2xsSGFuZGxlci5kZXN0cm95KCk7CiAgICAgICAgICAgIHRoaXMuc2Nyb2xsSGFuZGxlciA9IG51bGw7CiAgICAgICAgfQogICAgfSwKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgY3VycmVudE1vbnRoOiBudWxsLAogICAgICAgICAgICBjdXJyZW50WWVhcjogbnVsbCwKICAgICAgICAgICAgZGlzYWJsZUhvdXI6IGZhbHNlLAogICAgICAgICAgICBzZXRCdXR0b25Mb2FkaW5nOiBmYWxzZSwKICAgICAgICAgICAgZGlzYWJsZU1pbjogZmFsc2UsCiAgICAgICAgICAgIGRpc2FibGVEZWNyZW1lbnRIb3VyOiBmYWxzZSwKICAgICAgICAgICAgZGlzYWJsZUluY3JlbWVudEhvdXI6IGZhbHNlLAogICAgICAgICAgICBkaXNhYmxlSW5jcmVtZW50TWludXRlOiBmYWxzZSwKICAgICAgICAgICAgZGlzYWJsZURlY3JlbWVudE1pbnV0ZTogZmFsc2UsCiAgICAgICAgICAgIGN1cnJlbnRIb3VyOiBudWxsLAogICAgICAgICAgICBjdXJyZW50TWludXRlOiBudWxsLAogICAgICAgICAgICBjdXJyZW50U2Vjb25kOiBudWxsLAogICAgICAgICAgICBwbTogbnVsbCwKICAgICAgICAgICAgZm9jdXNlZDogZmFsc2UsCiAgICAgICAgICAgIG92ZXJsYXlWaXNpYmxlOiBmYWxzZSwKICAgICAgICAgICAgY3VycmVudFZpZXc6IHRoaXMudmlldwogICAgICAgIH0KICAgIH0sCiAgICB3YXRjaDogewogICAgICAgIHZhbHVlKCkgewogICAgICAgICAgICB0aGlzLnVwZGF0ZUN1cnJlbnRNZXRhRGF0YSgpOwogICAgICAgIH0sCiAgICAgICAgbW9udGhzKCkgewogICAgICAgICAgICBpZiAodGhpcy4kcmVmcy5vdmVybGF5KSB7CiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuZm9jdXNlZCkgewogICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQodGhpcy51cGRhdGVGb2N1cywgMCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIG51bWJlck9mTW9udGhzKCkgewogICAgICAgICAgICB0aGlzLmRlc3Ryb3lSZXNwb25zaXZlU3R5bGVFbGVtZW50KCk7CiAgICAgICAgICAgIHRoaXMuY3JlYXRlUmVzcG9uc2l2ZVN0eWxlKCk7CiAgICAgICAgfSwKICAgICAgICByZXNwb25zaXZlT3B0aW9ucygpIHsKICAgICAgICAgICAgdGhpcy5kZXN0cm95UmVzcG9uc2l2ZVN0eWxlRWxlbWVudCgpOwogICAgICAgICAgICB0aGlzLmNyZWF0ZVJlc3BvbnNpdmVTdHlsZSgpOwogICAgICAgIH0sCiAgICAgICAgY3VycmVudFZpZXcoKSB7CiAgICAgICAgICAgIFByb21pc2UucmVzb2x2ZShudWxsKS50aGVuKCgpID0+IHRoaXMuYWxpZ25PdmVybGF5KCkpOwogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgdmFsaWRhdGUoKSB7CiAgICAgICAgICAgIGlmICh0aGlzLmN1cnJlbnRIb3VyLmxlbmd0aCA+IDIpIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgaWYgKHRoaXMuY3VycmVudEhvdXIgPT0gbnVsbCB8fCB0aGlzLmN1cnJlbnRIb3VyID09IHVuZGVmaW5lZCB8fCB0aGlzLmN1cnJlbnRIb3VyID4gMTIgfHwgdGhpcy5jdXJyZW50TWludXRlID4gNTkpIHsKICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudEhvdXIgPSBmb3JtYXQodGhpcy5taW5EYXRlLCAnaGgnKQogICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50TWludXRlID0gZm9ybWF0KHRoaXMubWluRGF0ZSwgJ21tJykKICAgICAgICAgICAgICAgIHRoaXMucG0gPSBmb3JtYXQodGhpcy5taW5EYXRlLCAnYWFhJykgPT0gJ2FtJyA/IGZhbHNlIDogdHJ1ZTsKICAgICAgICAgICAgICAgIHRoaXMudmFsaWRhdGVUaW1lKHRoaXMuY3VycmVudEhvdXIsIHRoaXMuY3VycmVudE1pbnV0ZSwgdGhpcy5jdXJyZW50U2Vjb25kLCB0aGlzLnBtKSA/IHRoaXMudXBkYXRlTW9kZWxUaW1lKCkgOiAiIjsKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIGlmICh0aGlzLmN1cnJlbnRNaW51dGUgPT0gMCkgewogICAgICAgICAgICAgICAgbGV0IGhvdXIgPSB0aGlzLmN1cnJlbnRIb3VyOwogICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50SG91ciA9IGhvdXI7CiAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRNaW51dGUgPSAwOwogICAgICAgICAgICAgICAgdGhpcy52YWxpZGF0ZVRpbWUodGhpcy5jdXJyZW50SG91ciwgdGhpcy5jdXJyZW50TWludXRlLCB0aGlzLmN1cnJlbnRTZWNvbmQsIHRoaXMucG0pID8gdGhpcy51cGRhdGVNb2RlbFRpbWUoKSA6ICIiOwogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgaWYgKHRoaXMuY3VycmVudE1pbnV0ZSA8PSAxNSAmJiB0aGlzLmN1cnJlbnRNaW51dGUgPiAwKSB7CiAgICAgICAgICAgICAgICBsZXQgaG91ciA9IHRoaXMuY3VycmVudEhvdXI7CiAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRIb3VyID0gaG91cjsKICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudE1pbnV0ZSA9IDE1OwogICAgICAgICAgICAgICAgdGhpcy52YWxpZGF0ZVRpbWUodGhpcy5jdXJyZW50SG91ciwgdGhpcy5jdXJyZW50TWludXRlLCB0aGlzLmN1cnJlbnRTZWNvbmQsIHRoaXMucG0pID8gdGhpcy51cGRhdGVNb2RlbFRpbWUoKSA6ICIiOwogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgaWYgKHRoaXMuY3VycmVudE1pbnV0ZSA+IDE1ICYmIHRoaXMuY3VycmVudE1pbnV0ZSA8IDQ2KSB7CiAgICAgICAgICAgICAgICBsZXQgaG91ciA9IHRoaXMuY3VycmVudEhvdXIKICAgICAgICAgICAgICAgIGxldCBtaW51dGVBcnJheSA9IFswLCAxNSwgMzAsIDQ1XQogICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50TWludXRlID0gbWludXRlQXJyYXkuZmlsdGVyKChhKSA9PiBhID49IHRoaXMuY3VycmVudE1pbnV0ZSlbMF07CiAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRIb3VyID0gaG91cjsKICAgICAgICAgICAgICAgIHRoaXMudmFsaWRhdGVUaW1lKHRoaXMuY3VycmVudEhvdXIsIHRoaXMuY3VycmVudE1pbnV0ZSwgdGhpcy5jdXJyZW50U2Vjb25kLCB0aGlzLnBtKSA/IHRoaXMudXBkYXRlTW9kZWxUaW1lKCkgOiAiIjsKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIGlmICh0aGlzLmN1cnJlbnRNaW51dGUgPiA0NSAmJiB0aGlzLmN1cnJlbnRNaW51dGUgPCA2MCkgewogICAgICAgICAgICAgICAgbGV0IGhvdXIgPSB0aGlzLmN1cnJlbnRIb3VyCiAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRIb3VyID0gaG91cjsKICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudE1pbnV0ZSA9IDA7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLy8gZWxzZSB7CiAgICAgICAgICAgIC8vICAgICBjb25zb2xlLmxvZygnaGVyZSA1JywgdGhpcy5jdXJyZW50SG91ciAgKQogICAgICAgICAgICAvLyAgICAgdGhpcy5jdXJyZW50SG91ciA9IGZvcm1hdCh0aGlzLm1pbkRhdGUsICdoaCcpCiAgICAgICAgICAgIC8vICAgICB0aGlzLmN1cnJlbnRNaW51dGUgPSBmb3JtYXQodGhpcy5taW5EYXRlLCAnbW0nKQogICAgICAgICAgICAvLyAgICAgdGhpcy5wbSA9IGZvcm1hdCh0aGlzLm1pbkRhdGUsICdhYWEnKSA9PSAnYW0nID8gZmFsc2UgOiB0cnVlOwogICAgICAgICAgICAvLyAgICAgdGhpcy52YWxpZGF0ZVRpbWUodGhpcy5jdXJyZW50SG91ciwgdGhpcy5jdXJyZW50TWludXRlLCB0aGlzLmN1cnJlbnRTZWNvbmQsIHRoaXMucG0pID8gdGhpcy51cGRhdGVNb2RlbFRpbWUoKSA6ICIiOwogICAgICAgICAgICAvLyAgICAgdGhpcy51cGRhdGVNb2RlbFRpbWUoKQogICAgICAgICAgICAvLyAgICAgcmV0dXJuOwogICAgICAgICAgICAvLyB9CgoKCiAgICAgICAgfSwKICAgICAgICBpc0NvbXBhcmFibGUoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLnZhbHVlICE9IG51bGwgJiYgdHlwZW9mIHRoaXMudmFsdWUgIT09ICdzdHJpbmcnOwogICAgICAgIH0sCiAgICAgICAgaXNTZWxlY3RlZChkYXRlTWV0YSkgewogICAgICAgICAgICBpZiAoIXRoaXMuaXNDb21wYXJhYmxlKCkpIHsKICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKHRoaXMudmFsdWUpIHsKICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzU2luZ2xlU2VsZWN0aW9uKCkpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5pc0RhdGVFcXVhbHModGhpcy52YWx1ZSwgZGF0ZU1ldGEpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZSBpZiAodGhpcy5pc011bHRpcGxlU2VsZWN0aW9uKCkpIHsKICAgICAgICAgICAgICAgICAgICBsZXQgc2VsZWN0ZWQgPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBkYXRlIG9mIHRoaXMudmFsdWUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQgPSB0aGlzLmlzRGF0ZUVxdWFscyhkYXRlLCBkYXRlTWV0YSk7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzZWxlY3RlZCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIHJldHVybiBzZWxlY3RlZDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVsc2UgaWYgKHRoaXMuaXNSYW5nZVNlbGVjdGlvbigpKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMudmFsdWVbMV0pCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmlzRGF0ZUVxdWFscyh0aGlzLnZhbHVlWzBdLCBkYXRlTWV0YSkgfHwgdGhpcy5pc0RhdGVFcXVhbHModGhpcy52YWx1ZVsxXSwgZGF0ZU1ldGEpIHx8IHRoaXMuaXNEYXRlQmV0d2Vlbih0aGlzLnZhbHVlWzBdLCB0aGlzLnZhbHVlWzFdLCBkYXRlTWV0YSk7CiAgICAgICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmlzRGF0ZUVxdWFscyh0aGlzLnZhbHVlWzBdLCBkYXRlTWV0YSk7CiAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0sCiAgICAgICAgaXNNb250aFNlbGVjdGVkKG1vbnRoKSB7CiAgICAgICAgICAgIGlmICh0aGlzLmlzQ29tcGFyYWJsZSgpKSB7CiAgICAgICAgICAgICAgICBsZXQgdmFsdWUgPSB0aGlzLmlzUmFuZ2VTZWxlY3Rpb24oKSA/IHRoaXMudmFsdWVbMF0gOiB0aGlzLnZhbHVlOwogICAgICAgICAgICAgICAgcmV0dXJuICF0aGlzLmlzTXVsdGlwbGVTZWxlY3Rpb24oKSA/ICh2YWx1ZS5nZXRNb250aCgpID09PSBtb250aCAmJiB2YWx1ZS5nZXRGdWxsWWVhcigpID09PSB0aGlzLmN1cnJlbnRZZWFyKSA6IGZhbHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9LAogICAgICAgIGlzWWVhclNlbGVjdGVkKHllYXIpIHsKICAgICAgICAgICAgaWYgKHRoaXMuaXNDb21wYXJhYmxlKCkpIHsKICAgICAgICAgICAgICAgIGxldCB2YWx1ZSA9IHRoaXMuaXNSYW5nZVNlbGVjdGlvbigpID8gdGhpcy52YWx1ZVswXSA6IHRoaXMudmFsdWU7CiAgICAgICAgICAgICAgICByZXR1cm4gIXRoaXMuaXNNdWx0aXBsZVNlbGVjdGlvbigpICYmIHRoaXMuaXNDb21wYXJhYmxlKCkgPyAodmFsdWUuZ2V0RnVsbFllYXIoKSA9PT0geWVhcikgOiBmYWxzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfSwKICAgICAgICBpc0RhdGVFcXVhbHModmFsdWUsIGRhdGVNZXRhKSB7CiAgICAgICAgICAgIGlmICh2YWx1ZSkKICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZS5nZXREYXRlKCkgPT09IGRhdGVNZXRhLmRheSAmJiB2YWx1ZS5nZXRNb250aCgpID09PSBkYXRlTWV0YS5tb250aCAmJiB2YWx1ZS5nZXRGdWxsWWVhcigpID09PSBkYXRlTWV0YS55ZWFyOwogICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfSwKICAgICAgICBpc0RhdGVCZXR3ZWVuKHN0YXJ0LCBlbmQsIGRhdGVNZXRhKSB7CiAgICAgICAgICAgIGxldCBiZXR3ZWVuID0gZmFsc2U7CiAgICAgICAgICAgIGlmIChzdGFydCAmJiBlbmQpIHsKICAgICAgICAgICAgICAgIGxldCBkYXRlID0gbmV3IERhdGUoZGF0ZU1ldGEueWVhciwgZGF0ZU1ldGEubW9udGgsIGRhdGVNZXRhLmRheSk7CiAgICAgICAgICAgICAgICByZXR1cm4gc3RhcnQuZ2V0VGltZSgpIDw9IGRhdGUuZ2V0VGltZSgpICYmIGVuZC5nZXRUaW1lKCkgPj0gZGF0ZS5nZXRUaW1lKCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiBiZXR3ZWVuOwogICAgICAgIH0sCiAgICAgICAgZ2V0Rmlyc3REYXlPZk1vbnRoSW5kZXgobW9udGgsIHllYXIpIHsKICAgICAgICAgICAgbGV0IGRheSA9IG5ldyBEYXRlKCk7CiAgICAgICAgICAgIGRheS5zZXREYXRlKDEpOwogICAgICAgICAgICBkYXkuc2V0TW9udGgobW9udGgpOwogICAgICAgICAgICBkYXkuc2V0RnVsbFllYXIoeWVhcik7CgogICAgICAgICAgICBsZXQgZGF5SW5kZXggPSBkYXkuZ2V0RGF5KCkgKyB0aGlzLnN1bmRheUluZGV4OwogICAgICAgICAgICByZXR1cm4gZGF5SW5kZXggPj0gNyA/IGRheUluZGV4IC0gNyA6IGRheUluZGV4OwogICAgICAgIH0sCiAgICAgICAgZ2V0RGF5c0NvdW50SW5Nb250aChtb250aCwgeWVhcikgewogICAgICAgICAgICByZXR1cm4gMzIgLSB0aGlzLmRheWxpZ2h0U2F2aW5nQWRqdXN0KG5ldyBEYXRlKHllYXIsIG1vbnRoLCAzMikpLmdldERhdGUoKTsKICAgICAgICB9LAogICAgICAgIGdldERheXNDb3VudEluUHJldk1vbnRoKG1vbnRoLCB5ZWFyKSB7CiAgICAgICAgICAgIGxldCBwcmV2ID0gdGhpcy5nZXRQcmV2aW91c01vbnRoQW5kWWVhcihtb250aCwgeWVhcik7CiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldERheXNDb3VudEluTW9udGgocHJldi5tb250aCwgcHJldi55ZWFyKTsKICAgICAgICB9LAogICAgICAgIGdldFByZXZpb3VzTW9udGhBbmRZZWFyKG1vbnRoLCB5ZWFyKSB7CiAgICAgICAgICAgIGxldCBtLCB5OwoKICAgICAgICAgICAgaWYgKG1vbnRoID09PSAwKSB7CiAgICAgICAgICAgICAgICBtID0gMTE7CiAgICAgICAgICAgICAgICB5ID0geWVhciAtIDE7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICBtID0gbW9udGggLSAxOwogICAgICAgICAgICAgICAgeSA9IHllYXI7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiB7ICdtb250aCc6IG0sICd5ZWFyJzogeSB9OwogICAgICAgIH0sCiAgICAgICAgZ2V0TmV4dE1vbnRoQW5kWWVhcihtb250aCwgeWVhcikgewogICAgICAgICAgICBsZXQgbSwgeTsKCiAgICAgICAgICAgIGlmIChtb250aCA9PT0gMTEpIHsKICAgICAgICAgICAgICAgIG0gPSAwOwogICAgICAgICAgICAgICAgeSA9IHllYXIgKyAxOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgbSA9IG1vbnRoICsgMTsKICAgICAgICAgICAgICAgIHkgPSB5ZWFyOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4geyAnbW9udGgnOiBtLCAneWVhcic6IHkgfTsKICAgICAgICB9LAogICAgICAgIGRheWxpZ2h0U2F2aW5nQWRqdXN0KGRhdGUpIHsKICAgICAgICAgICAgaWYgKCFkYXRlKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgZGF0ZS5zZXRIb3VycyhkYXRlLmdldEhvdXJzKCkgPiAxMiA/IGRhdGUuZ2V0SG91cnMoKSArIDIgOiAwKTsKCiAgICAgICAgICAgIHJldHVybiBkYXRlOwogICAgICAgIH0sCiAgICAgICAgaXNUb2RheSh0b2RheSwgZGF5LCBtb250aCwgeWVhcikgewogICAgICAgICAgICByZXR1cm4gdG9kYXkuZ2V0RGF0ZSgpID09PSBkYXkgJiYgdG9kYXkuZ2V0TW9udGgoKSA9PT0gbW9udGggJiYgdG9kYXkuZ2V0RnVsbFllYXIoKSA9PT0geWVhcjsKICAgICAgICB9LAogICAgICAgIGlzU2VsZWN0YWJsZShkYXksIG1vbnRoLCB5ZWFyLCBvdGhlck1vbnRoKSB7CiAgICAgICAgICAgIGxldCB2YWxpZE1pbiA9IHRydWU7CiAgICAgICAgICAgIGxldCB2YWxpZE1heCA9IHRydWU7CiAgICAgICAgICAgIGxldCB2YWxpZERhdGUgPSB0cnVlOwogICAgICAgICAgICBsZXQgdmFsaWREYXkgPSB0cnVlOwoKICAgICAgICAgICAgaWYgKG90aGVyTW9udGggJiYgIXRoaXMuc2VsZWN0T3RoZXJNb250aHMpIHsKICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKHRoaXMubWluRGF0ZSkgewogICAgICAgICAgICAgICAgaWYgKHRoaXMubWluRGF0ZS5nZXRGdWxsWWVhcigpID4geWVhcikgewogICAgICAgICAgICAgICAgICAgIHZhbGlkTWluID0gZmFsc2U7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlIGlmICh0aGlzLm1pbkRhdGUuZ2V0RnVsbFllYXIoKSA9PT0geWVhcikgewogICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLm1pbkRhdGUuZ2V0TW9udGgoKSA+IG1vbnRoKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkTWluID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKHRoaXMubWluRGF0ZS5nZXRNb250aCgpID09PSBtb250aCkgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5taW5EYXRlLmdldERhdGUoKSA+IGRheSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRNaW4gPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKHRoaXMubWF4RGF0ZSkgewogICAgICAgICAgICAgICAgaWYgKHRoaXMubWF4RGF0ZS5nZXRGdWxsWWVhcigpIDwgeWVhcikgewogICAgICAgICAgICAgICAgICAgIHZhbGlkTWF4ID0gZmFsc2U7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlIGlmICh0aGlzLm1heERhdGUuZ2V0RnVsbFllYXIoKSA9PT0geWVhcikgewogICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLm1heERhdGUuZ2V0TW9udGgoKSA8IG1vbnRoKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkTWF4ID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKHRoaXMubWF4RGF0ZS5nZXRNb250aCgpID09PSBtb250aCkgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5tYXhEYXRlLmdldERhdGUoKSA8IGRheSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRNYXggPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKHRoaXMuZGlzYWJsZWREYXRlcykgewogICAgICAgICAgICAgICAgdmFsaWREYXRlID0gIXRoaXMuaXNEYXRlRGlzYWJsZWQoZGF5LCBtb250aCwgeWVhcik7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICh0aGlzLmRpc2FibGVkRGF5cykgewogICAgICAgICAgICAgICAgdmFsaWREYXkgPSAhdGhpcy5pc0RheURpc2FibGVkKGRheSwgbW9udGgsIHllYXIpCiAgICAgICAgICAgIH0KCgogICAgICAgICAgICByZXR1cm4gdmFsaWRNaW4gJiYgdmFsaWRNYXggJiYgdmFsaWREYXRlICYmIHZhbGlkRGF5OwogICAgICAgIH0sCiAgICAgICAgb25PdmVybGF5RW50ZXIoZWwpIHsKICAgICAgICAgICAgZWwuc2V0QXR0cmlidXRlKHRoaXMuYXR0cmlidXRlU2VsZWN0b3IsICcnKTsKCiAgICAgICAgICAgIGlmICh0aGlzLmF1dG9aSW5kZXgpIHsKICAgICAgICAgICAgICAgIHRoaXMuJHJlZnMub3ZlcmxheS5zdHlsZS56SW5kZXggPSBTdHJpbmcodGhpcy5iYXNlWkluZGV4ICsgRG9tSGFuZGxlci5nZW5lcmF0ZVpJbmRleCgpKTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0aGlzLmFwcGVuZENvbnRhaW5lcigpOwogICAgICAgICAgICB0aGlzLmFsaWduT3ZlcmxheSgpOwogICAgICAgICAgICB0aGlzLiRlbWl0KCdzaG93Jyk7CiAgICAgICAgICAgIHRoaXMudXBkYXRlQ3VycmVudE1ldGFEYXRhKCk7CiAgICAgICAgICAgIHRoaXMudmFsaWRhdGVUaW1lKHRoaXMuY3VycmVudEhvdXIsIHRoaXMuY3VycmVudE1pbnV0ZSwgdGhpcy5jdXJyZW50U2Vjb25kLCB0aGlzLnBtKQogICAgICAgIH0sCiAgICAgICAgb25PdmVybGF5RW50ZXJDb21wbGV0ZSgpIHsKICAgICAgICAgICAgdGhpcy5iaW5kT3V0c2lkZUNsaWNrTGlzdGVuZXIoKTsKICAgICAgICAgICAgdGhpcy5iaW5kU2Nyb2xsTGlzdGVuZXIoKTsKICAgICAgICAgICAgdGhpcy5iaW5kUmVzaXplTGlzdGVuZXIoKTsKICAgICAgICAgICAgdGhpcy51cGRhdGVDdXJyZW50TWV0YURhdGEoKTsKICAgICAgICAgICAgdGhpcy52YWxpZGF0ZVRpbWUodGhpcy5jdXJyZW50SG91ciwgdGhpcy5jdXJyZW50TWludXRlLCB0aGlzLmN1cnJlbnRTZWNvbmQsIHRoaXMucG0pCgogICAgICAgIH0sCiAgICAgICAgb25PdmVybGF5TGVhdmUoKSB7CiAgICAgICAgICAgIHRoaXMuY3VycmVudFZpZXcgPSB0aGlzLnZpZXc7CiAgICAgICAgICAgIHRoaXMudW5iaW5kT3V0c2lkZUNsaWNrTGlzdGVuZXIoKTsKICAgICAgICAgICAgdGhpcy51bmJpbmRTY3JvbGxMaXN0ZW5lcigpOwogICAgICAgICAgICB0aGlzLnVuYmluZFJlc2l6ZUxpc3RlbmVyKCk7CiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ2hpZGUnKTsKICAgICAgICAgICAgaWYgKHRoaXMubWFzaykgewogICAgICAgICAgICAgICAgdGhpcy5kaXNhYmxlTW9kYWxpdHkoKTsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgb25QcmV2QnV0dG9uQ2xpY2soZXZlbnQpIHsKICAgICAgICAgICAgaWYgKHRoaXMuc2hvd090aGVyTW9udGhzKSB7CiAgICAgICAgICAgICAgICB0aGlzLm5hdmlnYXRpb25TdGF0ZSA9IHsgYmFja3dhcmQ6IHRydWUsIGJ1dHRvbjogdHJ1ZSB9OwogICAgICAgICAgICAgICAgdGhpcy5uYXZCYWNrd2FyZChldmVudCk7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIG9uTmV4dEJ1dHRvbkNsaWNrKGV2ZW50KSB7CiAgICAgICAgICAgIGlmICh0aGlzLnNob3dPdGhlck1vbnRocykgewogICAgICAgICAgICAgICAgdGhpcy5uYXZpZ2F0aW9uU3RhdGUgPSB7IGJhY2t3YXJkOiBmYWxzZSwgYnV0dG9uOiB0cnVlIH07CiAgICAgICAgICAgICAgICB0aGlzLm5hdkZvcndhcmQoZXZlbnQpOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBuYXZCYWNrd2FyZChldmVudCkgewogICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoKICAgICAgICAgICAgaWYgKCF0aGlzLmlzRW5hYmxlZCgpKSB7CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICh0aGlzLmN1cnJlbnRWaWV3ID09PSAnbW9udGgnKSB7CiAgICAgICAgICAgICAgICB0aGlzLmRlY3JlbWVudFllYXIoKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIGlmICh0aGlzLmN1cnJlbnRWaWV3ID09PSAneWVhcicpIHsKICAgICAgICAgICAgICAgIHRoaXMuZGVjcmVtZW50RGVjYWRlKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICBpZiAodGhpcy5jdXJyZW50TW9udGggPT09IDApIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRNb250aCA9IDExOwogICAgICAgICAgICAgICAgICAgIHRoaXMuZGVjcmVtZW50WWVhcigpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50TW9udGgtLTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCdtb250aC1jaGFuZ2UnLCB7IG1vbnRoOiB0aGlzLmN1cnJlbnRNb250aCArIDEsIHllYXI6IHRoaXMuY3VycmVudFllYXIgfSk7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIG5hdkZvcndhcmQoZXZlbnQpIHsKICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKCiAgICAgICAgICAgIGlmICghdGhpcy5pc0VuYWJsZWQoKSkgewogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAodGhpcy5jdXJyZW50VmlldyA9PT0gJ21vbnRoJykgewogICAgICAgICAgICAgICAgdGhpcy5pbmNyZW1lbnRZZWFyKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSBpZiAodGhpcy5jdXJyZW50VmlldyA9PT0gJ3llYXInKSB7CiAgICAgICAgICAgICAgICB0aGlzLmluY3JlbWVudERlY2FkZSgpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgaWYgKHRoaXMuY3VycmVudE1vbnRoID09PSAxMSkgewogICAgICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudE1vbnRoID0gMDsKICAgICAgICAgICAgICAgICAgICB0aGlzLmluY3JlbWVudFllYXIoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudE1vbnRoKys7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgdGhpcy4kZW1pdCgnbW9udGgtY2hhbmdlJywgeyBtb250aDogdGhpcy5jdXJyZW50TW9udGggKyAxLCB5ZWFyOiB0aGlzLmN1cnJlbnRZZWFyIH0pOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBkZWNyZW1lbnRZZWFyKCkgewogICAgICAgICAgICB0aGlzLmN1cnJlbnRZZWFyLS07CiAgICAgICAgfSwKICAgICAgICBkZWNyZW1lbnREZWNhZGUoKSB7CiAgICAgICAgICAgIHRoaXMuY3VycmVudFllYXIgPSB0aGlzLmN1cnJlbnRZZWFyIC0gMTA7CiAgICAgICAgfSwKICAgICAgICBpbmNyZW1lbnRZZWFyKCkgewogICAgICAgICAgICB0aGlzLmN1cnJlbnRZZWFyKys7CiAgICAgICAgfSwKICAgICAgICBpbmNyZW1lbnREZWNhZGUoKSB7CiAgICAgICAgICAgIHRoaXMuY3VycmVudFllYXIgPSB0aGlzLmN1cnJlbnRZZWFyICsgMTA7CiAgICAgICAgfSwKICAgICAgICBzd2l0Y2hUb01vbnRoVmlldyhldmVudCkgewogICAgICAgICAgICB0aGlzLmN1cnJlbnRWaWV3ID0gJ21vbnRoJzsKICAgICAgICAgICAgc2V0VGltZW91dCh0aGlzLnVwZGF0ZUZvY3VzLCAwKTsKICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICB9LAogICAgICAgIHN3aXRjaFRvWWVhclZpZXcoZXZlbnQpIHsKICAgICAgICAgICAgdGhpcy5jdXJyZW50VmlldyA9ICd5ZWFyJzsKICAgICAgICAgICAgc2V0VGltZW91dCh0aGlzLnVwZGF0ZUZvY3VzLCAwKTsKICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICB9LAogICAgICAgIGlzRW5hYmxlZCgpIHsKICAgICAgICAgICAgcmV0dXJuICF0aGlzLiRhdHRycy5kaXNhYmxlZCAmJiAhdGhpcy4kYXR0cnMucmVhZG9ubHk7CiAgICAgICAgfSwKICAgICAgICB1cGRhdGVDdXJyZW50VGltZU1ldGEoZGF0ZSkgewogICAgICAgICAgICBjb25zdCBob3VycyA9IGRhdGUuZ2V0SG91cnMoKTsKCiAgICAgICAgICAgIGlmICh0aGlzLmhvdXJGb3JtYXQgPT09ICcxMicpIHsKICAgICAgICAgICAgICAgIHRoaXMucG0gPSBob3VycyA+IDExOwoKICAgICAgICAgICAgICAgIGlmIChob3VycyA+PSAxMikKICAgICAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRIb3VyID0gKGhvdXJzID09IDEyKSA/IDEyIDogaG91cnMgLSAxMjsKICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRIb3VyID0gKGhvdXJzID09IDApID8gMTIgOiBob3VyczsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudEhvdXIgPSBkYXRlLmdldEhvdXJzKCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHRoaXMuY3VycmVudE1pbnV0ZSA9IGRhdGUuZ2V0TWludXRlcygpOwogICAgICAgICAgICB0aGlzLmN1cnJlbnRTZWNvbmQgPSBkYXRlLmdldFNlY29uZHMoKTsKICAgICAgICB9LAogICAgICAgIGJpbmRPdXRzaWRlQ2xpY2tMaXN0ZW5lcigpIHsKICAgICAgICAgICAgaWYgKCF0aGlzLm91dHNpZGVDbGlja0xpc3RlbmVyKSB7CiAgICAgICAgICAgICAgICB0aGlzLm91dHNpZGVDbGlja0xpc3RlbmVyID0gKGV2ZW50KSA9PiB7CiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMub3ZlcmxheVZpc2libGUgJiYgdGhpcy5pc091dHNpZGVDbGlja2VkKGV2ZW50KSkgewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm92ZXJsYXlWaXNpYmxlID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIHRoaXMub3V0c2lkZUNsaWNrTGlzdGVuZXIpOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB1bmJpbmRPdXRzaWRlQ2xpY2tMaXN0ZW5lcigpIHsKICAgICAgICAgICAgaWYgKHRoaXMub3V0c2lkZUNsaWNrTGlzdGVuZXIpIHsKICAgICAgICAgICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIHRoaXMub3V0c2lkZUNsaWNrTGlzdGVuZXIpOwogICAgICAgICAgICAgICAgdGhpcy5vdXRzaWRlQ2xpY2tMaXN0ZW5lciA9IG51bGw7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGJpbmRTY3JvbGxMaXN0ZW5lcigpIHsKICAgICAgICAgICAgaWYgKCF0aGlzLnNjcm9sbEhhbmRsZXIpIHsKICAgICAgICAgICAgICAgIHRoaXMuc2Nyb2xsSGFuZGxlciA9IG5ldyBDb25uZWN0ZWRPdmVybGF5U2Nyb2xsSGFuZGxlcih0aGlzLiRlbCwgKCkgPT4gewogICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLm92ZXJsYXlWaXNpYmxlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMub3ZlcmxheVZpc2libGUgPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdGhpcy5zY3JvbGxIYW5kbGVyLmJpbmRTY3JvbGxMaXN0ZW5lcigpOwogICAgICAgIH0sCiAgICAgICAgdW5iaW5kU2Nyb2xsTGlzdGVuZXIoKSB7CiAgICAgICAgICAgIGlmICh0aGlzLnNjcm9sbEhhbmRsZXIpIHsKICAgICAgICAgICAgICAgIHRoaXMuc2Nyb2xsSGFuZGxlci51bmJpbmRTY3JvbGxMaXN0ZW5lcigpOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBiaW5kUmVzaXplTGlzdGVuZXIoKSB7CiAgICAgICAgICAgIGlmICghdGhpcy5yZXNpemVMaXN0ZW5lcikgewogICAgICAgICAgICAgICAgdGhpcy5yZXNpemVMaXN0ZW5lciA9ICgpID0+IHsKICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5vdmVybGF5VmlzaWJsZSkgewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm92ZXJsYXlWaXNpYmxlID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnJlc2l6ZUxpc3RlbmVyKTsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgdW5iaW5kUmVzaXplTGlzdGVuZXIoKSB7CiAgICAgICAgICAgIGlmICh0aGlzLnJlc2l6ZUxpc3RlbmVyKSB7CiAgICAgICAgICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5yZXNpemVMaXN0ZW5lcik7CiAgICAgICAgICAgICAgICB0aGlzLnJlc2l6ZUxpc3RlbmVyID0gbnVsbDsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgaXNPdXRzaWRlQ2xpY2tlZChldmVudCkgewogICAgICAgICAgICByZXR1cm4gISh0aGlzLiRlbC5pc1NhbWVOb2RlKGV2ZW50LnRhcmdldCkgfHwgdGhpcy5pc05hdkljb25DbGlja2VkKGV2ZW50KSB8fAogICAgICAgICAgICAgICAgdGhpcy4kZWwuY29udGFpbnMoZXZlbnQudGFyZ2V0KSB8fCAodGhpcy4kcmVmcy5vdmVybGF5ICYmIHRoaXMuJHJlZnMub3ZlcmxheS5jb250YWlucyhldmVudC50YXJnZXQpKSk7CiAgICAgICAgfSwKICAgICAgICBpc05hdkljb25DbGlja2VkKGV2ZW50KSB7CiAgICAgICAgICAgIHJldHVybiAoRG9tSGFuZGxlci5oYXNDbGFzcyhldmVudC50YXJnZXQsICdwLWRhdGVwaWNrZXItcHJldicpIHx8IERvbUhhbmRsZXIuaGFzQ2xhc3MoZXZlbnQudGFyZ2V0LCAncC1kYXRlcGlja2VyLXByZXYtaWNvbicpCiAgICAgICAgICAgICAgICB8fCBEb21IYW5kbGVyLmhhc0NsYXNzKGV2ZW50LnRhcmdldCwgJ3AtZGF0ZXBpY2tlci1uZXh0JykgfHwgRG9tSGFuZGxlci5oYXNDbGFzcyhldmVudC50YXJnZXQsICdwLWRhdGVwaWNrZXItbmV4dC1pY29uJykpOwogICAgICAgIH0sCiAgICAgICAgYWxpZ25PdmVybGF5KCkgewogICAgICAgICAgICBpZiAodGhpcy50b3VjaFVJKSB7CiAgICAgICAgICAgICAgICB0aGlzLmVuYWJsZU1vZGFsaXR5KCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSBpZiAodGhpcy4kcmVmcy5vdmVybGF5KSB7CiAgICAgICAgICAgICAgICBpZiAodGhpcy5hcHBlbmRUbykKICAgICAgICAgICAgICAgICAgICBEb21IYW5kbGVyLmFic29sdXRlUG9zaXRpb24odGhpcy4kcmVmcy5vdmVybGF5LCB0aGlzLiRlbCk7CiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgRG9tSGFuZGxlci5yZWxhdGl2ZVBvc2l0aW9uKHRoaXMuJHJlZnMub3ZlcmxheSwgdGhpcy4kZWwpOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBvbkJ1dHRvbkNsaWNrKCkgewogICAgICAgICAgICBpZiAodGhpcy5pc0VuYWJsZWQoKSkgewogICAgICAgICAgICAgICAgaWYgKCF0aGlzLm92ZXJsYXlWaXNpYmxlKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy4kcmVmcy5pbnB1dC4kZWwuZm9jdXMoKTsKICAgICAgICAgICAgICAgICAgICB0aGlzLm92ZXJsYXlWaXNpYmxlID0gdHJ1ZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgIHRoaXMub3ZlcmxheVZpc2libGUgPSBmYWxzZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgaXNEYXRlRGlzYWJsZWQoZGF5LCBtb250aCwgeWVhcikgewogICAgICAgICAgICBpZiAodGhpcy5kaXNhYmxlZERhdGVzKSB7CiAgICAgICAgICAgICAgICBmb3IgKGxldCBkaXNhYmxlZERhdGUgb2YgdGhpcy5kaXNhYmxlZERhdGVzKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKGRpc2FibGVkRGF0ZS5nZXRGdWxsWWVhcigpID09PSB5ZWFyICYmIGRpc2FibGVkRGF0ZS5nZXRNb250aCgpID09PSBtb250aCAmJiBkaXNhYmxlZERhdGUuZ2V0RGF0ZSgpID09PSBkYXkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfSwKICAgICAgICBpc0RheURpc2FibGVkKGRheSwgbW9udGgsIHllYXIpIHsKICAgICAgICAgICAgaWYgKHRoaXMuZGlzYWJsZWREYXlzKSB7CiAgICAgICAgICAgICAgICBsZXQgd2Vla2RheSA9IG5ldyBEYXRlKHllYXIsIG1vbnRoLCBkYXkpOwogICAgICAgICAgICAgICAgbGV0IHdlZWtkYXlOdW1iZXIgPSB3ZWVrZGF5LmdldERheSgpOwogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGlzYWJsZWREYXlzLmluZGV4T2Yod2Vla2RheU51bWJlcikgIT09IC0xOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9LAogICAgICAgIG9uTW9udGhEcm9wZG93bkNoYW5nZSh2YWx1ZSkgewogICAgICAgICAgICB0aGlzLmN1cnJlbnRNb250aCA9IHBhcnNlSW50KHZhbHVlKTsKICAgICAgICAgICAgdGhpcy4kZW1pdCgnbW9udGgtY2hhbmdlJywgeyBtb250aDogdGhpcy5jdXJyZW50TW9udGggKyAxLCB5ZWFyOiB0aGlzLmN1cnJlbnRZZWFyIH0pOwogICAgICAgIH0sCiAgICAgICAgb25ZZWFyRHJvcGRvd25DaGFuZ2UodmFsdWUpIHsKICAgICAgICAgICAgdGhpcy5jdXJyZW50WWVhciA9IHBhcnNlSW50KHZhbHVlKTsKICAgICAgICAgICAgdGhpcy4kZW1pdCgneWVhci1jaGFuZ2UnLCB7IG1vbnRoOiB0aGlzLmN1cnJlbnRNb250aCArIDEsIHllYXI6IHRoaXMuY3VycmVudFllYXIgfSk7CiAgICAgICAgfSwKICAgICAgICBvbkRhdGVTZWxlY3QoZXZlbnQsIGRhdGVNZXRhKSB7CiAgICAgICAgICAgIGlmICh0aGlzLiRhdHRycy5kaXNhYmxlZCB8fCAhZGF0ZU1ldGEuc2VsZWN0YWJsZSkgewogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9CgogICAgICAgICAgICBEb21IYW5kbGVyLmZpbmQodGhpcy4kcmVmcy5vdmVybGF5LCAnLnAtZGF0ZXBpY2tlci1jYWxlbmRhciB0ZCBzcGFuOm5vdCgucC1kaXNhYmxlZCknKS5mb3JFYWNoKGNlbGwgPT4gY2VsbC50YWJJbmRleCA9IC0xKTsKCiAgICAgICAgICAgIGlmIChldmVudCkgewogICAgICAgICAgICAgICAgZXZlbnQuY3VycmVudFRhcmdldC5mb2N1cygpOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAodGhpcy5pc011bHRpcGxlU2VsZWN0aW9uKCkgJiYgdGhpcy5pc1NlbGVjdGVkKGRhdGVNZXRhKSkgewogICAgICAgICAgICAgICAgbGV0IG5ld1ZhbHVlID0gdGhpcy52YWx1ZS5maWx0ZXIoZGF0ZSA9PiAhdGhpcy5pc0RhdGVFcXVhbHMoZGF0ZSwgZGF0ZU1ldGEpKTsKICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlTW9kZWwobmV3VmFsdWUpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgaWYgKHRoaXMuc2hvdWxkU2VsZWN0RGF0ZShkYXRlTWV0YSkpIHsKICAgICAgICAgICAgICAgICAgICBpZiAoZGF0ZU1ldGEub3RoZXJNb250aCkgewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRNb250aCA9IGRhdGVNZXRhLm1vbnRoOwogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRZZWFyID0gZGF0ZU1ldGEueWVhcjsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWxlY3REYXRlKGRhdGVNZXRhKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0RGF0ZShkYXRlTWV0YSk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAodGhpcy5pc1NpbmdsZVNlbGVjdGlvbigpICYmICghdGhpcy5zaG93VGltZSB8fCB0aGlzLmhpZGVPbkRhdGVUaW1lU2VsZWN0KSkgewogICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5vdmVybGF5VmlzaWJsZSA9IGZhbHNlOwogICAgICAgICAgICAgICAgfSwgMTUwKTsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgc2VsZWN0RGF0ZShkYXRlTWV0YSkgewogICAgICAgICAgICBsZXQgZGF0ZSA9IG5ldyBEYXRlKGRhdGVNZXRhLnllYXIsIGRhdGVNZXRhLm1vbnRoLCBkYXRlTWV0YS5kYXkpOwoKICAgICAgICAgICAgaWYgKHRoaXMuc2hvd1RpbWUpIHsKICAgICAgICAgICAgICAgIGlmICh0aGlzLmhvdXJGb3JtYXQgPT09ICcxMicgJiYgdGhpcy5wbSAmJiB0aGlzLmN1cnJlbnRIb3VyICE9IDEyKQogICAgICAgICAgICAgICAgICAgIGRhdGUuc2V0SG91cnMoTnVtYmVyKHRoaXMuY3VycmVudEhvdXIpICsgMTIpOwogICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgIGRhdGUuc2V0SG91cnMoTnVtYmVyKHRoaXMuY3VycmVudEhvdXIpKTsKCiAgICAgICAgICAgICAgICBkYXRlLnNldE1pbnV0ZXMoTnVtYmVyKHRoaXMuY3VycmVudE1pbnV0ZSkpOwogICAgICAgICAgICAgICAgZGF0ZS5zZXRTZWNvbmRzKE51bWJlcih0aGlzLmN1cnJlbnRTZWNvbmQpKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKHRoaXMubWluRGF0ZSAmJiB0aGlzLm1pbkRhdGUgPiBkYXRlKSB7CiAgICAgICAgICAgICAgICBkYXRlID0gdGhpcy5taW5EYXRlOwogICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50SG91ciA9IGRhdGUuZ2V0SG91cnMoKTsKICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudE1pbnV0ZSA9IGRhdGUuZ2V0TWludXRlcygpOwogICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50U2Vjb25kID0gZGF0ZS5nZXRTZWNvbmRzKCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICh0aGlzLm1heERhdGUgJiYgdGhpcy5tYXhEYXRlIDwgZGF0ZSkgewogICAgICAgICAgICAgICAgZGF0ZSA9IHRoaXMubWF4RGF0ZTsKICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudEhvdXIgPSBkYXRlLmdldEhvdXJzKCk7CiAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRNaW51dGUgPSBkYXRlLmdldE1pbnV0ZXMoKTsKICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudFNlY29uZCA9IGRhdGUuZ2V0U2Vjb25kcygpOwogICAgICAgICAgICB9CgogICAgICAgICAgICBsZXQgbW9kZWxWYWwgPSBudWxsOwoKICAgICAgICAgICAgaWYgKHRoaXMuaXNTaW5nbGVTZWxlY3Rpb24oKSkgewogICAgICAgICAgICAgICAgbW9kZWxWYWwgPSBkYXRlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgaWYgKHRoaXMuaXNNdWx0aXBsZVNlbGVjdGlvbigpKSB7CiAgICAgICAgICAgICAgICBtb2RlbFZhbCA9IHRoaXMudmFsdWUgPyBbLi4udGhpcy52YWx1ZSwgZGF0ZV0gOiBbZGF0ZV07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSBpZiAodGhpcy5pc1JhbmdlU2VsZWN0aW9uKCkpIHsKICAgICAgICAgICAgICAgIGlmICh0aGlzLnZhbHVlICYmIHRoaXMudmFsdWUubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICAgICAgbGV0IHN0YXJ0RGF0ZSA9IHRoaXMudmFsdWVbMF07CiAgICAgICAgICAgICAgICAgICAgbGV0IGVuZERhdGUgPSB0aGlzLnZhbHVlWzFdOwoKICAgICAgICAgICAgICAgICAgICBpZiAoIWVuZERhdGUgJiYgZGF0ZS5nZXRUaW1lKCkgPj0gc3RhcnREYXRlLmdldFRpbWUoKSkgewogICAgICAgICAgICAgICAgICAgICAgICBlbmREYXRlID0gZGF0ZTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0RGF0ZSA9IGRhdGU7CiAgICAgICAgICAgICAgICAgICAgICAgIGVuZERhdGUgPSBudWxsOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBtb2RlbFZhbCA9IFtzdGFydERhdGUsIGVuZERhdGVdOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgbW9kZWxWYWwgPSBbZGF0ZSwgbnVsbF07CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChtb2RlbFZhbCAhPT0gbnVsbCkgewogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVNb2RlbChtb2RlbFZhbCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGhpcy4kZW1pdCgnZGF0ZS1zZWxlY3QnLCBkYXRlKTsKICAgICAgICB9LAogICAgICAgIHVwZGF0ZU1vZGVsKHZhbHVlKSB7CiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgdmFsdWUpOwogICAgICAgIH0sCiAgICAgICAgc2hvdWxkU2VsZWN0RGF0ZSgpIHsKICAgICAgICAgICAgaWYgKHRoaXMuaXNNdWx0aXBsZVNlbGVjdGlvbigpKQogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubWF4RGF0ZUNvdW50ICE9IG51bGwgPyB0aGlzLm1heERhdGVDb3VudCA+ICh0aGlzLnZhbHVlID8gdGhpcy52YWx1ZS5sZW5ndGggOiAwKSA6IHRydWU7CiAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0sCiAgICAgICAgaXNTaW5nbGVTZWxlY3Rpb24oKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLnNlbGVjdGlvbk1vZGUgPT09ICdzaW5nbGUnOwogICAgICAgIH0sCiAgICAgICAgaXNSYW5nZVNlbGVjdGlvbigpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuc2VsZWN0aW9uTW9kZSA9PT0gJ3JhbmdlJzsKICAgICAgICB9LAogICAgICAgIGlzTXVsdGlwbGVTZWxlY3Rpb24oKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLnNlbGVjdGlvbk1vZGUgPT09ICdtdWx0aXBsZSc7CiAgICAgICAgfSwKICAgICAgICBmb3JtYXRWYWx1ZSh2YWx1ZSkgewogICAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykgewogICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlOwogICAgICAgICAgICB9CgogICAgICAgICAgICBsZXQgZm9ybWF0dGVkVmFsdWUgPSAnJzsKICAgICAgICAgICAgaWYgKHZhbHVlKSB7CiAgICAgICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzU2luZ2xlU2VsZWN0aW9uKCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0dGVkVmFsdWUgPSB0aGlzLmZvcm1hdERhdGVUaW1lKHZhbHVlKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAodGhpcy5pc011bHRpcGxlU2VsZWN0aW9uKCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB2YWx1ZS5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGRhdGVBc1N0cmluZyA9IHRoaXMuZm9ybWF0RGF0ZVRpbWUodmFsdWVbaV0pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0dGVkVmFsdWUgKz0gZGF0ZUFzU3RyaW5nOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGkgIT09ICh2YWx1ZS5sZW5ndGggLSAxKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1hdHRlZFZhbHVlICs9ICcsICc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAodGhpcy5pc1JhbmdlU2VsZWN0aW9uKCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlICYmIHZhbHVlLmxlbmd0aCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHN0YXJ0RGF0ZSA9IHZhbHVlWzBdOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGVuZERhdGUgPSB2YWx1ZVsxXTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3JtYXR0ZWRWYWx1ZSA9IHRoaXMuZm9ybWF0RGF0ZVRpbWUoc3RhcnREYXRlKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbmREYXRlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0dGVkVmFsdWUgKz0gJyAtICcgKyB0aGlzLmZvcm1hdERhdGVUaW1lKGVuZERhdGUpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgY2F0Y2ggKGVycikgewogICAgICAgICAgICAgICAgICAgIGZvcm1hdHRlZFZhbHVlID0gdmFsdWU7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiBmb3JtYXR0ZWRWYWx1ZTsKICAgICAgICB9LAogICAgICAgIGZvcm1hdERhdGVUaW1lKGRhdGUpIHsKICAgICAgICAgICAgbGV0IGZvcm1hdHRlZFZhbHVlID0gbnVsbDsKICAgICAgICAgICAgaWYgKGRhdGUpIHsKICAgICAgICAgICAgICAgIGlmICh0aGlzLnRpbWVPbmx5KSB7CiAgICAgICAgICAgICAgICAgICAgZm9ybWF0dGVkVmFsdWUgPSB0aGlzLmZvcm1hdFRpbWUoZGF0ZSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBmb3JtYXR0ZWRWYWx1ZSA9IHRoaXMuZm9ybWF0RGF0ZShkYXRlLCB0aGlzLmRhdGVQYXR0ZXJuKTsKICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5zaG93VGltZSkgewogICAgICAgICAgICAgICAgICAgICAgICBmb3JtYXR0ZWRWYWx1ZSArPSAnICcgKyB0aGlzLmZvcm1hdFRpbWUoZGF0ZSk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gZm9ybWF0dGVkVmFsdWU7CiAgICAgICAgfSwKICAgICAgICBmb3JtYXREYXRlKGRhdGUsIGZvcm1hdCkgewogICAgICAgICAgICBpZiAoIWRhdGUpIHsKICAgICAgICAgICAgICAgIHJldHVybiAnJzsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgbGV0IGlGb3JtYXQ7CiAgICAgICAgICAgIGNvbnN0IGxvb2tBaGVhZCA9IChtYXRjaCkgPT4gewogICAgICAgICAgICAgICAgY29uc3QgbWF0Y2hlcyA9IChpRm9ybWF0ICsgMSA8IGZvcm1hdC5sZW5ndGggJiYgZm9ybWF0LmNoYXJBdChpRm9ybWF0ICsgMSkgPT09IG1hdGNoKTsKICAgICAgICAgICAgICAgIGlmIChtYXRjaGVzKSB7CiAgICAgICAgICAgICAgICAgICAgaUZvcm1hdCsrOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgcmV0dXJuIG1hdGNoZXM7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBmb3JtYXROdW1iZXIgPSAobWF0Y2gsIHZhbHVlLCBsZW4pID0+IHsKICAgICAgICAgICAgICAgICAgICBsZXQgbnVtID0gJycgKyB2YWx1ZTsKICAgICAgICAgICAgICAgICAgICBpZiAobG9va0FoZWFkKG1hdGNoKSkgewogICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAobnVtLmxlbmd0aCA8IGxlbikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgbnVtID0gJzAnICsgbnVtOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIHJldHVybiBudW07CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgZm9ybWF0TmFtZSA9IChtYXRjaCwgdmFsdWUsIHNob3J0TmFtZXMsIGxvbmdOYW1lcykgPT4gewogICAgICAgICAgICAgICAgICAgIHJldHVybiAobG9va0FoZWFkKG1hdGNoKSA/IGxvbmdOYW1lc1t2YWx1ZV0gOiBzaG9ydE5hbWVzW3ZhbHVlXSk7CiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICBsZXQgb3V0cHV0ID0gJyc7CiAgICAgICAgICAgIGxldCBsaXRlcmFsID0gZmFsc2U7CgogICAgICAgICAgICBpZiAoZGF0ZSkgewogICAgICAgICAgICAgICAgZm9yIChpRm9ybWF0ID0gMDsgaUZvcm1hdCA8IGZvcm1hdC5sZW5ndGg7IGlGb3JtYXQrKykgewogICAgICAgICAgICAgICAgICAgIGlmIChsaXRlcmFsKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmb3JtYXQuY2hhckF0KGlGb3JtYXQpID09PSAnXCcnICYmICFsb29rQWhlYWQoJ1wnJykpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpdGVyYWwgPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dCArPSBmb3JtYXQuY2hhckF0KGlGb3JtYXQpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChmb3JtYXQuY2hhckF0KGlGb3JtYXQpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdkJzoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdXRwdXQgKz0gZm9ybWF0TnVtYmVyKCdkJywgZGF0ZS5nZXREYXRlKCksIDIpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnRCc6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3V0cHV0ICs9IGZvcm1hdE5hbWUoJ0QnLCBkYXRlLmdldERheSgpLCB0aGlzLiRwcmltZXZ1ZS5jb25maWcubG9jYWxlLmRheU5hbWVzU2hvcnQsIHRoaXMuJHByaW1ldnVlLmNvbmZpZy5sb2NhbGUuZGF5TmFtZXMpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnbyc6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3V0cHV0ICs9IGZvcm1hdE51bWJlcignbycsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1hdGgucm91bmQoKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3IERhdGUoZGF0ZS5nZXRGdWxsWWVhcigpLCBkYXRlLmdldE1vbnRoKCksIGRhdGUuZ2V0RGF0ZSgpKS5nZXRUaW1lKCkgLQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3IERhdGUoZGF0ZS5nZXRGdWxsWWVhcigpLCAwLCAwKS5nZXRUaW1lKCkpIC8gODY0MDAwMDApLCAzKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ20nOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dCArPSBmb3JtYXROdW1iZXIoJ20nLCBkYXRlLmdldE1vbnRoKCkgKyAxLCAyKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ00nOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dCArPSBmb3JtYXROYW1lKCdNJywgZGF0ZS5nZXRNb250aCgpLCB0aGlzLiRwcmltZXZ1ZS5jb25maWcubG9jYWxlLm1vbnRoTmFtZXNTaG9ydCwgdGhpcy4kcHJpbWV2dWUuY29uZmlnLmxvY2FsZS5tb250aE5hbWVzKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ3knOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dCArPSBsb29rQWhlYWQoJ3knKSA/IGRhdGUuZ2V0RnVsbFllYXIoKSA6IChkYXRlLmdldEZ1bGxZZWFyKCkgJSAxMDAgPCAxMCA/ICcwJyA6ICcnKSArIChkYXRlLmdldEZ1bGxZZWFyKCkgJSAxMDApOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnQCc6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3V0cHV0ICs9IGRhdGUuZ2V0VGltZSgpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnISc6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3V0cHV0ICs9IGRhdGUuZ2V0VGltZSgpICogMTAwMDAgKyB0aGlzLnRpY2tzVG8xOTcwOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnXCcnOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChsb29rQWhlYWQoJ1wnJykpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3V0cHV0ICs9ICdcJyc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGl0ZXJhbCA9IHRydWU7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdXRwdXQgKz0gZm9ybWF0LmNoYXJBdChpRm9ybWF0KTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gb3V0cHV0OwogICAgICAgIH0sCiAgICAgICAgZm9ybWF0VGltZShkYXRlKSB7CiAgICAgICAgICAgIGlmICghZGF0ZSkgewogICAgICAgICAgICAgICAgcmV0dXJuICcnOwogICAgICAgICAgICB9CgogICAgICAgICAgICBsZXQgb3V0cHV0ID0gJyc7CiAgICAgICAgICAgIGxldCBob3VycyA9IGRhdGUuZ2V0SG91cnMoKTsKICAgICAgICAgICAgbGV0IG1pbnV0ZXMgPSBkYXRlLmdldE1pbnV0ZXMoKTsKICAgICAgICAgICAgbGV0IHNlY29uZHMgPSBkYXRlLmdldFNlY29uZHMoKTsKCiAgICAgICAgICAgIGlmICh0aGlzLmhvdXJGb3JtYXQgPT09ICcxMicgJiYgaG91cnMgPiAxMSAmJiBob3VycyAhPT0gMTIpIHsKICAgICAgICAgICAgICAgIGhvdXJzIC09IDEyOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAodGhpcy5ob3VyRm9ybWF0ID09PSAnMTInKSB7CiAgICAgICAgICAgICAgICBvdXRwdXQgKz0gaG91cnMgPT09IDAgPyAxMiA6IChob3VycyA8IDEwKSA/ICcwJyArIGhvdXJzIDogaG91cnM7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICBvdXRwdXQgKz0gKGhvdXJzIDwgMTApID8gJzAnICsgaG91cnMgOiBob3VyczsKICAgICAgICAgICAgfQogICAgICAgICAgICBvdXRwdXQgKz0gJzonOwogICAgICAgICAgICBvdXRwdXQgKz0gKG1pbnV0ZXMgPCAxMCkgPyAnMCcgKyBtaW51dGVzIDogbWludXRlczsKCiAgICAgICAgICAgIGlmICh0aGlzLnNob3dTZWNvbmRzKSB7CiAgICAgICAgICAgICAgICBvdXRwdXQgKz0gJzonOwogICAgICAgICAgICAgICAgb3V0cHV0ICs9IChzZWNvbmRzIDwgMTApID8gJzAnICsgc2Vjb25kcyA6IHNlY29uZHM7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICh0aGlzLmhvdXJGb3JtYXQgPT09ICcxMicpIHsKICAgICAgICAgICAgICAgIG91dHB1dCArPSBkYXRlLmdldEhvdXJzKCkgPiAxMSA/ICcgUE0nIDogJyBBTSc7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiBvdXRwdXQ7CiAgICAgICAgfSwKICAgICAgICBvblRvZGF5QnV0dG9uQ2xpY2soZXZlbnQpIHsKICAgICAgICAgICAgbGV0IGRhdGUgPSBuZXcgRGF0ZSgpOwogICAgICAgICAgICBsZXQgZGF0ZU1ldGEgPSB7CiAgICAgICAgICAgICAgICBkYXk6IGRhdGUuZ2V0RGF0ZSgpLAogICAgICAgICAgICAgICAgbW9udGg6IGRhdGUuZ2V0TW9udGgoKSwKICAgICAgICAgICAgICAgIHllYXI6IGRhdGUuZ2V0RnVsbFllYXIoKSwKICAgICAgICAgICAgICAgIG90aGVyTW9udGg6IGRhdGUuZ2V0TW9udGgoKSAhPT0gdGhpcy5jdXJyZW50TW9udGggfHwgZGF0ZS5nZXRGdWxsWWVhcigpICE9PSB0aGlzLmN1cnJlbnRZZWFyLAogICAgICAgICAgICAgICAgdG9kYXk6IHRydWUsCiAgICAgICAgICAgICAgICBzZWxlY3RhYmxlOiB0cnVlCiAgICAgICAgICAgIH07CgogICAgICAgICAgICB0aGlzLm9uRGF0ZVNlbGVjdChudWxsLCBkYXRlTWV0YSk7CiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3RvZGF5LWNsaWNrJywgZGF0ZSk7CiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgfSwKICAgICAgICBvblNldEJ1dHRvbkNsaWNrKCkgewogICAgICAgICAgICB0cnl7CiAgICAgICAgICAgIHRoaXMuc2V0QnV0dG9uTG9hZGluZyA9IHRydWU7CiAgICAgICAgICAgIEV2ZW50QnVzLiRlbWl0KCdTRVRfVElNRScpCiAgICAgICAgICAgIH0KICAgICAgICAgICAgY2F0Y2goZXJyKXsKICAgICAgICAgICAgICAgIHRoaXMuc2V0QnV0dG9uTG9hZGluZyA9IGZhbHNlCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIG9uU2V0RGF0ZUNsaWNrKCkgewogICAgICAgICAgICBFdmVudEJ1cy4kZW1pdCgnU0VUX0RBVEUnKQogICAgICAgIH0sCiAgICAgICAgb25DbGVhckJ1dHRvbkNsaWNrKGV2ZW50KSB7CiAgICAgICAgICAgIHRoaXMudXBkYXRlTW9kZWwobnVsbCk7CiAgICAgICAgICAgIHRoaXMub3ZlcmxheVZpc2libGUgPSBmYWxzZTsKICAgICAgICAgICAgdGhpcy4kZW1pdCgnY2xlYXItY2xpY2snLCBldmVudCk7CiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgfSwKICAgICAgICBvblRpbWVQaWNrZXJFbGVtZW50TW91c2VEb3duKGV2ZW50LCB0eXBlLCBkaXJlY3Rpb24pIHsKICAgICAgICAgICAgaWYgKHRoaXMuaXNFbmFibGVkKCkpIHsKICAgICAgICAgICAgICAgIHRoaXMucmVwZWF0KGV2ZW50LCBudWxsLCB0eXBlLCBkaXJlY3Rpb24pOwogICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgb25UaW1lUGlja2VyRWxlbWVudE1vdXNlVXAoZXZlbnQpIHsKICAgICAgICAgICAgaWYgKHRoaXMuaXNFbmFibGVkKCkpIHsKICAgICAgICAgICAgICAgIHRoaXMuY2xlYXJUaW1lUGlja2VyVGltZXIoKTsKICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlTW9kZWxUaW1lKCk7CiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBvblRpbWVQaWNrZXJFbGVtZW50TW91c2VMZWF2ZSgpIHsKICAgICAgICAgICAgdGhpcy5jbGVhclRpbWVQaWNrZXJUaW1lcigpOwogICAgICAgIH0sCiAgICAgICAgcmVwZWF0KGV2ZW50LCBpbnRlcnZhbCwgdHlwZSwgZGlyZWN0aW9uKSB7CiAgICAgICAgICAgIGxldCBpID0gaW50ZXJ2YWwgfHwgNTAwOwoKICAgICAgICAgICAgdGhpcy5jbGVhclRpbWVQaWNrZXJUaW1lcigpOwogICAgICAgICAgICB0aGlzLnRpbWVQaWNrZXJUaW1lciA9IHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgICAgICAgdGhpcy5yZXBlYXQoZXZlbnQsIDEwMCwgdHlwZSwgZGlyZWN0aW9uKTsKICAgICAgICAgICAgfSwgaSk7CgogICAgICAgICAgICBzd2l0Y2ggKHR5cGUpIHsKICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICBpZiAoZGlyZWN0aW9uID09PSAxKQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmluY3JlbWVudEhvdXIoZXZlbnQpOwogICAgICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5kZWNyZW1lbnRIb3VyKGV2ZW50KTsKICAgICAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgICAgICAgICAgaWYgKGRpcmVjdGlvbiA9PT0gMSkKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pbmNyZW1lbnRNaW51dGUoZXZlbnQpOwogICAgICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5kZWNyZW1lbnRNaW51dGUoZXZlbnQpOwogICAgICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgICAgICBpZiAoZGlyZWN0aW9uID09PSAxKQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmluY3JlbWVudFNlY29uZChldmVudCk7CiAgICAgICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRlY3JlbWVudFNlY29uZChldmVudCk7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGNvbnZlcnRUbzI0SG91cihob3VycywgcG0pIHsKICAgICAgICAgICAgaWYgKHRoaXMuaG91ckZvcm1hdCA9PSAnMTInKSB7CiAgICAgICAgICAgICAgICBpZiAoaG91cnMgPT09IDEyKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChwbSA/IDEyIDogMCk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIHJldHVybiAocG0gPyBob3VycyArIDEyIDogaG91cnMpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBob3VyczsKICAgICAgICB9LAogICAgICAgIHZhbGlkYXRlVGltZShob3VyLCBtaW51dGUsIHNlY29uZCwgcG0pIHsKICAgICAgICAgICAgbGV0IHZhbHVlID0gdGhpcy5pc0NvbXBhcmFibGUoKSA/IHRoaXMudmFsdWUgOiB0aGlzLnZpZXdEYXRlOwogICAgICAgICAgICBjb25zdCBjb252ZXJ0ZWRIb3VyID0gdGhpcy5jb252ZXJ0VG8yNEhvdXIoaG91ciwgcG0pOwoKICAgICAgICAgICAgaWYgKHRoaXMuaXNSYW5nZVNlbGVjdGlvbigpKSB7CiAgICAgICAgICAgICAgICB2YWx1ZSA9IHRoaXMudmFsdWVbMV0gfHwgdGhpcy52YWx1ZVswXTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAodGhpcy5pc011bHRpcGxlU2VsZWN0aW9uKCkpIHsKICAgICAgICAgICAgICAgIHZhbHVlID0gdGhpcy52YWx1ZVt0aGlzLnZhbHVlLmxlbmd0aCAtIDFdOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGNvbnN0IHZhbHVlRGF0ZVN0cmluZyA9IHZhbHVlID8gdmFsdWUudG9EYXRlU3RyaW5nKCkgOiBudWxsOwogICAgICAgICAgICBpZiAodGhpcy5taW5EYXRlICYmIHZhbHVlRGF0ZVN0cmluZyAmJiB0aGlzLm1pbkRhdGUudG9EYXRlU3RyaW5nKCkgPT09IHZhbHVlRGF0ZVN0cmluZykgewogICAgICAgICAgICAgICAgaWYgKHRoaXMubWluRGF0ZS5nZXRIb3VycygpID4gY29udmVydGVkSG91cikgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGlmICh0aGlzLm1pbkRhdGUuZ2V0SG91cnMoKSA9PT0gY29udmVydGVkSG91cikgewogICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLm1pbkRhdGUuZ2V0TWludXRlcygpID4gbWludXRlIHx8IG1pbnV0ZSA+IDYwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudEhvdXIgPSB0aGlzLm1pbkRhdGUuZ2V0SG91cnMoKTsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50TWluID0gdGhpcy5taW5EYXRlLmdldE1pbnV0ZXMoKTsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5taW5EYXRlLmdldE1pbnV0ZXMoKSA9PT0gbWludXRlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLm1pbkRhdGUuZ2V0U2Vjb25kcygpID4gc2Vjb25kKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICh0aGlzLm1heERhdGUgJiYgdmFsdWVEYXRlU3RyaW5nICYmIHRoaXMubWF4RGF0ZS50b0RhdGVTdHJpbmcoKSA9PT0gdmFsdWVEYXRlU3RyaW5nKSB7CiAgICAgICAgICAgICAgICBpZiAodGhpcy5tYXhEYXRlLmdldEhvdXJzKCkgPCBjb252ZXJ0ZWRIb3VyKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgaWYgKHRoaXMubWF4RGF0ZS5nZXRIb3VycygpID09PSBjb252ZXJ0ZWRIb3VyKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMubWF4RGF0ZS5nZXRNaW51dGVzKCkgPCBtaW51dGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5tYXhEYXRlLmdldE1pbnV0ZXMoKSA9PT0gbWludXRlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLm1heERhdGUuZ2V0U2Vjb25kcygpIDwgc2Vjb25kKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGhpcy5kaXNhYmxlSG91cnMgPSBmYWxzZQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9LAogICAgICAgIGluY3JlbWVudEhvdXIoZXZlbnQpIHsKICAgICAgICAgICAgbGV0IHByZXZIb3VyID0gdGhpcy5jdXJyZW50SG91cjsKICAgICAgICAgICAgbGV0IG5ld0hvdXIgPSBOdW1iZXIodGhpcy5jdXJyZW50SG91cikgKyB0aGlzLnN0ZXBIb3VyOwogICAgICAgICAgICBsZXQgbmV3UE0gPSB0aGlzLnBtOwogICAgICAgICAgICBpZiAodGhpcy5ob3VyRm9ybWF0ID09ICcyNCcpCiAgICAgICAgICAgICAgICBuZXdIb3VyID0gKG5ld0hvdXIgPj0gMjQpID8gKG5ld0hvdXIgLSAyNCkgOiBuZXdIb3VyOwogICAgICAgICAgICBlbHNlIGlmICh0aGlzLmhvdXJGb3JtYXQgPT0gJzEyJykgewogICAgICAgICAgICAgICAgLy8gQmVmb3JlIHRoZSBBTS9QTSBicmVhaywgbm93IGFmdGVyCiAgICAgICAgICAgICAgICBpZiAocHJldkhvdXIgPCAxMiAmJiBuZXdIb3VyID4gMTEpIHsKICAgICAgICAgICAgICAgICAgICBuZXdQTSA9ICF0aGlzLnBtOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgbmV3SG91ciA9IChuZXdIb3VyID49IDEzKSA/IChuZXdIb3VyIC0gMTIpIDogbmV3SG91cjsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAodGhpcy52YWxpZGF0ZVRpbWUobmV3SG91ciwgdGhpcy5jdXJyZW50TWludXRlLCB0aGlzLmN1cnJlbnRTZWNvbmQsIG5ld1BNKSkgewogICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50SG91ciA9IG5ld0hvdXI7CiAgICAgICAgICAgICAgICB0aGlzLnBtID0gbmV3UE07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICB0aGlzLnZhbGlkYXRlKCk7CiAgICAgICAgICAgIH0KCgogICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgIH0sCiAgICAgICAgZGVjcmVtZW50SG91cihldmVudCkgewogICAgICAgICAgICBsZXQgbmV3SG91ciA9IHRoaXMuY3VycmVudEhvdXIgLSB0aGlzLnN0ZXBIb3VyOwogICAgICAgICAgICBsZXQgbmV3UE0gPSB0aGlzLnBtOwogICAgICAgICAgICBpZiAodGhpcy5ob3VyRm9ybWF0ID09ICcyNCcpCiAgICAgICAgICAgICAgICBuZXdIb3VyID0gKG5ld0hvdXIgPCAwKSA/ICgyNCArIG5ld0hvdXIpIDogbmV3SG91cjsKICAgICAgICAgICAgZWxzZSBpZiAodGhpcy5ob3VyRm9ybWF0ID09ICcxMicpIHsKICAgICAgICAgICAgICAgIC8vIElmIHdlIHdlcmUgYXQgbm9vbi9taWRuaWdodCwgdGhlbiBzd2l0Y2gKICAgICAgICAgICAgICAgIGlmICh0aGlzLmN1cnJlbnRIb3VyID09PSAxMikgewogICAgICAgICAgICAgICAgICAgIG5ld1BNID0gIXRoaXMucG07CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBuZXdIb3VyID0gKG5ld0hvdXIgPD0gMCkgPyAoMTIgKyBuZXdIb3VyKSA6IG5ld0hvdXI7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICh0aGlzLnZhbGlkYXRlVGltZShuZXdIb3VyLCB0aGlzLmN1cnJlbnRNaW51dGUsIHRoaXMuY3VycmVudFNlY29uZCwgbmV3UE0pKSB7CiAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRIb3VyID0gbmV3SG91cjsKICAgICAgICAgICAgICAgIHRoaXMucG0gPSBuZXdQTTsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgIHRoaXMudmFsaWRhdGUoKTsKCiAgICAgICAgICAgIH0KICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICB9LAogICAgICAgIGluY3JlbWVudE1pbnV0ZShldmVudCkgewogICAgICAgICAgICBsZXQgbmV3TWludXRlID0gdGhpcy5jdXJyZW50TWludXRlICsgdGhpcy5zdGVwTWludXRlOwogICAgICAgICAgICBpZiAodGhpcy52YWxpZGF0ZVRpbWUodGhpcy5jdXJyZW50SG91ciwgbmV3TWludXRlLCB0aGlzLmN1cnJlbnRTZWNvbmQsIHRoaXMucG0pKSB7CiAgICAgICAgICAgICAgICBpZiAodGhpcy5jdXJyZW50TWludXRlID09PSA0NSkgewogICAgICAgICAgICAgICAgICAgIHRoaXMuaW5jcmVtZW50SG91cihldmVudCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRNaW51dGUgPSAobmV3TWludXRlID4gNTkpID8gbmV3TWludXRlIC0gNjAgOiBuZXdNaW51dGU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICB0aGlzLnZhbGlkYXRlKCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgfSwKICAgICAgICBkZWNyZW1lbnRNaW51dGUoZXZlbnQpIHsKICAgICAgICAgICAgbGV0IG5ld01pbnV0ZSA9IHRoaXMuY3VycmVudE1pbnV0ZSAtIHRoaXMuc3RlcE1pbnV0ZTsKICAgICAgICAgICAgbmV3TWludXRlID0gKG5ld01pbnV0ZSA8IDApID8gNjAgKyBuZXdNaW51dGUgOiBuZXdNaW51dGU7CiAgICAgICAgICAgIGlmICh0aGlzLnZhbGlkYXRlVGltZSh0aGlzLmN1cnJlbnRIb3VyLCBuZXdNaW51dGUsIHRoaXMuY3VycmVudFNlY29uZCwgdGhpcy5wbSkpIHsKICAgICAgICAgICAgICAgIGlmICh0aGlzLmN1cnJlbnRNaW51dGUgPT09IDApIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLmRlY3JlbWVudEhvdXIoZXZlbnQpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50TWludXRlID0gbmV3TWludXRlOwoKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgIHRoaXMudmFsaWRhdGUoKTsKCiAgICAgICAgICAgIH0KICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICB9LAogICAgICAgIGluY3JlbWVudFNlY29uZChldmVudCkgewogICAgICAgICAgICBsZXQgbmV3U2Vjb25kID0gdGhpcy5jdXJyZW50U2Vjb25kICsgdGhpcy5zdGVwU2Vjb25kOwogICAgICAgICAgICBpZiAodGhpcy52YWxpZGF0ZVRpbWUodGhpcy5jdXJyZW50SG91ciwgdGhpcy5jdXJyZW50TWludXRlLCBuZXdTZWNvbmQsIHRydWUpKSB7CiAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRTZWNvbmQgPSAobmV3U2Vjb25kID4gNTkpID8gbmV3U2Vjb25kIC0gNjAgOiBuZXdTZWNvbmQ7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgfSwKICAgICAgICBkZWNyZW1lbnRTZWNvbmQoZXZlbnQpIHsKICAgICAgICAgICAgbGV0IG5ld1NlY29uZCA9IHRoaXMuY3VycmVudFNlY29uZCAtIHRoaXMuc3RlcFNlY29uZDsKICAgICAgICAgICAgbmV3U2Vjb25kID0gKG5ld1NlY29uZCA8IDApID8gNjAgKyBuZXdTZWNvbmQgOiBuZXdTZWNvbmQ7CiAgICAgICAgICAgIGlmICh0aGlzLnZhbGlkYXRlVGltZSh0aGlzLmN1cnJlbnRIb3VyLCB0aGlzLmN1cnJlbnRNaW51dGUsIG5ld1NlY29uZCwgdHJ1ZSkpIHsKICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudFNlY29uZCA9IG5ld1NlY29uZDsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICB9LAogICAgICAgIHVwZGF0ZU1vZGVsVGltZSgpIHsKICAgICAgICAgICAgdGhpcy50aW1lUGlja2VyQ2hhbmdlID0gdHJ1ZTsKICAgICAgICAgICAgbGV0IHZhbHVlID0gdGhpcy5pc0NvbXBhcmFibGUoKSA/IHRoaXMudmFsdWUgOiBuZXcgRGF0ZSgpOwoKICAgICAgICAgICAgaWYgKHRoaXMuaXNSYW5nZVNlbGVjdGlvbigpKSB7CiAgICAgICAgICAgICAgICB2YWx1ZSA9IHRoaXMudmFsdWVbMV0gfHwgdGhpcy52YWx1ZVswXTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAodGhpcy5pc011bHRpcGxlU2VsZWN0aW9uKCkpIHsKICAgICAgICAgICAgICAgIHZhbHVlID0gdGhpcy52YWx1ZVt0aGlzLnZhbHVlLmxlbmd0aCAtIDFdOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHZhbHVlID0gdmFsdWUgPyBuZXcgRGF0ZSh2YWx1ZS5nZXRUaW1lKCkpIDogbmV3IERhdGUoKTsKICAgICAgICAgICAgaWYgKHRoaXMuaG91ckZvcm1hdCA9PSAnMTInKSB7CiAgICAgICAgICAgICAgICBpZiAoTnVtYmVyKHRoaXMuY3VycmVudEhvdXIpID09PSAxMikgewogICAgICAgICAgICAgICAgICAgIHZhbHVlLnNldEhvdXJzKHRoaXMucG0gPyAxMiA6IDApOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgdmFsdWUuc2V0SG91cnModGhpcy5wbSA/IE51bWJlcih0aGlzLmN1cnJlbnRIb3VyKSArIDEyIDogTnVtYmVyKHRoaXMuY3VycmVudEhvdXIpKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgIHZhbHVlLnNldEhvdXJzKE51bWJlcih0aGlzLmN1cnJlbnRIb3VyKSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdmFsdWUuc2V0TWludXRlcyhOdW1iZXIodGhpcy5jdXJyZW50TWludXRlKSk7CiAgICAgICAgICAgIHZhbHVlLnNldFNlY29uZHMoTnVtYmVyKHRoaXMuY3VycmVudFNlY29uZCkpOwogICAgICAgICAgICBpZiAodGhpcy5pc1JhbmdlU2VsZWN0aW9uKCkpIHsKICAgICAgICAgICAgICAgIGlmICh0aGlzLnZhbHVlWzFdKQogICAgICAgICAgICAgICAgICAgIHZhbHVlID0gW3RoaXMudmFsdWVbMF0sIHZhbHVlXTsKICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IFt2YWx1ZSwgbnVsbF07CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICh0aGlzLmlzTXVsdGlwbGVTZWxlY3Rpb24oKSkgewogICAgICAgICAgICAgICAgdmFsdWUgPSBbLi4udGhpcy52YWx1ZS5zbGljZSgwLCAtMSksIHZhbHVlXTsKICAgICAgICAgICAgfQogICAgICAgICAgICAvLyBjb25zb2xlLmxvZyh2YWx1ZSkKICAgICAgICAgICAgdGhpcy51cGRhdGVNb2RlbCh2YWx1ZSk7CiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ2RhdGUtc2VsZWN0JywgdmFsdWUpOwogICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHRoaXMudGltZVBpY2tlckNoYW5nZSA9IGZhbHNlLCAwKTsKICAgICAgICB9LAogICAgICAgIHRvZ2dsZUFNUE0oZXZlbnQpIHsKICAgICAgICAgICAgdGhpcy5wbSA9ICF0aGlzLnBtOwogICAgICAgICAgICB0aGlzLnVwZGF0ZU1vZGVsVGltZSgpOwogICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgIH0sCiAgICAgICAgY2xlYXJUaW1lUGlja2VyVGltZXIoKSB7CiAgICAgICAgICAgIGlmICh0aGlzLnRpbWVQaWNrZXJUaW1lcikgewogICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVQaWNrZXJUaW1lcik7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIG9uTW9udGhTZWxlY3QoZXZlbnQsIG1vbnRoKSB7CiAgICAgICAgICAgIGlmICh0aGlzLnZpZXcgPT09ICdtb250aCcpIHsKICAgICAgICAgICAgICAgIHRoaXMub25EYXRlU2VsZWN0KGV2ZW50LCB7IHllYXI6IHRoaXMuY3VycmVudFllYXIsIG1vbnRoOiBtb250aCwgZGF5OiAxLCBzZWxlY3RhYmxlOiB0cnVlIH0pOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50TW9udGggPSBtb250aDsKICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudFZpZXcgPSAnZGF0ZSc7CiAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCdtb250aC1jaGFuZ2UnLCB7IG1vbnRoOiB0aGlzLmN1cnJlbnRNb250aCArIDEsIHllYXI6IHRoaXMuY3VycmVudFllYXIgfSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHNldFRpbWVvdXQodGhpcy51cGRhdGVGb2N1cywgMCk7CiAgICAgICAgfSwKICAgICAgICBvblllYXJTZWxlY3QoZXZlbnQsIHllYXIpIHsKICAgICAgICAgICAgaWYgKHRoaXMudmlldyA9PT0gJ3llYXInKSB7CiAgICAgICAgICAgICAgICB0aGlzLm9uRGF0ZVNlbGVjdChldmVudCwgeyB5ZWFyOiB5ZWFyLCBtb250aDogMCwgZGF5OiAxLCBzZWxlY3RhYmxlOiB0cnVlIH0pOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50WWVhciA9IHllYXI7CiAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRWaWV3ID0gJ21vbnRoJzsKICAgICAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3llYXItY2hhbmdlJywgeyBtb250aDogdGhpcy5jdXJyZW50TW9udGggKyAxLCB5ZWFyOiB0aGlzLmN1cnJlbnRZZWFyIH0pOwogICAgICAgICAgICB9CgogICAgICAgICAgICBzZXRUaW1lb3V0KHRoaXMudXBkYXRlRm9jdXMsIDApOwogICAgICAgIH0sCiAgICAgICAgZW5hYmxlTW9kYWxpdHkoKSB7CiAgICAgICAgICAgIGlmICghdGhpcy5tYXNrKSB7CiAgICAgICAgICAgICAgICB0aGlzLm1hc2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKICAgICAgICAgICAgICAgIHRoaXMubWFzay5zdHlsZS56SW5kZXggPSBTdHJpbmcocGFyc2VJbnQodGhpcy4kcmVmcy5vdmVybGF5LnN0eWxlLnpJbmRleCwgMTApIC0gMSk7CiAgICAgICAgICAgICAgICBEb21IYW5kbGVyLmFkZE11bHRpcGxlQ2xhc3Nlcyh0aGlzLm1hc2ssICdwLWRhdGVwaWNrZXItbWFzayBwLWRhdGVwaWNrZXItbWFzay1zY3JvbGxibG9ja2VyIHAtY29tcG9uZW50LW92ZXJsYXkgcC1jb21wb25lbnQtb3ZlcmxheS1lbnRlcicpOwoKICAgICAgICAgICAgICAgIHRoaXMubWFza0NsaWNrTGlzdGVuZXIgPSAoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5vdmVybGF5VmlzaWJsZSA9IGZhbHNlOwogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIHRoaXMubWFzay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMubWFza0NsaWNrTGlzdGVuZXIpOwoKICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGhpcy5tYXNrKTsKICAgICAgICAgICAgICAgIERvbUhhbmRsZXIuYWRkQ2xhc3MoZG9jdW1lbnQuYm9keSwgJ3Atb3ZlcmZsb3ctaGlkZGVuJyk7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGRpc2FibGVNb2RhbGl0eSgpIHsKICAgICAgICAgICAgaWYgKHRoaXMubWFzaykgewogICAgICAgICAgICAgICAgdGhpcy5vdmVybGF5VmlzaWJsZSA9IGZhbHNlOwoKICAgICAgICAgICAgICAgIERvbUhhbmRsZXIuYWRkQ2xhc3ModGhpcy5tYXNrLCAncC1jb21wb25lbnQtb3ZlcmxheS1sZWF2ZScpOwogICAgICAgICAgICAgICAgdGhpcy5tYXNrLmFkZEV2ZW50TGlzdGVuZXIoJ2FuaW1hdGlvbmVuZCcsICgpID0+IHsKICAgICAgICAgICAgICAgICAgICB0aGlzLmRlc3Ryb3lNYXNrKCk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgZGVzdHJveU1hc2soKSB7CiAgICAgICAgICAgIHRoaXMubWFzay5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMubWFza0NsaWNrTGlzdGVuZXIpOwogICAgICAgICAgICB0aGlzLm1hc2tDbGlja0xpc3RlbmVyID0gbnVsbDsKICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZCh0aGlzLm1hc2spOwogICAgICAgICAgICB0aGlzLm1hc2sgPSBudWxsOwoKICAgICAgICAgICAgbGV0IGJvZHlDaGlsZHJlbiA9IGRvY3VtZW50LmJvZHkuY2hpbGRyZW47CiAgICAgICAgICAgIGxldCBoYXNCbG9ja2VyTWFza3M7CiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYm9keUNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgICBsZXQgYm9keUNoaWxkID0gYm9keUNoaWxkcmVuW2ldOwogICAgICAgICAgICAgICAgaWYgKERvbUhhbmRsZXIuaGFzQ2xhc3MoYm9keUNoaWxkLCAncC1kYXRlcGlja2VyLW1hc2stc2Nyb2xsYmxvY2tlcicpKSB7CiAgICAgICAgICAgICAgICAgICAgaGFzQmxvY2tlck1hc2tzID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCFoYXNCbG9ja2VyTWFza3MpIHsKICAgICAgICAgICAgICAgIERvbUhhbmRsZXIucmVtb3ZlQ2xhc3MoZG9jdW1lbnQuYm9keSwgJ3Atb3ZlcmZsb3ctaGlkZGVuJyk7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHVwZGF0ZUN1cnJlbnRNZXRhRGF0YSgpIHsKICAgICAgICAgICAgY29uc3Qgdmlld0RhdGUgPSB0aGlzLnZpZXdEYXRlOwogICAgICAgICAgICB0aGlzLmN1cnJlbnRNb250aCA9IHZpZXdEYXRlLmdldE1vbnRoKCk7CiAgICAgICAgICAgIHRoaXMuY3VycmVudFllYXIgPSB2aWV3RGF0ZS5nZXRGdWxsWWVhcigpOwoKICAgICAgICAgICAgaWYgKHRoaXMuc2hvd1RpbWUgfHwgdGhpcy50aW1lT25seSkgewogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVDdXJyZW50VGltZU1ldGEodmlld0RhdGUpOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBpc1ZhbGlkU2VsZWN0aW9uKHZhbHVlKSB7CiAgICAgICAgICAgIGxldCBpc1ZhbGlkID0gdHJ1ZTsKICAgICAgICAgICAgaWYgKHRoaXMuaXNTaW5nbGVTZWxlY3Rpb24oKSkgewogICAgICAgICAgICAgICAgaWYgKCF0aGlzLmlzU2VsZWN0YWJsZSh2YWx1ZS5nZXREYXRlKCksIHZhbHVlLmdldE1vbnRoKCksIHZhbHVlLmdldEZ1bGxZZWFyKCksIGZhbHNlKSkgewogICAgICAgICAgICAgICAgICAgIGlzVmFsaWQgPSBmYWxzZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBlbHNlIGlmICh2YWx1ZS5ldmVyeSh2ID0+IHRoaXMuaXNTZWxlY3RhYmxlKHYuZ2V0RGF0ZSgpLCB2LmdldE1vbnRoKCksIHYuZ2V0RnVsbFllYXIoKSwgZmFsc2UpKSkgewogICAgICAgICAgICAgICAgaWYgKHRoaXMuaXNSYW5nZVNlbGVjdGlvbigpKSB7CiAgICAgICAgICAgICAgICAgICAgaXNWYWxpZCA9IHZhbHVlLmxlbmd0aCA+IDEgJiYgdmFsdWVbMV0gPiB2YWx1ZVswXSA/IHRydWUgOiBmYWxzZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gaXNWYWxpZDsKICAgICAgICB9LAogICAgICAgIHBhcnNlVmFsdWUodGV4dCkgewogICAgICAgICAgICBpZiAoIXRleHQgfHwgdGV4dC50cmltKCkubGVuZ3RoID09PSAwKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgbGV0IHZhbHVlOwoKICAgICAgICAgICAgaWYgKHRoaXMuaXNTaW5nbGVTZWxlY3Rpb24oKSkgewogICAgICAgICAgICAgICAgdmFsdWUgPSB0aGlzLnBhcnNlRGF0ZVRpbWUodGV4dCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSBpZiAodGhpcy5pc011bHRpcGxlU2VsZWN0aW9uKCkpIHsKICAgICAgICAgICAgICAgIGxldCB0b2tlbnMgPSB0ZXh0LnNwbGl0KCcsJyk7CiAgICAgICAgICAgICAgICB2YWx1ZSA9IFtdOwogICAgICAgICAgICAgICAgZm9yIChsZXQgdG9rZW4gb2YgdG9rZW5zKSB7CiAgICAgICAgICAgICAgICAgICAgdmFsdWUucHVzaCh0aGlzLnBhcnNlRGF0ZVRpbWUodG9rZW4udHJpbSgpKSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSBpZiAodGhpcy5pc1JhbmdlU2VsZWN0aW9uKCkpIHsKICAgICAgICAgICAgICAgIGxldCB0b2tlbnMgPSB0ZXh0LnNwbGl0KCcgLSAnKTsKICAgICAgICAgICAgICAgIHZhbHVlID0gW107CiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgICAgIHZhbHVlW2ldID0gdGhpcy5wYXJzZURhdGVUaW1lKHRva2Vuc1tpXS50cmltKCkpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gdmFsdWU7CiAgICAgICAgfSwKICAgICAgICBwYXJzZURhdGVUaW1lKHRleHQpIHsKICAgICAgICAgICAgbGV0IGRhdGU7CiAgICAgICAgICAgIGxldCBwYXJ0cyA9IHRleHQuc3BsaXQoJyAnKTsKCiAgICAgICAgICAgIGlmICh0aGlzLnRpbWVPbmx5KSB7CiAgICAgICAgICAgICAgICBkYXRlID0gbmV3IERhdGUoKTsKICAgICAgICAgICAgICAgIHRoaXMucG9wdWxhdGVUaW1lKGRhdGUsIHBhcnRzWzBdLCBwYXJ0c1sxXSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICBjb25zdCBkYXRlRm9ybWF0ID0gdGhpcy5kYXRlUGF0dGVybjsKICAgICAgICAgICAgICAgIGlmICh0aGlzLnNob3dUaW1lKSB7CiAgICAgICAgICAgICAgICAgICAgZGF0ZSA9IHRoaXMucGFyc2VEYXRlKHBhcnRzWzBdLCBkYXRlRm9ybWF0KTsKICAgICAgICAgICAgICAgICAgICB0aGlzLnBvcHVsYXRlVGltZShkYXRlLCBwYXJ0c1sxXSwgcGFydHNbMl0pOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgZGF0ZSA9IHRoaXMucGFyc2VEYXRlKHRleHQsIGRhdGVGb3JtYXQpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gZGF0ZTsKICAgICAgICB9LAogICAgICAgIHBvcHVsYXRlVGltZSh2YWx1ZSwgdGltZVN0cmluZywgYW1wbSkgewogICAgICAgICAgICBpZiAodGhpcy5ob3VyRm9ybWF0ID09ICcxMicgJiYgIWFtcG0pIHsKICAgICAgICAgICAgICAgIHRocm93ICdJbnZhbGlkIFRpbWUnOwogICAgICAgICAgICB9CgogICAgICAgICAgICB0aGlzLnBtID0gKGFtcG0gPT09ICdQTScgfHwgYW1wbSA9PT0gJ3BtJyk7CiAgICAgICAgICAgIGxldCB0aW1lID0gdGhpcy5wYXJzZVRpbWUodGltZVN0cmluZyk7CiAgICAgICAgICAgIHZhbHVlLnNldEhvdXJzKHRpbWUuaG91cik7CiAgICAgICAgICAgIHZhbHVlLnNldE1pbnV0ZXModGltZS5taW51dGUpOwogICAgICAgICAgICB2YWx1ZS5zZXRTZWNvbmRzKHRpbWUuc2Vjb25kKTsKICAgICAgICB9LAogICAgICAgIHBhcnNlVGltZSh2YWx1ZSkgewogICAgICAgICAgICBsZXQgdG9rZW5zID0gdmFsdWUuc3BsaXQoJzonKTsKICAgICAgICAgICAgbGV0IHZhbGlkVG9rZW5MZW5ndGggPSB0aGlzLnNob3dTZWNvbmRzID8gMyA6IDI7CiAgICAgICAgICAgIGxldCByZWdleCA9ICgvXlswLTldWzAtOV0kLyk7CgogICAgICAgICAgICBpZiAodG9rZW5zLmxlbmd0aCAhPT0gdmFsaWRUb2tlbkxlbmd0aCB8fCAhdG9rZW5zWzBdLm1hdGNoKHJlZ2V4KSB8fCAhdG9rZW5zWzFdLm1hdGNoKHJlZ2V4KSB8fCAodGhpcy5zaG93U2Vjb25kcyAmJiAhdG9rZW5zWzJdLm1hdGNoKHJlZ2V4KSkpIHsKICAgICAgICAgICAgICAgIHRocm93ICJJbnZhbGlkIHRpbWUiOwogICAgICAgICAgICB9CgogICAgICAgICAgICBsZXQgaCA9IHBhcnNlSW50KHRva2Vuc1swXSk7CiAgICAgICAgICAgIGxldCBtID0gcGFyc2VJbnQodG9rZW5zWzFdKTsKICAgICAgICAgICAgbGV0IHMgPSB0aGlzLnNob3dTZWNvbmRzID8gcGFyc2VJbnQodG9rZW5zWzJdKSA6IG51bGw7CgogICAgICAgICAgICBpZiAoaXNOYU4oaCkgfHwgaXNOYU4obSkgfHwgaCA+IDIzIHx8IG0gPiA1OSB8fCAodGhpcy5ob3VyRm9ybWF0ID09ICcxMicgJiYgaCA+IDEyKSB8fCAodGhpcy5zaG93U2Vjb25kcyAmJiAoaXNOYU4ocykgfHwgcyA+IDU5KSkpIHsKICAgICAgICAgICAgICAgIHRocm93ICJJbnZhbGlkIHRpbWUiOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgaWYgKHRoaXMuaG91ckZvcm1hdCA9PSAnMTInICYmIGggIT09IDEyICYmIHRoaXMucG0pIHsKICAgICAgICAgICAgICAgICAgICBoICs9IDEyOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHJldHVybiB7IGhvdXI6IGgsIG1pbnV0ZTogbSwgc2Vjb25kOiBzIH07CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHBhcnNlRGF0ZSh2YWx1ZSwgZm9ybWF0KSB7CiAgICAgICAgICAgIGlmIChmb3JtYXQgPT0gbnVsbCB8fCB2YWx1ZSA9PSBudWxsKSB7CiAgICAgICAgICAgICAgICB0aHJvdyAiSW52YWxpZCBhcmd1bWVudHMiOwogICAgICAgICAgICB9CgogICAgICAgICAgICB2YWx1ZSA9ICh0eXBlb2YgdmFsdWUgPT09ICJvYmplY3QiID8gdmFsdWUudG9TdHJpbmcoKSA6IHZhbHVlICsgIiIpOwogICAgICAgICAgICBpZiAodmFsdWUgPT09ICIiKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgbGV0IGlGb3JtYXQsIGRpbSwgZXh0cmEsCiAgICAgICAgICAgICAgICBpVmFsdWUgPSAwLAogICAgICAgICAgICAgICAgc2hvcnRZZWFyQ3V0b2ZmID0gKHR5cGVvZiB0aGlzLnNob3J0WWVhckN1dG9mZiAhPT0gInN0cmluZyIgPyB0aGlzLnNob3J0WWVhckN1dG9mZiA6IG5ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKSAlIDEwMCArIHBhcnNlSW50KHRoaXMuc2hvcnRZZWFyQ3V0b2ZmLCAxMCkpLAogICAgICAgICAgICAgICAgeWVhciA9IC0xLAogICAgICAgICAgICAgICAgbW9udGggPSAtMSwKICAgICAgICAgICAgICAgIGRheSA9IC0xLAogICAgICAgICAgICAgICAgZG95ID0gLTEsCiAgICAgICAgICAgICAgICBsaXRlcmFsID0gZmFsc2UsCiAgICAgICAgICAgICAgICBkYXRlLAogICAgICAgICAgICAgICAgbG9va0FoZWFkID0gKG1hdGNoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgbGV0IG1hdGNoZXMgPSAoaUZvcm1hdCArIDEgPCBmb3JtYXQubGVuZ3RoICYmIGZvcm1hdC5jaGFyQXQoaUZvcm1hdCArIDEpID09PSBtYXRjaCk7CiAgICAgICAgICAgICAgICAgICAgaWYgKG1hdGNoZXMpIHsKICAgICAgICAgICAgICAgICAgICAgICAgaUZvcm1hdCsrOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gbWF0Y2hlczsKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBnZXROdW1iZXIgPSAobWF0Y2gpID0+IHsKICAgICAgICAgICAgICAgICAgICBsZXQgaXNEb3VibGVkID0gbG9va0FoZWFkKG1hdGNoKSwKICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZSA9IChtYXRjaCA9PT0gIkAiID8gMTQgOiAobWF0Y2ggPT09ICIhIiA/IDIwIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIChtYXRjaCA9PT0gInkiICYmIGlzRG91YmxlZCA/IDQgOiAobWF0Y2ggPT09ICJvIiA/IDMgOiAyKSkpKSwKICAgICAgICAgICAgICAgICAgICAgICAgbWluU2l6ZSA9IChtYXRjaCA9PT0gInkiID8gc2l6ZSA6IDEpLAogICAgICAgICAgICAgICAgICAgICAgICBkaWdpdHMgPSBuZXcgUmVnRXhwKCJeXFxkeyIgKyBtaW5TaXplICsgIiwiICsgc2l6ZSArICJ9IiksCiAgICAgICAgICAgICAgICAgICAgICAgIG51bSA9IHZhbHVlLnN1YnN0cmluZyhpVmFsdWUpLm1hdGNoKGRpZ2l0cyk7CiAgICAgICAgICAgICAgICAgICAgaWYgKCFudW0pIHsKICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgIk1pc3NpbmcgbnVtYmVyIGF0IHBvc2l0aW9uICIgKyBpVmFsdWU7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGlWYWx1ZSArPSBudW1bMF0ubGVuZ3RoOwogICAgICAgICAgICAgICAgICAgIHJldHVybiBwYXJzZUludChudW1bMF0sIDEwKTsKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBnZXROYW1lID0gKG1hdGNoLCBzaG9ydE5hbWVzLCBsb25nTmFtZXMpID0+IHsKICAgICAgICAgICAgICAgICAgICBsZXQgaW5kZXggPSAtMTsKICAgICAgICAgICAgICAgICAgICBsZXQgYXJyID0gbG9va0FoZWFkKG1hdGNoKSA/IGxvbmdOYW1lcyA6IHNob3J0TmFtZXM7CiAgICAgICAgICAgICAgICAgICAgbGV0IG5hbWVzID0gW107CgogICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWVzLnB1c2goW2ksIGFycltpXV0pOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBuYW1lcy5zb3J0KChhLCBiKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAtKGFbMV0ubGVuZ3RoIC0gYlsxXS5sZW5ndGgpOwogICAgICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG5hbWVzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBuYW1lID0gbmFtZXNbaV1bMV07CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZS5zdWJzdHIoaVZhbHVlLCBuYW1lLmxlbmd0aCkudG9Mb3dlckNhc2UoKSA9PT0gbmFtZS50b0xvd2VyQ2FzZSgpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleCA9IG5hbWVzW2ldWzBdOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgaVZhbHVlICs9IG5hbWUubGVuZ3RoOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIGlmIChpbmRleCAhPT0gLTEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGluZGV4ICsgMTsKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyAiVW5rbm93biBuYW1lIGF0IHBvc2l0aW9uICIgKyBpVmFsdWU7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIGNoZWNrTGl0ZXJhbCA9ICgpID0+IHsKICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUuY2hhckF0KGlWYWx1ZSkgIT09IGZvcm1hdC5jaGFyQXQoaUZvcm1hdCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgIlVuZXhwZWN0ZWQgbGl0ZXJhbCBhdCBwb3NpdGlvbiAiICsgaVZhbHVlOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBpVmFsdWUrKzsKICAgICAgICAgICAgICAgIH07CgogICAgICAgICAgICBpZiAodGhpcy5jdXJyZW50VmlldyA9PT0gJ21vbnRoJykgewogICAgICAgICAgICAgICAgZGF5ID0gMTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgZm9yIChpRm9ybWF0ID0gMDsgaUZvcm1hdCA8IGZvcm1hdC5sZW5ndGg7IGlGb3JtYXQrKykgewogICAgICAgICAgICAgICAgaWYgKGxpdGVyYWwpIHsKICAgICAgICAgICAgICAgICAgICBpZiAoZm9ybWF0LmNoYXJBdChpRm9ybWF0KSA9PT0gIiciICYmICFsb29rQWhlYWQoIiciKSkgewogICAgICAgICAgICAgICAgICAgICAgICBsaXRlcmFsID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tMaXRlcmFsKCk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKGZvcm1hdC5jaGFyQXQoaUZvcm1hdCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAiZCI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXkgPSBnZXROdW1iZXIoImQiKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgICAgICBjYXNlICJEIjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldE5hbWUoIkQiLCB0aGlzLiRwcmltZXZ1ZS5jb25maWcubG9jYWxlLmRheU5hbWVzU2hvcnQsIHRoaXMuJHByaW1ldnVlLmNvbmZpZy5sb2NhbGUuZGF5TmFtZXMpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgIm8iOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZG95ID0gZ2V0TnVtYmVyKCJvIik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAibSI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb250aCA9IGdldE51bWJlcigibSIpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgIk0iOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9udGggPSBnZXROYW1lKCJNIiwgdGhpcy4kcHJpbWV2dWUuY29uZmlnLmxvY2FsZS5tb250aE5hbWVzU2hvcnQsIHRoaXMuJHByaW1ldnVlLmNvbmZpZy5sb2NhbGUubW9udGhOYW1lcyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAieSI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB5ZWFyID0gZ2V0TnVtYmVyKCJ5Iik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAiQCI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRlID0gbmV3IERhdGUoZ2V0TnVtYmVyKCJAIikpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgeWVhciA9IGRhdGUuZ2V0RnVsbFllYXIoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vbnRoID0gZGF0ZS5nZXRNb250aCgpICsgMTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRheSA9IGRhdGUuZ2V0RGF0ZSgpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgIiEiOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZSA9IG5ldyBEYXRlKChnZXROdW1iZXIoIiEiKSAtIHRoaXMudGlja3NUbzE5NzApIC8gMTAwMDApOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgeWVhciA9IGRhdGUuZ2V0RnVsbFllYXIoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vbnRoID0gZGF0ZS5nZXRNb250aCgpICsgMTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRheSA9IGRhdGUuZ2V0RGF0ZSgpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgIiciOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGxvb2tBaGVhZCgiJyIpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tMaXRlcmFsKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpdGVyYWwgPSB0cnVlOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGVja0xpdGVyYWwoKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChpVmFsdWUgPCB2YWx1ZS5sZW5ndGgpIHsKICAgICAgICAgICAgICAgIGV4dHJhID0gdmFsdWUuc3Vic3RyKGlWYWx1ZSk7CiAgICAgICAgICAgICAgICBpZiAoIS9eXHMrLy50ZXN0KGV4dHJhKSkgewogICAgICAgICAgICAgICAgICAgIHRocm93ICJFeHRyYS91bnBhcnNlZCBjaGFyYWN0ZXJzIGZvdW5kIGluIGRhdGU6ICIgKyBleHRyYTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKHllYXIgPT09IC0xKSB7CiAgICAgICAgICAgICAgICB5ZWFyID0gbmV3IERhdGUoKS5nZXRGdWxsWWVhcigpOwogICAgICAgICAgICB9IGVsc2UgaWYgKHllYXIgPCAxMDApIHsKICAgICAgICAgICAgICAgIHllYXIgKz0gbmV3IERhdGUoKS5nZXRGdWxsWWVhcigpIC0gbmV3IERhdGUoKS5nZXRGdWxsWWVhcigpICUgMTAwICsKICAgICAgICAgICAgICAgICAgICAoeWVhciA8PSBzaG9ydFllYXJDdXRvZmYgPyAwIDogLTEwMCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChkb3kgPiAtMSkgewogICAgICAgICAgICAgICAgbW9udGggPSAxOwogICAgICAgICAgICAgICAgZGF5ID0gZG95OwogICAgICAgICAgICAgICAgZG8gewogICAgICAgICAgICAgICAgICAgIGRpbSA9IHRoaXMuZ2V0RGF5c0NvdW50SW5Nb250aCh5ZWFyLCBtb250aCAtIDEpOwogICAgICAgICAgICAgICAgICAgIGlmIChkYXkgPD0gZGltKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBtb250aCsrOwogICAgICAgICAgICAgICAgICAgIGRheSAtPSBkaW07CiAgICAgICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lCiAgICAgICAgICAgICAgICB9IHdoaWxlICh0cnVlKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgZGF0ZSA9IHRoaXMuZGF5bGlnaHRTYXZpbmdBZGp1c3QobmV3IERhdGUoeWVhciwgbW9udGggLSAxLCBkYXkpKTsKICAgICAgICAgICAgaWYgKGRhdGUuZ2V0RnVsbFllYXIoKSAhPT0geWVhciB8fCBkYXRlLmdldE1vbnRoKCkgKyAxICE9PSBtb250aCB8fCBkYXRlLmdldERhdGUoKSAhPT0gZGF5KSB7CiAgICAgICAgICAgICAgICB0aHJvdyAiSW52YWxpZCBkYXRlIjsgLy8gRS5nLiAzMS8wMi8wMAogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gZGF0ZTsKICAgICAgICB9LAogICAgICAgIGdldFdlZWtOdW1iZXIoZGF0ZSkgewogICAgICAgICAgICBsZXQgY2hlY2tEYXRlID0gbmV3IERhdGUoZGF0ZS5nZXRUaW1lKCkpOwogICAgICAgICAgICBjaGVja0RhdGUuc2V0RGF0ZShjaGVja0RhdGUuZ2V0RGF0ZSgpICsgNCAtIChjaGVja0RhdGUuZ2V0RGF5KCkgfHwgNykpOwogICAgICAgICAgICBsZXQgdGltZSA9IGNoZWNrRGF0ZS5nZXRUaW1lKCk7CiAgICAgICAgICAgIGNoZWNrRGF0ZS5zZXRNb250aCgwKTsKICAgICAgICAgICAgY2hlY2tEYXRlLnNldERhdGUoMSk7CiAgICAgICAgICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucm91bmQoKHRpbWUgLSBjaGVja0RhdGUuZ2V0VGltZSgpKSAvIDg2NDAwMDAwKSAvIDcpICsgMTsKICAgICAgICB9LAogICAgICAgIG9uRGF0ZUNlbGxLZXlkb3duKGV2ZW50LCBkYXRlLCBncm91cEluZGV4KSB7CiAgICAgICAgICAgIGNvbnN0IGNlbGxDb250ZW50ID0gZXZlbnQuY3VycmVudFRhcmdldDsKICAgICAgICAgICAgY29uc3QgY2VsbCA9IGNlbGxDb250ZW50LnBhcmVudEVsZW1lbnQ7CgogICAgICAgICAgICBzd2l0Y2ggKGV2ZW50LndoaWNoKSB7CiAgICAgICAgICAgICAgICAvL2Rvd24gYXJyb3cKICAgICAgICAgICAgICAgIGNhc2UgNDA6IHsKICAgICAgICAgICAgICAgICAgICBjZWxsQ29udGVudC50YWJJbmRleCA9ICctMSc7CiAgICAgICAgICAgICAgICAgICAgbGV0IGNlbGxJbmRleCA9IERvbUhhbmRsZXIuaW5kZXgoY2VsbCk7CiAgICAgICAgICAgICAgICAgICAgbGV0IG5leHRSb3cgPSBjZWxsLnBhcmVudEVsZW1lbnQubmV4dEVsZW1lbnRTaWJsaW5nOwogICAgICAgICAgICAgICAgICAgIGlmIChuZXh0Um93KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBmb2N1c0NlbGwgPSBuZXh0Um93LmNoaWxkcmVuW2NlbGxJbmRleF0uY2hpbGRyZW5bMF07CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChEb21IYW5kbGVyLmhhc0NsYXNzKGZvY3VzQ2VsbCwgJ3AtZGlzYWJsZWQnKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5uYXZpZ2F0aW9uU3RhdGUgPSB7IGJhY2t3YXJkOiBmYWxzZSB9OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5uYXZGb3J3YXJkKGV2ZW50KTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5leHRSb3cuY2hpbGRyZW5bY2VsbEluZGV4XS5jaGlsZHJlblswXS50YWJJbmRleCA9ICcwJzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5leHRSb3cuY2hpbGRyZW5bY2VsbEluZGV4XS5jaGlsZHJlblswXS5mb2N1cygpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdmlnYXRpb25TdGF0ZSA9IHsgYmFja3dhcmQ6IGZhbHNlIH07CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubmF2Rm9yd2FyZChldmVudCk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgLy91cCBhcnJvdwogICAgICAgICAgICAgICAgY2FzZSAzODogewogICAgICAgICAgICAgICAgICAgIGNlbGxDb250ZW50LnRhYkluZGV4ID0gJy0xJzsKICAgICAgICAgICAgICAgICAgICBsZXQgY2VsbEluZGV4ID0gRG9tSGFuZGxlci5pbmRleChjZWxsKTsKICAgICAgICAgICAgICAgICAgICBsZXQgcHJldlJvdyA9IGNlbGwucGFyZW50RWxlbWVudC5wcmV2aW91c0VsZW1lbnRTaWJsaW5nOwogICAgICAgICAgICAgICAgICAgIGlmIChwcmV2Um93KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBmb2N1c0NlbGwgPSBwcmV2Um93LmNoaWxkcmVuW2NlbGxJbmRleF0uY2hpbGRyZW5bMF07CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChEb21IYW5kbGVyLmhhc0NsYXNzKGZvY3VzQ2VsbCwgJ3AtZGlzYWJsZWQnKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5uYXZpZ2F0aW9uU3RhdGUgPSB7IGJhY2t3YXJkOiB0cnVlIH07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdkJhY2t3YXJkKGV2ZW50KTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvY3VzQ2VsbC50YWJJbmRleCA9ICcwJzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvY3VzQ2VsbC5mb2N1cygpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdmlnYXRpb25TdGF0ZSA9IHsgYmFja3dhcmQ6IHRydWUgfTsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5uYXZCYWNrd2FyZChldmVudCk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgLy9sZWZ0IGFycm93CiAgICAgICAgICAgICAgICBjYXNlIDM3OiB7CiAgICAgICAgICAgICAgICAgICAgY2VsbENvbnRlbnQudGFiSW5kZXggPSAnLTEnOwogICAgICAgICAgICAgICAgICAgIGxldCBwcmV2Q2VsbCA9IGNlbGwucHJldmlvdXNFbGVtZW50U2libGluZzsKICAgICAgICAgICAgICAgICAgICBpZiAocHJldkNlbGwpIHsKICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGZvY3VzQ2VsbCA9IHByZXZDZWxsLmNoaWxkcmVuWzBdOwogICAgICAgICAgICAgICAgICAgICAgICBpZiAoRG9tSGFuZGxlci5oYXNDbGFzcyhmb2N1c0NlbGwsICdwLWRpc2FibGVkJykpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubmF2aWdhdGVUb01vbnRoKHRydWUsIGdyb3VwSW5kZXgpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9jdXNDZWxsLnRhYkluZGV4ID0gJzAnOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9jdXNDZWxsLmZvY3VzKCk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubmF2aWdhdGVUb01vbnRoKHRydWUsIGdyb3VwSW5kZXgpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIC8vcmlnaHQgYXJyb3cKICAgICAgICAgICAgICAgIGNhc2UgMzk6IHsKICAgICAgICAgICAgICAgICAgICBjZWxsQ29udGVudC50YWJJbmRleCA9ICctMSc7CiAgICAgICAgICAgICAgICAgICAgbGV0IG5leHRDZWxsID0gY2VsbC5uZXh0RWxlbWVudFNpYmxpbmc7CiAgICAgICAgICAgICAgICAgICAgaWYgKG5leHRDZWxsKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBmb2N1c0NlbGwgPSBuZXh0Q2VsbC5jaGlsZHJlblswXTsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKERvbUhhbmRsZXIuaGFzQ2xhc3MoZm9jdXNDZWxsLCAncC1kaXNhYmxlZCcpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdmlnYXRlVG9Nb250aChmYWxzZSwgZ3JvdXBJbmRleCk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb2N1c0NlbGwudGFiSW5kZXggPSAnMCc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb2N1c0NlbGwuZm9jdXMoKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5uYXZpZ2F0ZVRvTW9udGgoZmFsc2UsIGdyb3VwSW5kZXgpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIC8vZW50ZXIKICAgICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgICBjYXNlIDMyOiB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5vbkRhdGVTZWxlY3QoZXZlbnQsIGRhdGUpOwogICAgICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgLy9lc2NhcGUKICAgICAgICAgICAgICAgIGNhc2UgMjc6IHsKICAgICAgICAgICAgICAgICAgICB0aGlzLm92ZXJsYXlWaXNpYmxlID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAvL3RhYgogICAgICAgICAgICAgICAgY2FzZSA5OiB7CiAgICAgICAgICAgICAgICAgICAgaWYgKCF0aGlzLmlubGluZSkgewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnRyYXBGb2N1cyhldmVudCk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAgICAgICAgICAgLy9ubyBvcAogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBuYXZpZ2F0ZVRvTW9udGgocHJldiwgZ3JvdXBJbmRleCkgewogICAgICAgICAgICBpZiAocHJldikgewogICAgICAgICAgICAgICAgaWYgKHRoaXMubnVtYmVyT2ZNb250aHMgPT09IDEgfHwgKGdyb3VwSW5kZXggPT09IDApKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5uYXZpZ2F0aW9uU3RhdGUgPSB7IGJhY2t3YXJkOiB0cnVlIH07CiAgICAgICAgICAgICAgICAgICAgdGhpcy5uYXZCYWNrd2FyZChldmVudCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBsZXQgcHJldk1vbnRoQ29udGFpbmVyID0gdGhpcy4kcmVmcy5vdmVybGF5LmNoaWxkcmVuW2dyb3VwSW5kZXggLSAxXTsKICAgICAgICAgICAgICAgICAgICBsZXQgY2VsbHMgPSBEb21IYW5kbGVyLmZpbmQocHJldk1vbnRoQ29udGFpbmVyLCAnLnAtZGF0ZXBpY2tlci1jYWxlbmRhciB0ZCBzcGFuOm5vdCgucC1kaXNhYmxlZCk6bm90KC5wLWluayknKTsKICAgICAgICAgICAgICAgICAgICBsZXQgZm9jdXNDZWxsID0gY2VsbHNbY2VsbHMubGVuZ3RoIC0gMV07CiAgICAgICAgICAgICAgICAgICAgZm9jdXNDZWxsLnRhYkluZGV4ID0gJzAnOwogICAgICAgICAgICAgICAgICAgIGZvY3VzQ2VsbC5mb2N1cygpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgaWYgKHRoaXMubnVtYmVyT2ZNb250aHMgPT09IDEgfHwgKGdyb3VwSW5kZXggPT09IHRoaXMubnVtYmVyT2ZNb250aHMgLSAxKSkgewogICAgICAgICAgICAgICAgICAgIHRoaXMubmF2aWdhdGlvblN0YXRlID0geyBiYWNrd2FyZDogZmFsc2UgfTsKICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdkZvcndhcmQoZXZlbnQpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgbGV0IG5leHRNb250aENvbnRhaW5lciA9IHRoaXMuJHJlZnMub3ZlcmxheS5jaGlsZHJlbltncm91cEluZGV4ICsgMV07CiAgICAgICAgICAgICAgICAgICAgbGV0IGZvY3VzQ2VsbCA9IERvbUhhbmRsZXIuZmluZFNpbmdsZShuZXh0TW9udGhDb250YWluZXIsICcucC1kYXRlcGlja2VyLWNhbGVuZGFyIHRkIHNwYW46bm90KC5wLWRpc2FibGVkKTpub3QoLnAtaW5rKScpOwogICAgICAgICAgICAgICAgICAgIGZvY3VzQ2VsbC50YWJJbmRleCA9ICcwJzsKICAgICAgICAgICAgICAgICAgICBmb2N1c0NlbGwuZm9jdXMoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgb25Nb250aENlbGxLZXlkb3duKGV2ZW50LCBpbmRleCkgewogICAgICAgICAgICBjb25zdCBjZWxsID0gZXZlbnQuY3VycmVudFRhcmdldDsKCiAgICAgICAgICAgIHN3aXRjaCAoZXZlbnQud2hpY2gpIHsKICAgICAgICAgICAgICAgIC8vYXJyb3dzCiAgICAgICAgICAgICAgICBjYXNlIDM4OgogICAgICAgICAgICAgICAgY2FzZSA0MDogewogICAgICAgICAgICAgICAgICAgIGNlbGwudGFiSW5kZXggPSAnLTEnOwogICAgICAgICAgICAgICAgICAgIHZhciBjZWxscyA9IGNlbGwucGFyZW50RWxlbWVudC5jaGlsZHJlbjsKICAgICAgICAgICAgICAgICAgICB2YXIgY2VsbEluZGV4ID0gRG9tSGFuZGxlci5pbmRleChjZWxsKTsKICAgICAgICAgICAgICAgICAgICBsZXQgbmV4dENlbGwgPSBjZWxsc1tldmVudC53aGljaCA9PT0gNDAgPyBjZWxsSW5kZXggKyAzIDogY2VsbEluZGV4IC0gM107CiAgICAgICAgICAgICAgICAgICAgaWYgKG5leHRDZWxsKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIG5leHRDZWxsLnRhYkluZGV4ID0gJzAnOwogICAgICAgICAgICAgICAgICAgICAgICBuZXh0Q2VsbC5mb2N1cygpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIC8vbGVmdCBhcnJvdwogICAgICAgICAgICAgICAgY2FzZSAzNzogewogICAgICAgICAgICAgICAgICAgIGNlbGwudGFiSW5kZXggPSAnLTEnOwogICAgICAgICAgICAgICAgICAgIGxldCBwcmV2Q2VsbCA9IGNlbGwucHJldmlvdXNFbGVtZW50U2libGluZzsKICAgICAgICAgICAgICAgICAgICBpZiAocHJldkNlbGwpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcHJldkNlbGwudGFiSW5kZXggPSAnMCc7CiAgICAgICAgICAgICAgICAgICAgICAgIHByZXZDZWxsLmZvY3VzKCk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdmlnYXRpb25TdGF0ZSA9IHsgYmFja3dhcmQ6IHRydWUgfTsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5uYXZCYWNrd2FyZChldmVudCk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgLy9yaWdodCBhcnJvdwogICAgICAgICAgICAgICAgY2FzZSAzOTogewogICAgICAgICAgICAgICAgICAgIGNlbGwudGFiSW5kZXggPSAnLTEnOwogICAgICAgICAgICAgICAgICAgIGxldCBuZXh0Q2VsbCA9IGNlbGwubmV4dEVsZW1lbnRTaWJsaW5nOwogICAgICAgICAgICAgICAgICAgIGlmIChuZXh0Q2VsbCkgewogICAgICAgICAgICAgICAgICAgICAgICBuZXh0Q2VsbC50YWJJbmRleCA9ICcwJzsKICAgICAgICAgICAgICAgICAgICAgICAgbmV4dENlbGwuZm9jdXMoKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubmF2aWdhdGlvblN0YXRlID0geyBiYWNrd2FyZDogZmFsc2UgfTsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5uYXZGb3J3YXJkKGV2ZW50KTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAvL2VudGVyCiAgICAgICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgICAgY2FzZSAzMjogewogICAgICAgICAgICAgICAgICAgIHRoaXMub25Nb250aFNlbGVjdChldmVudCwgaW5kZXgpOwogICAgICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgLy9lc2NhcGUKICAgICAgICAgICAgICAgIGNhc2UgMjc6IHsKICAgICAgICAgICAgICAgICAgICB0aGlzLm92ZXJsYXlWaXNpYmxlID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAvL3RhYgogICAgICAgICAgICAgICAgY2FzZSA5OiB7CiAgICAgICAgICAgICAgICAgICAgaWYgKCF0aGlzLmlubGluZSkgewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnRyYXBGb2N1cyhldmVudCk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAgICAgICAgICAgLy9ubyBvcAogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBvblllYXJDZWxsS2V5ZG93bihldmVudCwgaW5kZXgpIHsKICAgICAgICAgICAgY29uc3QgY2VsbCA9IGV2ZW50LmN1cnJlbnRUYXJnZXQ7CiAgICAgICAgICAgIHN3aXRjaCAoZXZlbnQud2hpY2gpIHsKICAgICAgICAgICAgICAgIC8vYXJyb3dzCiAgICAgICAgICAgICAgICBjYXNlIDM4OgogICAgICAgICAgICAgICAgY2FzZSA0MDogewogICAgICAgICAgICAgICAgICAgIGNlbGwudGFiSW5kZXggPSAnLTEnOwogICAgICAgICAgICAgICAgICAgIHZhciBjZWxscyA9IGNlbGwucGFyZW50RWxlbWVudC5jaGlsZHJlbjsKICAgICAgICAgICAgICAgICAgICB2YXIgY2VsbEluZGV4ID0gRG9tSGFuZGxlci5pbmRleChjZWxsKTsKICAgICAgICAgICAgICAgICAgICBsZXQgbmV4dENlbGwgPSBjZWxsc1tldmVudC53aGljaCA9PT0gNDAgPyBjZWxsSW5kZXggKyAyIDogY2VsbEluZGV4IC0gMl07CiAgICAgICAgICAgICAgICAgICAgaWYgKG5leHRDZWxsKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIG5leHRDZWxsLnRhYkluZGV4ID0gJzAnOwogICAgICAgICAgICAgICAgICAgICAgICBuZXh0Q2VsbC5mb2N1cygpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgLy9sZWZ0IGFycm93CiAgICAgICAgICAgICAgICBjYXNlIDM3OiB7CiAgICAgICAgICAgICAgICAgICAgY2VsbC50YWJJbmRleCA9ICctMSc7CiAgICAgICAgICAgICAgICAgICAgbGV0IHByZXZDZWxsID0gY2VsbC5wcmV2aW91c0VsZW1lbnRTaWJsaW5nOwogICAgICAgICAgICAgICAgICAgIGlmIChwcmV2Q2VsbCkgewogICAgICAgICAgICAgICAgICAgICAgICBwcmV2Q2VsbC50YWJJbmRleCA9ICcwJzsKICAgICAgICAgICAgICAgICAgICAgICAgcHJldkNlbGwuZm9jdXMoKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubmF2aWdhdGlvblN0YXRlID0geyBiYWNrd2FyZDogdHJ1ZSB9OwogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdkJhY2t3YXJkKGV2ZW50KTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIC8vcmlnaHQgYXJyb3cKICAgICAgICAgICAgICAgIGNhc2UgMzk6IHsKICAgICAgICAgICAgICAgICAgICBjZWxsLnRhYkluZGV4ID0gJy0xJzsKICAgICAgICAgICAgICAgICAgICBsZXQgbmV4dENlbGwgPSBjZWxsLm5leHRFbGVtZW50U2libGluZzsKICAgICAgICAgICAgICAgICAgICBpZiAobmV4dENlbGwpIHsKICAgICAgICAgICAgICAgICAgICAgICAgbmV4dENlbGwudGFiSW5kZXggPSAnMCc7CiAgICAgICAgICAgICAgICAgICAgICAgIG5leHRDZWxsLmZvY3VzKCk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdmlnYXRpb25TdGF0ZSA9IHsgYmFja3dhcmQ6IGZhbHNlIH07CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubmF2Rm9yd2FyZChldmVudCk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAvL2VudGVyCiAgICAgICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgICAgY2FzZSAzMjogewogICAgICAgICAgICAgICAgICAgIHRoaXMub25Nb250aFNlbGVjdChldmVudCwgaW5kZXgpOwogICAgICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAvL2VzY2FwZQogICAgICAgICAgICAgICAgY2FzZSAyNzogewogICAgICAgICAgICAgICAgICAgIHRoaXMub3ZlcmxheVZpc2libGUgPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgLy90YWIKICAgICAgICAgICAgICAgIGNhc2UgOTogewogICAgICAgICAgICAgICAgICAgIHRoaXMudHJhcEZvY3VzKGV2ZW50KTsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAgICAgICAgICAgLy9ubyBvcAogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB1cGRhdGVGb2N1cygpIHsKICAgICAgICAgICAgbGV0IGNlbGw7CiAgICAgICAgICAgIGlmICh0aGlzLm5hdmlnYXRpb25TdGF0ZSkgewogICAgICAgICAgICAgICAgaWYgKHRoaXMubmF2aWdhdGlvblN0YXRlLmJ1dHRvbikgewogICAgICAgICAgICAgICAgICAgIHRoaXMuaW5pdEZvY3VzYWJsZUNlbGwoKTsKICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5uYXZpZ2F0aW9uU3RhdGUuYmFja3dhcmQpCiAgICAgICAgICAgICAgICAgICAgICAgIERvbUhhbmRsZXIuZmluZFNpbmdsZSh0aGlzLiRyZWZzLm92ZXJsYXksICcucC1kYXRlcGlja2VyLXByZXYnKS5mb2N1cygpOwogICAgICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgICAgICAgICAgRG9tSGFuZGxlci5maW5kU2luZ2xlKHRoaXMuJHJlZnMub3ZlcmxheSwgJy5wLWRhdGVwaWNrZXItbmV4dCcpLmZvY3VzKCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5uYXZpZ2F0aW9uU3RhdGUuYmFja3dhcmQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGNlbGxzOwogICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5jdXJyZW50VmlldyA9PT0gJ21vbnRoJykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VsbHMgPSBEb21IYW5kbGVyLmZpbmQodGhpcy4kcmVmcy5vdmVybGF5LCAnLnAtbW9udGhwaWNrZXIgLnAtbW9udGhwaWNrZXItbW9udGg6bm90KC5wLWRpc2FibGVkKScpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKHRoaXMuY3VycmVudFZpZXcgPT09ICd5ZWFyJykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VsbHMgPSBEb21IYW5kbGVyLmZpbmQodGhpcy4kcmVmcy5vdmVybGF5LCAnLnAteWVhcnBpY2tlciAucC15ZWFycGlja2VyLXllYXI6bm90KC5wLWRpc2FibGVkKScpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VsbHMgPSBEb21IYW5kbGVyLmZpbmQodGhpcy4kcmVmcy5vdmVybGF5LCAnLnAtZGF0ZXBpY2tlci1jYWxlbmRhciB0ZCBzcGFuOm5vdCgucC1kaXNhYmxlZCk6bm90KC5wLWluayknKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2VsbHMgJiYgY2VsbHMubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VsbCA9IGNlbGxzW2NlbGxzLmxlbmd0aCAtIDFdOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5jdXJyZW50VmlldyA9PT0gJ21vbnRoJykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VsbCA9IERvbUhhbmRsZXIuZmluZFNpbmdsZSh0aGlzLiRyZWZzLm92ZXJsYXksICcucC1tb250aHBpY2tlciAucC1tb250aHBpY2tlci1tb250aDpub3QoLnAtZGlzYWJsZWQpJyk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAodGhpcy5jdXJyZW50VmlldyA9PT0gJ3llYXInKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZWxsID0gRG9tSGFuZGxlci5maW5kU2luZ2xlKHRoaXMuJHJlZnMub3ZlcmxheSwgJy5wLXllYXJwaWNrZXIgLnAteWVhcnBpY2tlci15ZWFyOm5vdCgucC1kaXNhYmxlZCknKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNlbGwgPSBEb21IYW5kbGVyLmZpbmRTaW5nbGUodGhpcy4kcmVmcy5vdmVybGF5LCAnLnAtZGF0ZXBpY2tlci1jYWxlbmRhciB0ZCBzcGFuOm5vdCgucC1kaXNhYmxlZCk6bm90KC5wLWluayknKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBpZiAoY2VsbCkgewogICAgICAgICAgICAgICAgICAgICAgICBjZWxsLnRhYkluZGV4ID0gJzAnOwogICAgICAgICAgICAgICAgICAgICAgICBjZWxsLmZvY3VzKCk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHRoaXMubmF2aWdhdGlvblN0YXRlID0gbnVsbDsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgIHRoaXMuaW5pdEZvY3VzYWJsZUNlbGwoKTsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgaW5pdEZvY3VzYWJsZUNlbGwoKSB7CiAgICAgICAgICAgIGxldCBjZWxsOwogICAgICAgICAgICBpZiAodGhpcy5jdXJyZW50VmlldyA9PT0gJ21vbnRoJykgewogICAgICAgICAgICAgICAgbGV0IGNlbGxzID0gRG9tSGFuZGxlci5maW5kKHRoaXMuJHJlZnMub3ZlcmxheSwgJy5wLW1vbnRocGlja2VyIC5wLW1vbnRocGlja2VyLW1vbnRoJyk7CiAgICAgICAgICAgICAgICBsZXQgc2VsZWN0ZWRDZWxsID0gRG9tSGFuZGxlci5maW5kU2luZ2xlKHRoaXMuJHJlZnMub3ZlcmxheSwgJy5wLW1vbnRocGlja2VyIC5wLW1vbnRocGlja2VyLW1vbnRoLnAtaGlnaGxpZ2h0Jyk7CiAgICAgICAgICAgICAgICBjZWxscy5mb3JFYWNoKGNlbGwgPT4gY2VsbC50YWJJbmRleCA9IC0xKTsKICAgICAgICAgICAgICAgIGNlbGwgPSBzZWxlY3RlZENlbGwgfHwgY2VsbHNbMF07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSBpZiAodGhpcy5jdXJyZW50VmlldyA9PT0gJ3llYXInKSB7CiAgICAgICAgICAgICAgICBsZXQgY2VsbHMgPSBEb21IYW5kbGVyLmZpbmQodGhpcy4kcmVmcy5vdmVybGF5LCAnLnAteWVhcnBpY2tlciAucC15ZWFycGlja2VyLXllYXInKTsKICAgICAgICAgICAgICAgIGxldCBzZWxlY3RlZENlbGwgPSBEb21IYW5kbGVyLmZpbmRTaW5nbGUodGhpcy4kcmVmcy5vdmVybGF5LCAnLnAteWVhcnBpY2tlciAucC15ZWFycGlja2VyLXllYXIucC1oaWdobGlnaHQnKTsKICAgICAgICAgICAgICAgIGNlbGxzLmZvckVhY2goY2VsbCA9PiBjZWxsLnRhYkluZGV4ID0gLTEpOwogICAgICAgICAgICAgICAgY2VsbCA9IHNlbGVjdGVkQ2VsbCB8fCBjZWxsc1swXTsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgIGNlbGwgPSBEb21IYW5kbGVyLmZpbmRTaW5nbGUodGhpcy4kcmVmcy5vdmVybGF5LCAnc3Bhbi5wLWhpZ2hsaWdodCcpOwogICAgICAgICAgICAgICAgaWYgKCFjZWxsKSB7CiAgICAgICAgICAgICAgICAgICAgbGV0IHRvZGF5Q2VsbCA9IERvbUhhbmRsZXIuZmluZFNpbmdsZSh0aGlzLiRyZWZzLm92ZXJsYXksICd0ZC5wLWRhdGVwaWNrZXItdG9kYXkgc3Bhbjpub3QoLnAtZGlzYWJsZWQpOm5vdCgucC1pbmspJyk7CiAgICAgICAgICAgICAgICAgICAgaWYgKHRvZGF5Q2VsbCkKICAgICAgICAgICAgICAgICAgICAgICAgY2VsbCA9IHRvZGF5Q2VsbDsKICAgICAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgICAgIGNlbGwgPSBEb21IYW5kbGVyLmZpbmRTaW5nbGUodGhpcy4kcmVmcy5vdmVybGF5LCAnLnAtZGF0ZXBpY2tlci1jYWxlbmRhciB0ZCBzcGFuOm5vdCgucC1kaXNhYmxlZCk6bm90KC5wLWluaycpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoY2VsbCkgewogICAgICAgICAgICAgICAgY2VsbC50YWJJbmRleCA9ICcwJzsKCiAgICAgICAgICAgICAgICBpZiAoIXRoaXMucHJldmVudEZvY3VzICYmICghdGhpcy5uYXZpZ2F0aW9uU3RhdGUgfHwgIXRoaXMubmF2aWdhdGlvblN0YXRlLmJ1dHRvbikgJiYgIXRoaXMudGltZVBpY2tlckNoYW5nZSkgewogICAgICAgICAgICAgICAgICAgIGNlbGwuZm9jdXMoKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICB0aGlzLnByZXZlbnRGb2N1cyA9IGZhbHNlOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB0cmFwRm9jdXMoZXZlbnQpIHsKICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgICAgbGV0IGZvY3VzYWJsZUVsZW1lbnRzID0gRG9tSGFuZGxlci5nZXRGb2N1c2FibGVFbGVtZW50cyh0aGlzLiRyZWZzLm92ZXJsYXkpOwoKICAgICAgICAgICAgaWYgKGZvY3VzYWJsZUVsZW1lbnRzICYmIGZvY3VzYWJsZUVsZW1lbnRzLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICAgIGlmICghZG9jdW1lbnQuYWN0aXZlRWxlbWVudCkgewogICAgICAgICAgICAgICAgICAgIGZvY3VzYWJsZUVsZW1lbnRzWzBdLmZvY3VzKCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBsZXQgZm9jdXNlZEluZGV4ID0gZm9jdXNhYmxlRWxlbWVudHMuaW5kZXhPZihkb2N1bWVudC5hY3RpdmVFbGVtZW50KTsKCiAgICAgICAgICAgICAgICAgICAgaWYgKGV2ZW50LnNoaWZ0S2V5KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmb2N1c2VkSW5kZXggPT0gLTEgfHwgZm9jdXNlZEluZGV4ID09PSAwKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9jdXNhYmxlRWxlbWVudHNbZm9jdXNhYmxlRWxlbWVudHMubGVuZ3RoIC0gMV0uZm9jdXMoKTsKICAgICAgICAgICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9jdXNhYmxlRWxlbWVudHNbZm9jdXNlZEluZGV4IC0gMV0uZm9jdXMoKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmb2N1c2VkSW5kZXggPT0gLTEgfHwgZm9jdXNlZEluZGV4ID09PSAoZm9jdXNhYmxlRWxlbWVudHMubGVuZ3RoIC0gMSkpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb2N1c2FibGVFbGVtZW50c1swXS5mb2N1cygpOwogICAgICAgICAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb2N1c2FibGVFbGVtZW50c1tmb2N1c2VkSW5kZXggKyAxXS5mb2N1cygpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgb25Db250YWluZXJCdXR0b25LZXlkb3duKGV2ZW50KSB7CiAgICAgICAgICAgIHN3aXRjaCAoZXZlbnQud2hpY2gpIHsKICAgICAgICAgICAgICAgIC8vdGFiCiAgICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgICAgICAgaWYgKCF0aGlzLmlubGluZSkgewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnRyYXBGb2N1cyhldmVudCk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICAgIC8vZXNjYXBlCiAgICAgICAgICAgICAgICBjYXNlIDI3OgogICAgICAgICAgICAgICAgICAgIHRoaXMub3ZlcmxheVZpc2libGUgPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAgICAgICAgICAgLy9Ob29wCiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIG9uSW5wdXQodmFsKSB7CiAgICAgICAgICAgIC8vIElFIDExIFdvcmthcm91bmQgZm9yIGlucHV0IHBsYWNlaG9sZGVyIDogaHR0cHM6Ly9naXRodWIuY29tL3ByaW1lZmFjZXMvcHJpbWVuZy9pc3N1ZXMvMjAyNgogICAgICAgICAgICBpZiAoIXRoaXMuaXNLZXlkb3duKSB7CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGhpcy5pc0tleWRvd24gPSBmYWxzZTsKCiAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGlvblN0YXJ0ID0gdGhpcy4kcmVmcy5pbnB1dC4kZWwuc2VsZWN0aW9uU3RhcnQ7CiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGlvbkVuZCA9IHRoaXMuJHJlZnMuaW5wdXQuJGVsLnNlbGVjdGlvbkVuZDsKCiAgICAgICAgICAgICAgICBsZXQgdmFsdWUgPSB0aGlzLnBhcnNlVmFsdWUodmFsKTsKICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzVmFsaWRTZWxlY3Rpb24odmFsdWUpKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy51cGRhdGVNb2RlbCh2YWx1ZSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgY2F0Y2ggKGVycikgewogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVNb2RlbCh2YWwpOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBhcHBlbmRDb250YWluZXIoKSB7CiAgICAgICAgICAgIGlmICh0aGlzLmFwcGVuZFRvKSB7CiAgICAgICAgICAgICAgICBpZiAodGhpcy5hcHBlbmRUbyA9PT0gJ2JvZHknKQogICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGhpcy4kcmVmcy5vdmVybGF5KTsKICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLmFwcGVuZFRvKS5hcHBlbmRDaGlsZCh0aGlzLiRyZWZzLm92ZXJsYXkpOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICByZXN0b3JlQXBwZW5kKCkgewogICAgICAgICAgICBpZiAodGhpcy4kcmVmcy5vdmVybGF5ICYmIHRoaXMuYXBwZW5kVG8pIHsKICAgICAgICAgICAgICAgIGlmICh0aGlzLmFwcGVuZFRvID09PSAnYm9keScpCiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZCh0aGlzLiRyZWZzLm92ZXJsYXkpOwogICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMuYXBwZW5kVG8pLnJlbW92ZUNoaWxkKHRoaXMuJHJlZnMub3ZlcmxheSk7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGdldE1vbnRoTmFtZShpbmRleCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy4kcHJpbWV2dWUuY29uZmlnLmxvY2FsZS5tb250aE5hbWVzW2luZGV4XTsKICAgICAgICB9LAogICAgICAgIGdldFllYXIobW9udGgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuY3VycmVudFZpZXcgPT09ICdtb250aCcgPyB0aGlzLmN1cnJlbnRZZWFyIDogbW9udGgueWVhcjsKICAgICAgICB9LAogICAgICAgIGNyZWF0ZVJlc3BvbnNpdmVTdHlsZSgpIHsKICAgICAgICAgICAgaWYgKHRoaXMubnVtYmVyT2ZNb250aHMgPiAxICYmIHRoaXMucmVzcG9uc2l2ZU9wdGlvbnMpIHsKICAgICAgICAgICAgICAgIGlmICghdGhpcy5yZXNwb25zaXZlU3R5bGVFbGVtZW50KSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZXNwb25zaXZlU3R5bGVFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTsKICAgICAgICAgICAgICAgICAgICB0aGlzLnJlc3BvbnNpdmVTdHlsZUVsZW1lbnQudHlwZSA9ICd0ZXh0L2Nzcyc7CiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0aGlzLnJlc3BvbnNpdmVTdHlsZUVsZW1lbnQpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgbGV0IGlubmVySFRNTCA9ICcnOwogICAgICAgICAgICAgICAgaWYgKHRoaXMucmVzcG9uc2l2ZU9wdGlvbnMpIHsKICAgICAgICAgICAgICAgICAgICBsZXQgcmVzcG9uc2l2ZU9wdGlvbnMgPSBbLi4udGhpcy5yZXNwb25zaXZlT3B0aW9uc10KICAgICAgICAgICAgICAgICAgICAgICAgLmZpbHRlcihvID0+ICEhKG8uYnJlYWtwb2ludCAmJiBvLm51bU1vbnRocykpCiAgICAgICAgICAgICAgICAgICAgICAgIC5zb3J0KChvMSwgbzIpID0+IC0xICogbzEuYnJlYWtwb2ludC5sb2NhbGVDb21wYXJlKG8yLmJyZWFrcG9pbnQsIHVuZGVmaW5lZCwgeyBudW1lcmljOiB0cnVlIH0pKTsKICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJlc3BvbnNpdmVPcHRpb25zLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGxldCB7IGJyZWFrcG9pbnQsIG51bU1vbnRocyB9ID0gcmVzcG9uc2l2ZU9wdGlvbnNbaV07CiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBzdHlsZXMgPSBgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAucC1kYXRlcGlja2VyWyR7dGhpcy5hdHRyaWJ1dGVTZWxlY3Rvcn1dIC5wLWRhdGVwaWNrZXItZ3JvdXA6bnRoLWNoaWxkKCR7bnVtTW9udGhzfSkgLnAtZGF0ZXBpY2tlci1uZXh0IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtZmxleCAhaW1wb3J0YW50OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBgOwogICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBqID0gbnVtTW9udGhzOyBqIDwgdGhpcy5udW1iZXJPZk1vbnRoczsgaisrKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZXMgKz0gYAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5wLWRhdGVwaWNrZXJbJHt0aGlzLmF0dHJpYnV0ZVNlbGVjdG9yfV0gLnAtZGF0ZXBpY2tlci1ncm91cDpudGgtY2hpbGQoJHtqICsgMX0pIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGAKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBpbm5lckhUTUwgKz0gYAogICAgICAgICAgICAgICAgICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogJHticmVha3BvaW50fSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR7c3R5bGVzfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBgCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgdGhpcy5yZXNwb25zaXZlU3R5bGVFbGVtZW50LmlubmVySFRNTCA9IGlubmVySFRNTDsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgZGVzdHJveVJlc3BvbnNpdmVTdHlsZUVsZW1lbnQoKSB7CiAgICAgICAgICAgIGlmICh0aGlzLnJlc3BvbnNpdmVTdHlsZUVsZW1lbnQpIHsKICAgICAgICAgICAgICAgIHRoaXMucmVzcG9uc2l2ZVN0eWxlRWxlbWVudC5yZW1vdmUoKTsKICAgICAgICAgICAgICAgIHRoaXMucmVzcG9uc2l2ZVN0eWxlRWxlbWVudCA9IG51bGw7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgICBkaXNhYmxlU2V0VGltZSgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuY3VycmVudEhvdXIgIT09IG51bGwgJiYgdGhpcy5jdXJyZW50SG91ciAhPT0gIiIgJiYgdGhpcy5jdXJyZW50TWludXRlICE9PSBudWxsICYmIHRoaXMuY3VycmVudE1pbiAhPT0gIiIgJiYgdGhpcy5wbSAhPT0gbnVsbCAmJiB0aGlzLnBtICE9PSAiIiAmJiB0aGlzLnZhbGlkYXRlVGltZSh0aGlzLmN1cnJlbnRIb3VyLCB0aGlzLmN1cnJlbnRNaW51dGUsIHRoaXMuY3VycmVudFNlY29uZCwgdGhpcy5wbSkgJiYgdGhpcy5jdXJyZW50SG91ciA8IDEzICYmIHRoaXMuY3VycmVudE1pbnV0ZSA8IDYwID8gdHJ1ZSA6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICBkaXNhYmxlU2V0RGF0ZSgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMudmFsdWUgIT09IG51bGwgJiYgdGhpcy52YWx1ZSAhPT0gdW5kZWZpbmVkICYmIHRoaXMudmFsdWUgIT09ICIiID8gdHJ1ZSA6IGZhbHNlOwogICAgICAgIH0sCgogICAgICAgIGxpc3RlbmVycygpIHsKICAgICAgICAgICAgbGV0ICR2bSA9IHRoaXM7CgogICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgLi4uJHZtLiRsaXN0ZW5lcnMsCiAgICAgICAgICAgICAgICBpbnB1dDogdmFsID0+IHsKICAgICAgICAgICAgICAgICAgICB0aGlzLm9uSW5wdXQodmFsKTsKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBmb2N1czogZXZlbnQgPT4gewogICAgICAgICAgICAgICAgICAgICR2bS5mb2N1cyA9IHRydWU7CiAgICAgICAgICAgICAgICAgICAgaWYgKCR2bS5zaG93T25Gb2N1cyAmJiAkdm0uaXNFbmFibGVkKCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJHZtLm92ZXJsYXlWaXNpYmxlID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgJHZtLmZvY3VzZWQgPSB0cnVlOwogICAgICAgICAgICAgICAgICAgICR2bS4kZW1pdCgnZm9jdXMnLCBldmVudCkKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBibHVyOiBldmVudCA9PiB7CiAgICAgICAgICAgICAgICAgICAgJHZtLmZvY3VzZWQgPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgICAkdm0uJGVtaXQoJ2JsdXInLCBldmVudCk7CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAga2V5ZG93bjogZXZlbnQgPT4gewogICAgICAgICAgICAgICAgICAgICR2bS5pc0tleWRvd24gPSB0cnVlOwoKICAgICAgICAgICAgICAgICAgICBpZiAoZXZlbnQua2V5Q29kZSA9PT0gNDAgJiYgJHZtLiRyZWZzLm92ZXJsYXkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJHZtLnRyYXBGb2N1cyhldmVudCk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGV2ZW50LmtleUNvZGUgPT09IDI3KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkdm0ub3ZlcmxheVZpc2libGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICR2bS5vdmVybGF5VmlzaWJsZSA9IGZhbHNlOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChldmVudC5rZXlDb2RlID09PSA5KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIERvbUhhbmRsZXIuZ2V0Rm9jdXNhYmxlRWxlbWVudHMoJHZtLiRyZWZzLm92ZXJsYXkpLmZvckVhY2goZWwgPT4gZWwudGFiSW5kZXggPSAnLTEnKTsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCR2bS5vdmVybGF5VmlzaWJsZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHZtLm92ZXJsYXlWaXNpYmxlID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICR2bS4kZW1pdCgna2V5ZG93bicsIGV2ZW50KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfTsKICAgICAgICB9LAogICAgICAgIHZpZXdEYXRlKCkgewogICAgICAgICAgICBsZXQgcHJvcFZhbHVlID0gdGhpcy52YWx1ZTsKICAgICAgICAgICAgaWYgKHR5cGVvZiBwcm9wVmFsdWUgPT09ICdzdHJpbmcnKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IERhdGUoKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKHByb3BWYWx1ZSAmJiBBcnJheS5pc0FycmF5KHByb3BWYWx1ZSkpIHsKICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzUmFuZ2VTZWxlY3Rpb24oKSkgewogICAgICAgICAgICAgICAgICAgIHByb3BWYWx1ZSA9IHByb3BWYWx1ZVsxXSB8fCBwcm9wVmFsdWVbMF07CiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuaXNNdWx0aXBsZVNlbGVjdGlvbigpKSB7CiAgICAgICAgICAgICAgICAgICAgcHJvcFZhbHVlID0gcHJvcFZhbHVlW3Byb3BWYWx1ZS5sZW5ndGggLSAxXTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gcHJvcFZhbHVlOwogICAgICAgIH0sCiAgICAgICAgaW5wdXRGaWVsZFZhbHVlKCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5mb3JtYXRWYWx1ZSh0aGlzLnZhbHVlKTsKICAgICAgICB9LAogICAgICAgIGNvbnRhaW5lckNsYXNzKCkgewogICAgICAgICAgICByZXR1cm4gWwogICAgICAgICAgICAgICAgJ3AtY2FsZW5kYXIgcC1jb21wb25lbnQgcC1pbnB1dHdyYXBwZXInLCB0aGlzLmNsYXNzTmFtZSwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAncC1jYWxlbmRhci13LWJ0bic6IHRoaXMuc2hvd0ljb24sCiAgICAgICAgICAgICAgICAgICAgJ3AtY2FsZW5kYXItdGltZW9ubHknOiB0aGlzLnRpbWVPbmx5LAogICAgICAgICAgICAgICAgICAgICdwLWlucHV0d3JhcHBlci1maWxsZWQnOiB0aGlzLnZhbHVlLAogICAgICAgICAgICAgICAgICAgICdwLWlucHV0d3JhcHBlci1mb2N1cyc6IHRoaXMuZm9jdXNlZAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdOwogICAgICAgIH0sCiAgICAgICAgcGFuZWxTdHlsZUNsYXNzKCkgewogICAgICAgICAgICByZXR1cm4gWwogICAgICAgICAgICAgICAgJ3AtZGF0ZXBpY2tlciBwLWNvbXBvbmVudCcsIHRoaXMucGFuZWxDbGFzcywKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAncC1kYXRlcGlja2VyLWlubGluZSc6IHRoaXMuaW5saW5lLAogICAgICAgICAgICAgICAgICAgICdwLWRpc2FibGVkJzogdGhpcy4kYXR0cnMuZGlzYWJsZWQsCiAgICAgICAgICAgICAgICAgICAgJ3AtZGF0ZXBpY2tlci10aW1lb25seSc6IHRoaXMudGltZU9ubHksCiAgICAgICAgICAgICAgICAgICAgJ3AtZGF0ZXBpY2tlci1tdWx0aXBsZS1tb250aCc6IHRoaXMubnVtYmVyT2ZNb250aHMgPiAxLAogICAgICAgICAgICAgICAgICAgICdwLWRhdGVwaWNrZXItbW9udGhwaWNrZXInOiAodGhpcy5jdXJyZW50VmlldyA9PT0gJ21vbnRoJyksCiAgICAgICAgICAgICAgICAgICAgJ3AtZGF0ZXBpY2tlci15ZWFycGlja2VyJzogKHRoaXMuY3VycmVudFZpZXcgPT09ICd5ZWFyJyksCiAgICAgICAgICAgICAgICAgICAgJ3AtZGF0ZXBpY2tlci10b3VjaC11aSc6IHRoaXMudG91Y2hVSQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdOwogICAgICAgIH0sCiAgICAgICAgbW9udGhzKCkgewogICAgICAgICAgICBsZXQgbW9udGhzID0gW107CiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5udW1iZXJPZk1vbnRoczsgaSsrKSB7CiAgICAgICAgICAgICAgICBsZXQgbW9udGggPSB0aGlzLmN1cnJlbnRNb250aCArIGk7CiAgICAgICAgICAgICAgICBsZXQgeWVhciA9IHRoaXMuY3VycmVudFllYXI7CiAgICAgICAgICAgICAgICBpZiAobW9udGggPiAxMSkgewogICAgICAgICAgICAgICAgICAgIG1vbnRoID0gbW9udGggJSAxMSAtIDE7CiAgICAgICAgICAgICAgICAgICAgeWVhciA9IHllYXIgKyAxOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGxldCBkYXRlcyA9IFtdOwogICAgICAgICAgICAgICAgbGV0IGZpcnN0RGF5ID0gdGhpcy5nZXRGaXJzdERheU9mTW9udGhJbmRleChtb250aCwgeWVhcik7CiAgICAgICAgICAgICAgICBsZXQgZGF5c0xlbmd0aCA9IHRoaXMuZ2V0RGF5c0NvdW50SW5Nb250aChtb250aCwgeWVhcik7CiAgICAgICAgICAgICAgICBsZXQgcHJldk1vbnRoRGF5c0xlbmd0aCA9IHRoaXMuZ2V0RGF5c0NvdW50SW5QcmV2TW9udGgobW9udGgsIHllYXIpOwogICAgICAgICAgICAgICAgbGV0IGRheU5vID0gMTsKICAgICAgICAgICAgICAgIGxldCB0b2RheSA9IG5ldyBEYXRlKCk7CiAgICAgICAgICAgICAgICBsZXQgd2Vla051bWJlcnMgPSBbXTsKICAgICAgICAgICAgICAgIGxldCBtb250aFJvd3MgPSBNYXRoLmNlaWwoKGRheXNMZW5ndGggKyBmaXJzdERheSkgLyA3KTsKCiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG1vbnRoUm93czsgaSsrKSB7CiAgICAgICAgICAgICAgICAgICAgbGV0IHdlZWsgPSBbXTsKCiAgICAgICAgICAgICAgICAgICAgaWYgKGkgPT0gMCkgewogICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBqID0gKHByZXZNb250aERheXNMZW5ndGggLSBmaXJzdERheSArIDEpOyBqIDw9IHByZXZNb250aERheXNMZW5ndGg7IGorKykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHByZXYgPSB0aGlzLmdldFByZXZpb3VzTW9udGhBbmRZZWFyKG1vbnRoLCB5ZWFyKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdlZWsucHVzaCh7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF5OiBqLCBtb250aDogcHJldi5tb250aCwgeWVhcjogcHJldi55ZWFyLCBvdGhlck1vbnRoOiB0cnVlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvZGF5OiB0aGlzLmlzVG9kYXkodG9kYXksIGosIHByZXYubW9udGgsIHByZXYueWVhciksIHNlbGVjdGFibGU6IHRoaXMuaXNTZWxlY3RhYmxlKGosIHByZXYubW9udGgsIHByZXYueWVhciwgdHJ1ZSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICBsZXQgcmVtYWluaW5nRGF5c0xlbmd0aCA9IDcgLSB3ZWVrLmxlbmd0aDsKICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCByZW1haW5pbmdEYXlzTGVuZ3RoOyBqKyspIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdlZWsucHVzaCh7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF5OiBkYXlObywgbW9udGg6IG1vbnRoLCB5ZWFyOiB5ZWFyLCB0b2RheTogdGhpcy5pc1RvZGF5KHRvZGF5LCBkYXlObywgbW9udGgsIHllYXIpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGFibGU6IHRoaXMuaXNTZWxlY3RhYmxlKGRheU5vLCBtb250aCwgeWVhciwgZmFsc2UpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRheU5vKys7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgNzsgaisrKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF5Tm8gPiBkYXlzTGVuZ3RoKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG5leHQgPSB0aGlzLmdldE5leHRNb250aEFuZFllYXIobW9udGgsIHllYXIpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdlZWsucHVzaCh7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRheTogZGF5Tm8gLSBkYXlzTGVuZ3RoLCBtb250aDogbmV4dC5tb250aCwgeWVhcjogbmV4dC55ZWFyLCBvdGhlck1vbnRoOiB0cnVlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b2RheTogdGhpcy5pc1RvZGF5KHRvZGF5LCBkYXlObyAtIGRheXNMZW5ndGgsIG5leHQubW9udGgsIG5leHQueWVhciksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGFibGU6IHRoaXMuaXNTZWxlY3RhYmxlKChkYXlObyAtIGRheXNMZW5ndGgpLCBuZXh0Lm1vbnRoLCBuZXh0LnllYXIsIHRydWUpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3ZWVrLnB1c2goewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXk6IGRheU5vLCBtb250aDogbW9udGgsIHllYXI6IHllYXIsIHRvZGF5OiB0aGlzLmlzVG9kYXkodG9kYXksIGRheU5vLCBtb250aCwgeWVhciksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGFibGU6IHRoaXMuaXNTZWxlY3RhYmxlKGRheU5vLCBtb250aCwgeWVhciwgZmFsc2UpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF5Tm8rKzsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuc2hvd1dlZWspIHsKICAgICAgICAgICAgICAgICAgICAgICAgd2Vla051bWJlcnMucHVzaCh0aGlzLmdldFdlZWtOdW1iZXIobmV3IERhdGUod2Vla1swXS55ZWFyLCB3ZWVrWzBdLm1vbnRoLCB3ZWVrWzBdLmRheSkpKTsKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIGRhdGVzLnB1c2god2Vlayk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgbW9udGhzLnB1c2goewogICAgICAgICAgICAgICAgICAgIG1vbnRoOiBtb250aCwKICAgICAgICAgICAgICAgICAgICB5ZWFyOiB5ZWFyLAogICAgICAgICAgICAgICAgICAgIGRhdGVzOiBkYXRlcywKICAgICAgICAgICAgICAgICAgICB3ZWVrTnVtYmVyczogd2Vla051bWJlcnMKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gbW9udGhzOwogICAgICAgIH0sCiAgICAgICAgd2Vla0RheXMoKSB7CiAgICAgICAgICAgIGxldCB3ZWVrRGF5cyA9IFtdOwogICAgICAgICAgICBsZXQgZGF5SW5kZXggPSB0aGlzLiRwcmltZXZ1ZS5jb25maWcubG9jYWxlLmZpcnN0RGF5T2ZXZWVrOwogICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDc7IGkrKykgewogICAgICAgICAgICAgICAgd2Vla0RheXMucHVzaCh0aGlzLiRwcmltZXZ1ZS5jb25maWcubG9jYWxlLmRheU5hbWVzTWluW2RheUluZGV4XSk7CiAgICAgICAgICAgICAgICBkYXlJbmRleCA9IChkYXlJbmRleCA9PSA2KSA/IDAgOiArK2RheUluZGV4OwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gd2Vla0RheXM7CiAgICAgICAgfSwKICAgICAgICB0aWNrc1RvMTk3MCgpIHsKICAgICAgICAgICAgcmV0dXJuICgoKDE5NzAgLSAxKSAqIDM2NSArIE1hdGguZmxvb3IoMTk3MCAvIDQpIC0gTWF0aC5mbG9vcigxOTcwIC8gMTAwKSArIE1hdGguZmxvb3IoMTk3MCAvIDQwMCkpICogMjQgKiA2MCAqIDYwICogMTAwMDAwMDApOwogICAgICAgIH0sCiAgICAgICAgc3VuZGF5SW5kZXgoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLiRwcmltZXZ1ZS5jb25maWcubG9jYWxlLmZpcnN0RGF5T2ZXZWVrID4gMCA/IDcgLSB0aGlzLiRwcmltZXZ1ZS5jb25maWcubG9jYWxlLmZpcnN0RGF5T2ZXZWVrIDogMDsKICAgICAgICB9LAogICAgICAgIGRhdGVQYXR0ZXJuKCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5kYXRlRm9ybWF0IHx8IHRoaXMuJHByaW1ldnVlLmNvbmZpZy5sb2NhbGUuZGF0ZUZvcm1hdDsKICAgICAgICB9LAogICAgICAgIHllYXJPcHRpb25zKCkgewogICAgICAgICAgICBpZiAodGhpcy55ZWFyUmFuZ2UpIHsKICAgICAgICAgICAgICAgIGxldCAkdm0gPSB0aGlzOwogICAgICAgICAgICAgICAgY29uc3QgeWVhcnMgPSB0aGlzLnllYXJSYW5nZS5zcGxpdCgnOicpOwogICAgICAgICAgICAgICAgbGV0IHllYXJTdGFydCA9IHBhcnNlSW50KHllYXJzWzBdKTsKICAgICAgICAgICAgICAgIGxldCB5ZWFyRW5kID0gcGFyc2VJbnQoeWVhcnNbMV0pOwogICAgICAgICAgICAgICAgbGV0IHllYXJPcHRpb25zID0gW107CgogICAgICAgICAgICAgICAgaWYgKHRoaXMuY3VycmVudFllYXIgPCB5ZWFyU3RhcnQpIHsKICAgICAgICAgICAgICAgICAgICAkdm0uY3VycmVudFllYXIgPSB5ZWFyRW5kOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZSBpZiAodGhpcy5jdXJyZW50WWVhciA+IHllYXJFbmQpIHsKICAgICAgICAgICAgICAgICAgICAkdm0uY3VycmVudFllYXIgPSB5ZWFyU3RhcnQ7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IHllYXJTdGFydDsgaSA8PSB5ZWFyRW5kOyBpKyspIHsKICAgICAgICAgICAgICAgICAgICB5ZWFyT3B0aW9ucy5wdXNoKGkpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHJldHVybiB5ZWFyT3B0aW9uczsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgIHJldHVybiBudWxsOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBtb250aFBpY2tlclZhbHVlcygpIHsKICAgICAgICAgICAgbGV0IG1vbnRoUGlja2VyVmFsdWVzID0gW107CiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDw9IDExOyBpKyspIHsKICAgICAgICAgICAgICAgIG1vbnRoUGlja2VyVmFsdWVzLnB1c2godGhpcy4kcHJpbWV2dWUuY29uZmlnLmxvY2FsZS5tb250aE5hbWVzU2hvcnRbaV0pOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gbW9udGhQaWNrZXJWYWx1ZXM7CiAgICAgICAgfSwKICAgICAgICB5ZWFyUGlja2VyVmFsdWVzKCkgewogICAgICAgICAgICBsZXQgeWVhclBpY2tlclZhbHVlcyA9IFtdOwogICAgICAgICAgICBsZXQgYmFzZSA9IHRoaXMuY3VycmVudFllYXIgLSAodGhpcy5jdXJyZW50WWVhciAlIDEwKTsKICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCAxMDsgaSsrKSB7CiAgICAgICAgICAgICAgICB5ZWFyUGlja2VyVmFsdWVzLnB1c2goYmFzZSArIGkpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB5ZWFyUGlja2VyVmFsdWVzOwogICAgICAgIH0sCiAgICAgICAgZm9ybWF0dGVkQ3VycmVudEhvdXIoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLmN1cnJlbnRIb3VyIDwgMTAgPyAnMCcgKyB0aGlzLmN1cnJlbnRIb3VyIDogdGhpcy5jdXJyZW50SG91cjsKCiAgICAgICAgfSwKICAgICAgICBmb3JtYXR0ZWRDdXJyZW50TWludXRlKCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5jdXJyZW50TWludXRlIDwgMTAgPyAnMCcgKyB0aGlzLmN1cnJlbnRNaW51dGUgOiB0aGlzLmN1cnJlbnRNaW51dGU7CiAgICAgICAgfSwKICAgICAgICBmb3JtYXR0ZWRDdXJyZW50U2Vjb25kKCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5jdXJyZW50U2Vjb25kIDwgMTAgPyAnMCcgKyB0aGlzLmN1cnJlbnRTZWNvbmQgOiB0aGlzLmN1cnJlbnRTZWNvbmQ7CiAgICAgICAgfSwKICAgICAgICB0b2RheUxhYmVsKCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy4kcHJpbWV2dWUuY29uZmlnLmxvY2FsZS50b2RheTsKICAgICAgICB9LAogICAgICAgIGNsZWFyTGFiZWwoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLiRwcmltZXZ1ZS5jb25maWcubG9jYWxlLmNsZWFyOwogICAgICAgIH0sCiAgICAgICAgd2Vla0hlYWRlckxhYmVsKCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy4kcHJpbWV2dWUuY29uZmlnLmxvY2FsZS53ZWVrSGVhZGVyOwogICAgICAgIH0sCiAgICAgICAgbW9udGhOYW1lcygpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuJHByaW1ldnVlLmNvbmZpZy5sb2NhbGUubW9udGhOYW1lczsKICAgICAgICB9LAogICAgICAgIGF0dHJpYnV0ZVNlbGVjdG9yKCkgewogICAgICAgICAgICByZXR1cm4gVW5pcXVlQ29tcG9uZW50SWQoKTsKICAgICAgICB9LAogICAgICAgIHN3aXRjaFZpZXdCdXR0b25EaXNhYmxlZCgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMubnVtYmVyT2ZNb250aHMgPiAxIHx8IHRoaXMuJGF0dHJzLmRpc2FibGVkOwogICAgICAgIH0KICAgIH0sCiAgICBjb21wb25lbnRzOiB7CiAgICAgICAgJ0NhbGVuZGFySW5wdXRUZXh0JzogSW5wdXRUZXh0LAogICAgICAgICdDYWxlbmRhckJ1dHRvbic6IEJ1dHRvbgogICAgfSwKICAgIGRpcmVjdGl2ZXM6IHsKICAgICAgICAncmlwcGxlJzogUmlwcGxlCiAgICB9Cn0K"},{"version":3,"sources":["Calendar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"Calendar.vue","sourceRoot":"src/uiComponents/Calendar","sourcesContent":["<template>\n    <span :class=\"containerClass\" :style=\"styles\">\n        <CalendarInputText ref=\"input\" v-if=\"!inline\" type=\"text\" v-bind=\"$attrs\" v-on=\"listeners\" :value=\"inputFieldValue\"\n            :readonly=\"!manualInput\" :aria-labelledby=\"ariaLabelledBy\" inputmode=\"none\" :class=\"inputClass\"\n            :style=\"inputStyle\" />\n        <CalendarButton v-if=\"showIcon\" :icon=\"icon\" tabindex=\"-1\" class=\"p-datepicker-trigger\" :disabled=\"$attrs.disabled\"\n            @click=\"onButtonClick\" type=\"button\" :aria-label=\"inputFieldValue\" />\n        <transition name=\"p-connected-overlay\" @enter=\"onOverlayEnter\" @after-enter=\"onOverlayEnterComplete\"\n            @leave=\"onOverlayLeave\">\n            <div ref=\"overlay\" :class=\"panelStyleClass\" v-if=\"inline ? true : overlayVisible\"\n                :role=\"inline ? null : 'dialog'\" :aria-labelledby=\"ariaLabelledBy\">\n                <template v-if=\"!timeOnly\">\n                    <div class=\"p-datepicker-group-container\">\n                        <div class=\"p-datepicker-group\" v-for=\"(month, groupIndex) of months\"\n                            :key=\"month.month + month.year\">\n                            <div class=\"p-datepicker-header\">\n                                <slot name=\"header\"></slot>\n                                <button class=\"p-datepicker-prev p-link\" v-show=\"groupIndex === 0\"\n                                    @click=\"onPrevButtonClick\" type=\"button\" @keydown=\"onContainerButtonKeydown\" v-ripple\n                                    :disabled=\"$attrs.disabled\">\n                                    <span class=\"p-datepicker-prev-icon pi pi-chevron-left\"></span>\n                                </button>\n                                <div class=\"p-datepicker-title\">\n                                    <button type=\"button\" @click=\"switchToMonthView\" @keydown=\"onContainerButtonKeydown\"\n                                        v-if=\"currentView === 'date'\" class=\"p-datepicker-month p-link\"\n                                        :disabled=\"switchViewButtonDisabled\">\n                                        {{ getMonthName(month.month) }}\n                                    </button>\n                                    <button type=\"button\" @click=\"switchToYearView\" @keydown=\"onContainerButtonKeydown\"\n                                        v-if=\"currentView !== 'year'\" class=\"p-datepicker-year p-link\"\n                                        :disabled=\"switchViewButtonDisabled\">\n                                        {{ getYear(month) }}\n                                    </button>\n                                    <span class=\"p-datepicker-decade\" v-if=\"currentView === 'year'\">\n                                        <slot name=\"decade\" :years=\"yearPickerValues\">\n                                            {{ yearPickerValues[0] }} - {{ yearPickerValues[yearPickerValues.length - 1] }}\n                                        </slot>\n                                    </span>\n                                </div>\n                                <button class=\"p-datepicker-next p-link\"\n                                    v-show=\"numberOfMonths === 1 ? true : (groupIndex === numberOfMonths - 1)\"\n                                    @click=\"onNextButtonClick\" type=\"button\" @keydown=\"onContainerButtonKeydown\" v-ripple\n                                    :disabled=\"$attrs.disabled\">\n                                    <span class=\"p-datepicker-next-icon pi pi-chevron-right\"></span>\n                                </button>\n                            </div>\n                            <div class=\"p-datepicker-calendar-container\" v-if=\"currentView === 'date'\">\n                                <table class=\"p-datepicker-calendar\">\n                                    <thead>\n                                        <tr>\n                                            <th scope=\"col\" v-if=\"showWeek\" class=\"p-datepicker-weekheader p-disabled\">\n                                                <span>{{ weekHeaderLabel }}</span>\n                                            </th>\n                                            <th scope=\"col\" v-for=\"weekDay of weekDays\" :key=\"weekDay\">\n                                                <span>{{ weekDay }}</span>\n                                            </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr v-for=\"(week, i) of month.dates\" :key=\"week[0].day + '' + week[0].month\">\n                                            <td v-if=\"showWeek\" class=\"p-datepicker-weeknumber\">\n                                                <span class=\"p-disabled\">\n                                                    <span style=\"visibility:hidden\"\n                                                        v-if=\"month.weekNumbers[i] < 10\">0</span>\n                                                    {{ month.weekNumbers[i] }}\n                                                </span>\n                                            </td>\n                                            <td v-for=\"date of week\" :key=\"date.day + '' + date.month\"\n                                                :class=\"{ 'p-datepicker-other-month': date.otherMonth, 'p-datepicker-today': date.today }\">\n                                                <span\n                                                    :class=\"{ 'p-highlight': isSelected(date), 'p-disabled': !date.selectable }\"\n                                                    @click=\"onDateSelect($event, date)\" draggable=\"false\"\n                                                    @keydown=\"onDateCellKeydown($event, date, groupIndex)\" v-ripple>\n                                                    <slot name=\"date\" :date=\"date\">{{ date.day }}</slot>\n                                                </span>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"p-monthpicker\" v-if=\"currentView === 'month'\">\n                        <span v-for=\"(m, i) of monthPickerValues\" :key=\"m\" @click=\"onMonthSelect($event, i)\"\n                            @keydown=\"onMonthCellKeydown($event, i)\" class=\"p-monthpicker-month\"\n                            :class=\"{ 'p-highlight': isMonthSelected(i) }\" v-ripple>\n                            {{ m }}\n                        </span>\n                    </div>\n                    <div class=\"p-yearpicker\" v-if=\"currentView === 'year'\">\n                        <span v-for=\"y of yearPickerValues\" :key=\"y\" @click=\"onYearSelect($event, y)\"\n                            @keydown=\"onYearCellKeydown($event, y)\" class=\"p-yearpicker-year\"\n                            :class=\"{ 'p-highlight': isYearSelected(y) }\" v-ripple>\n                            {{ y }}\n                        </span>\n                    </div>\n                </template>\n                <v-row no-gutters>\n                    <v-col>\n                        <div class=\"p-timepicker\" v-if=\"(showTime || timeOnly) && currentView === 'date'\">\n                            <div class=\"p-hour-picker\">\n                                <button class=\"p-link\" @mousedown=\"onTimePickerElementMouseDown($event, 0, 1)\"\n                                    @mouseup=\"onTimePickerElementMouseUp($event)\" @keydown=\"onContainerButtonKeydown\"\n                                    v-ripple @mouseleave=\"onTimePickerElementMouseLeave()\"\n                                    @keydown.enter=\"onTimePickerElementMouseDown($event, 0, 1)\"\n                                    @keyup.enter=\"onTimePickerElementMouseUp($event)\" type=\"button\">\n                                    <span class=\"pi pi-chevron-up\"></span>\n                                </button>\n                                <!-- <v-btn icon @click=\"incrementHour\" :disabled=\"disableIncrementHour\"><v-icon\n                                        class=\"material-icons-outlined\">expand_less</v-icon></v-btn> -->\n                                <input type=\"number\"\n                                    style=\"border: 2px solid #979797;border-radius: 3px;text-align: center;\"\n                                    class=\"time-input text--darken-3  text-xs-center centered-input\" pattern=\"[0-9]\"\n                                    onKeyPress=\"return ( event.charCode !=8 && event.charCode ==0 || (event.charCode >= 48 && event.charCode <= 57) && this.value.length <2) ? true :false   \"\n                                    @focusout=\"validate\" v-model=\"currentHour\" />\n\n                                <!-- <v-text-field outlined maxlength=\"2\" type=\"number\" v-model=\"currentHour\" hide-details=\"auto\"\n                                    @input=\"validate\" class=\"text--darken-3  text-xs-center centered-input\"></v-text-field> -->\n                                <button class=\"p-link\" @mousedown=\"onTimePickerElementMouseDown($event, 0, -1)\"\n                                    @mouseup=\"onTimePickerElementMouseUp($event)\" @keydown=\"onContainerButtonKeydown\"\n                                    v-ripple @mouseleave=\"onTimePickerElementMouseLeave()\"\n                                    @keydown.enter=\"onTimePickerElementMouseDown($event, 0, -1)\"\n                                    @keyup.enter=\"onTimePickerElementMouseUp($event)\" type=\"button\">\n                                    <span class=\"pi pi-chevron-down\"></span>\n                                </button>\n                                <!-- <v-btn icon @click=\"decrementHour\" :disabled=\"disableDecrementHour\"><v-icon\n                                        class=\"material-icons-outlined\">expand_more</v-icon></v-btn> -->\n\n                            </div>\n                            <div class=\"p-separator\">\n                                <span>{{ timeSeparator }}</span>\n                            </div>\n                            <div class=\"p-minute-picker\">\n                                <button class=\"p-link\" @mousedown=\"onTimePickerElementMouseDown($event, 1, 1)\"\n                                    @mouseup=\"onTimePickerElementMouseUp($event)\" @keydown=\"onContainerButtonKeydown\"\n                                    v-ripple :disabled=\"$attrs.disabled\" @mouseleave=\"onTimePickerElementMouseLeave()\"\n                                    @keydown.enter=\"onTimePickerElementMouseDown($event, 1, 1)\"\n                                    @keyup.enter=\"onTimePickerElementMouseUp($event)\" type=\"button\">\n                                    <span class=\"pi pi-chevron-up\"></span>\n                                </button>\n                                <!-- <v-btn icon @click=\"incrementMinute\" :disabled=\"disableIncrementMinute\"><v-icon\n                                        class=\"material-icons-outlined\">expand_less</v-icon></v-btn> -->\n                                <input type=\"number\"\n                                    style=\"border: 2px solid #979797;border-radius: 3px;text-align: center;\"\n                                    class=\"time-input text--darken-3  text-xs-center centered-input\" pattern=\"[0-9]\"\n                                    onKeyPress=\"return ( event.charCode !=8 && event.charCode ==0 || (event.charCode >= 48 && event.charCode <= 57) && this.value.length <2) ? true :false   \"\n @focusout=\"validate\"\n                                    v-model=\"currentMinute\" />\n\n                                <!-- <v-text-field outlined maxlength=\"2\" solo v-model=\"currentMinute\" :disabled=\"disableMin\"\n                                    @input=\"validate\" hide-details=\"auto\" class=\"text--darken-3 \" max=\"2\"\n                                    single-line></v-text-field> -->\n                                <button class=\"p-link\" @mousedown=\"onTimePickerElementMouseDown($event, 1, -1)\"\n                                    @mouseup=\"onTimePickerElementMouseUp($event)\" @keydown=\"onContainerButtonKeydown\"\n                                    v-ripple :disabled=\"$attrs.disabled\" @mouseleave=\"onTimePickerElementMouseLeave()\"\n                                    @keydown.enter=\"onTimePickerElementMouseDown($event, 1, -1)\"\n                                    @keyup.enter=\"onTimePickerElementMouseUp($event)\" type=\"button\">\n                                    <span class=\"pi pi-chevron-down\"></span>\n                                </button>\n                                <!-- <v-btn icon @click=\"decrementMinute\" :disabled=\"disableDecrementMinute\"><v-icon\n                                        class=\"material-icons-outlined\">expand_more</v-icon></v-btn> -->\n\n                            </div>\n                            <div class=\"p-separator\" v-if=\"showSeconds\">\n                                <span>{{ timeSeparator }}</span>\n                            </div>\n                            <div class=\"p-second-picker\" v-if=\"showSeconds\">\n                                <button class=\"p-link\" @mousedown=\"onTimePickerElementMouseDown($event, 2, 1)\"\n                                    @mouseup=\"onTimePickerElementMouseUp($event)\" @keydown=\"onContainerButtonKeydown\"\n                                    v-ripple :disabled=\"$attrs.disabled\" @mouseleave=\"onTimePickerElementMouseLeave()\"\n                                    @keydown.enter=\"onTimePickerElementMouseDown($event, 2, 1)\"\n                                    @keyup.enter=\"onTimePickerElementMouseUp($event)\" type=\"button\">\n                                    <span class=\"pi pi-chevron-up\"></span>\n                                </button>\n                                <span>{{ formattedCurrentSecond }}</span>\n                                <button class=\"p-link\" @mousedown=\"onTimePickerElementMouseDown($event, 2, -1)\"\n                                    @mouseup=\"onTimePickerElementMouseUp($event)\" @keydown=\"onContainerButtonKeydown\"\n                                    v-ripple :disabled=\"$attrs.disabled\" @mouseleave=\"onTimePickerElementMouseLeave()\"\n                                    @keydown.enter=\"onTimePickerElementMouseDown($event, 2, -1)\"\n                                    @keyup.enter=\"onTimePickerElementMouseUp($event)\" type=\"button\">\n                                    <span class=\"pi pi-chevron-down\"></span>\n                                </button>\n                            </div>\n                            <div class=\"p-separator\" v-if=\"hourFormat == '12'\">\n                                <span>{{ timeSeparator }}</span>\n                            </div>\n\n                        </div>\n                    </v-col>\n                    <v-col cols=\"3\" v-if=\"(showTime || timeOnly) && currentView === 'date'\">\n                        <v-btn style=\"border: 1px solid #f2555c;\" elevation=\"0\" class=\"mt-10 \" v-if=\"hourFormat == '12'\"\n                            width=\"5px\" height=\"55px\" @click.native.stop=\"toggleAMPM($event)\" :disabled=\"$attrs.disabled\">{{\n                                pm ? 'PM' :\n                                'AM'\n                            }}</v-btn>\n                    </v-col>\n                </v-row>\n                <!-- <v-btn @click=\"onSetDateClick($event)\" style=\"background-color: #f2555c;color: white;\" v-if=\"!showTime && !timeOnly\"\n                    :disabled=\"!disableSetDate\" class=\"text-center setdate-btn mt-2 mb-2\" small>SET DATE</v-btn> -->\n                <v-btn @click=\"onSetButtonClick($event)\" :loading=\"setButtonLoading\"\n                    style=\"background-color: #f2555c;color: white;\" v-if=\"showTime\" :disabled=\"!disableSetTime\" elevation=\"20\"\n                    class=\"text-center settime-btn mt-2 mb-2\" small>SET TIME</v-btn>\n                <div class=\"p-datepicker-buttonbar\" v-if=\"showButtonBar\">\n                    <CalendarButton type=\"button\" :label=\"todayLabel\" @click=\"onTodayButtonClick($event)\"\n                        class=\"p-button-text\" @keydown=\"onContainerButtonKeydown\" />\n                    <CalendarButton type=\"button\" :label=\"clearLabel\" @click=\"onClearButtonClick($event)\"\n                        class=\"p-button-text\" @keydown=\"onContainerButtonKeydown\" />\n                </div>\n                <slot name=\"footer\"></slot>\n            </div>\n        </transition>\n    </span>\n</template>\n\n<script>\nimport ConnectedOverlayScrollHandler from './ConnectedOverlayScrollHandler';\nimport UniqueComponentId from './UniqueComponentId';\nimport InputText from './InputText';\nimport Button from '../Calendar/Button';\nimport DomHandler from '../Calendar/DomHandler';\nimport { format } from \"date-fns\";\n\nimport { EventBus } from \"@/lib/EventBus\";\nimport Ripple from '../Calendar/Ripple';\n\nexport default {\n    inheritAttrs: false,\n    props: {\n        value: null,\n        selectionMode: {\n            type: String,\n            default: 'single'\n        },\n        dateFormat: String,\n        inline: {\n            type: Boolean,\n            default: false\n        },\n        showOtherMonths: {\n            type: Boolean,\n            default: true\n        },\n        selectOtherMonths: {\n            type: Boolean,\n            default: false\n        },\n        showIcon: {\n            type: Boolean,\n            default: false\n        },\n        icon: {\n            type: String,\n            default: 'pi pi-calendar'\n        },\n        numberOfMonths: {\n            type: Number,\n            default: 1\n        },\n        responsiveOptions: Array,\n        view: {\n            type: String,\n            default: 'date'\n        },\n        touchUI: {\n            type: Boolean,\n            default: false\n        },\n        monthNavigator: {\n            type: Boolean,\n            default: false\n        },\n        yearNavigator: {\n            type: Boolean,\n            default: false\n        },\n        yearRange: {\n            type: String,\n            default: null\n        },\n        panelClass: {\n            type: String,\n            default: null\n        },\n        panelStyle: {\n            type: String,\n            default: null\n        },\n        minDate: {\n            type: Date,\n            value: null\n        },\n        maxDate: {\n            type: Date,\n            value: null\n        },\n        disabledDates: {\n            type: Array,\n            value: null\n        },\n        disabledDays: {\n            type: Array,\n            value: null\n        },\n        maxDateCount: {\n            type: Number,\n            value: null\n        },\n        showOnFocus: {\n            type: Boolean,\n            default: true\n        },\n        autoZIndex: {\n            type: Boolean,\n            default: true\n        },\n        baseZIndex: {\n            type: Number,\n            default: 0\n        },\n        showButtonBar: {\n            type: Boolean,\n            default: false\n        },\n        shortYearCutoff: {\n            type: String,\n            default: '+10'\n        },\n        showTime: {\n            type: Boolean,\n            default: false\n        },\n        timeOnly: {\n            type: Boolean,\n            default: false\n        },\n        hourFormat: {\n            type: String,\n            default: '24'\n        },\n        stepHour: {\n            type: Number,\n            default: 1\n        },\n        stepMinute: {\n            type: Number,\n            default: 1\n        },\n        stepSecond: {\n            type: Number,\n            default: 1\n        },\n        showSeconds: {\n            type: Boolean,\n            default: false\n        },\n        hideOnDateTimeSelect: {\n            type: Boolean,\n            default: false\n        },\n        timeSeparator: {\n            type: String,\n            default: ':'\n        },\n        showWeek: {\n            type: Boolean,\n            default: false\n        },\n        manualInput: {\n            type: Boolean,\n            default: true\n        },\n        ariaLabelledBy: {\n            type: String,\n            default: null\n        },\n        appendTo: {\n            type: String,\n            default: null\n        },\n        inputClass: null,\n        inputStyle: null,\n        className: null,\n        styles: null\n    },\n    navigationState: null,\n    timePickerChange: false,\n    scrollHandler: null,\n    outsideClickListener: null,\n    maskClickListener: null,\n    resizeListener: null,\n    mask: null,\n    timePickerTimer: null,\n\n    isKeydown: false,\n    preventFocus: false,\n    created() {\n        this.updateCurrentMetaData()\n    },\n    mounted() {\n        this.createResponsiveStyle();\n        if (this.inline) {\n            this.$refs.overlay && this.$refs.overlay.setAttribute(this.attributeSelector, '');\n            if (!this.$attrs.disabled) {\n                this.initFocusableCell();\n                this.$refs.overlay.style.width = DomHandler.getOuterWidth(this.$el) + 'px';\n            }\n        }\n        EventBus.$on('datetime-set', () => {\n            this.setButtonLoading = false;\n        })\n    },\n    updated() {\n        if (this.$refs.overlay) {\n            this.preventFocus = true;\n            this.updateFocus();\n        }\n\n        if (this.$refs.input && this.selectionStart != null && this.selectionEnd != null) {\n            this.$refs.input.$el.selectionStart = this.selectionStart;\n            this.$refs.input.$el.selectionEnd = this.selectionEnd;\n            this.selectionStart = null;\n            this.selectionEnd = null;\n        }\n    },\n    beforeDestroy() {\n        if (this.timePickerTimer) {\n            clearTimeout(this.timePickerTimer);\n        }\n\n        if (this.mask) {\n            this.destroyMask();\n        }\n\n        this.destroyResponsiveStyleElement();\n        this.restoreAppend();\n        this.unbindOutsideClickListener();\n        this.unbindResizeListener();\n\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n    },\n    data() {\n        return {\n            currentMonth: null,\n            currentYear: null,\n            disableHour: false,\n            setButtonLoading: false,\n            disableMin: false,\n            disableDecrementHour: false,\n            disableIncrementHour: false,\n            disableIncrementMinute: false,\n            disableDecrementMinute: false,\n            currentHour: null,\n            currentMinute: null,\n            currentSecond: null,\n            pm: null,\n            focused: false,\n            overlayVisible: false,\n            currentView: this.view\n        }\n    },\n    watch: {\n        value() {\n            this.updateCurrentMetaData();\n        },\n        months() {\n            if (this.$refs.overlay) {\n                if (!this.focused) {\n                    setTimeout(this.updateFocus, 0);\n                }\n            }\n        },\n        numberOfMonths() {\n            this.destroyResponsiveStyleElement();\n            this.createResponsiveStyle();\n        },\n        responsiveOptions() {\n            this.destroyResponsiveStyleElement();\n            this.createResponsiveStyle();\n        },\n        currentView() {\n            Promise.resolve(null).then(() => this.alignOverlay());\n        }\n    },\n    methods: {\n        validate() {\n            if (this.currentHour.length > 2) return false;\n            if (this.currentHour == null || this.currentHour == undefined || this.currentHour > 12 || this.currentMinute > 59) {\n                this.currentHour = format(this.minDate, 'hh')\n                this.currentMinute = format(this.minDate, 'mm')\n                this.pm = format(this.minDate, 'aaa') == 'am' ? false : true;\n                this.validateTime(this.currentHour, this.currentMinute, this.currentSecond, this.pm) ? this.updateModelTime() : \"\";\n                return;\n            }\n            else if (this.currentMinute == 0) {\n                let hour = this.currentHour;\n                this.currentHour = hour;\n                this.currentMinute = 0;\n                this.validateTime(this.currentHour, this.currentMinute, this.currentSecond, this.pm) ? this.updateModelTime() : \"\";\n                return;\n            }\n            else if (this.currentMinute <= 15 && this.currentMinute > 0) {\n                let hour = this.currentHour;\n                this.currentHour = hour;\n                this.currentMinute = 15;\n                this.validateTime(this.currentHour, this.currentMinute, this.currentSecond, this.pm) ? this.updateModelTime() : \"\";\n                return;\n            }\n            else if (this.currentMinute > 15 && this.currentMinute < 46) {\n                let hour = this.currentHour\n                let minuteArray = [0, 15, 30, 45]\n                this.currentMinute = minuteArray.filter((a) => a >= this.currentMinute)[0];\n                this.currentHour = hour;\n                this.validateTime(this.currentHour, this.currentMinute, this.currentSecond, this.pm) ? this.updateModelTime() : \"\";\n                return;\n            }\n            else if (this.currentMinute > 45 && this.currentMinute < 60) {\n                let hour = this.currentHour\n                this.currentHour = hour;\n                this.currentMinute = 0;\n            }\n            // else {\n            //     console.log('here 5', this.currentHour  )\n            //     this.currentHour = format(this.minDate, 'hh')\n            //     this.currentMinute = format(this.minDate, 'mm')\n            //     this.pm = format(this.minDate, 'aaa') == 'am' ? false : true;\n            //     this.validateTime(this.currentHour, this.currentMinute, this.currentSecond, this.pm) ? this.updateModelTime() : \"\";\n            //     this.updateModelTime()\n            //     return;\n            // }\n\n\n\n        },\n        isComparable() {\n            return this.value != null && typeof this.value !== 'string';\n        },\n        isSelected(dateMeta) {\n            if (!this.isComparable()) {\n                return false;\n            }\n\n            if (this.value) {\n                if (this.isSingleSelection()) {\n                    return this.isDateEquals(this.value, dateMeta);\n                }\n                else if (this.isMultipleSelection()) {\n                    let selected = false;\n                    for (let date of this.value) {\n                        selected = this.isDateEquals(date, dateMeta);\n                        if (selected) {\n                            break;\n                        }\n                    }\n\n                    return selected;\n                }\n                else if (this.isRangeSelection()) {\n                    if (this.value[1])\n                        return this.isDateEquals(this.value[0], dateMeta) || this.isDateEquals(this.value[1], dateMeta) || this.isDateBetween(this.value[0], this.value[1], dateMeta);\n                    else {\n                        return this.isDateEquals(this.value[0], dateMeta);\n                    }\n\n                }\n            }\n\n            return false;\n        },\n        isMonthSelected(month) {\n            if (this.isComparable()) {\n                let value = this.isRangeSelection() ? this.value[0] : this.value;\n                return !this.isMultipleSelection() ? (value.getMonth() === month && value.getFullYear() === this.currentYear) : false;\n            }\n            return false;\n        },\n        isYearSelected(year) {\n            if (this.isComparable()) {\n                let value = this.isRangeSelection() ? this.value[0] : this.value;\n                return !this.isMultipleSelection() && this.isComparable() ? (value.getFullYear() === year) : false;\n            }\n            return false;\n        },\n        isDateEquals(value, dateMeta) {\n            if (value)\n                return value.getDate() === dateMeta.day && value.getMonth() === dateMeta.month && value.getFullYear() === dateMeta.year;\n            else\n                return false;\n        },\n        isDateBetween(start, end, dateMeta) {\n            let between = false;\n            if (start && end) {\n                let date = new Date(dateMeta.year, dateMeta.month, dateMeta.day);\n                return start.getTime() <= date.getTime() && end.getTime() >= date.getTime();\n            }\n\n            return between;\n        },\n        getFirstDayOfMonthIndex(month, year) {\n            let day = new Date();\n            day.setDate(1);\n            day.setMonth(month);\n            day.setFullYear(year);\n\n            let dayIndex = day.getDay() + this.sundayIndex;\n            return dayIndex >= 7 ? dayIndex - 7 : dayIndex;\n        },\n        getDaysCountInMonth(month, year) {\n            return 32 - this.daylightSavingAdjust(new Date(year, month, 32)).getDate();\n        },\n        getDaysCountInPrevMonth(month, year) {\n            let prev = this.getPreviousMonthAndYear(month, year);\n            return this.getDaysCountInMonth(prev.month, prev.year);\n        },\n        getPreviousMonthAndYear(month, year) {\n            let m, y;\n\n            if (month === 0) {\n                m = 11;\n                y = year - 1;\n            }\n            else {\n                m = month - 1;\n                y = year;\n            }\n\n            return { 'month': m, 'year': y };\n        },\n        getNextMonthAndYear(month, year) {\n            let m, y;\n\n            if (month === 11) {\n                m = 0;\n                y = year + 1;\n            }\n            else {\n                m = month + 1;\n                y = year;\n            }\n\n            return { 'month': m, 'year': y };\n        },\n        daylightSavingAdjust(date) {\n            if (!date) {\n                return null;\n            }\n\n            date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);\n\n            return date;\n        },\n        isToday(today, day, month, year) {\n            return today.getDate() === day && today.getMonth() === month && today.getFullYear() === year;\n        },\n        isSelectable(day, month, year, otherMonth) {\n            let validMin = true;\n            let validMax = true;\n            let validDate = true;\n            let validDay = true;\n\n            if (otherMonth && !this.selectOtherMonths) {\n                return false;\n            }\n\n            if (this.minDate) {\n                if (this.minDate.getFullYear() > year) {\n                    validMin = false;\n                }\n                else if (this.minDate.getFullYear() === year) {\n                    if (this.minDate.getMonth() > month) {\n                        validMin = false;\n                    }\n                    else if (this.minDate.getMonth() === month) {\n                        if (this.minDate.getDate() > day) {\n                            validMin = false;\n                        }\n                    }\n                }\n            }\n\n            if (this.maxDate) {\n                if (this.maxDate.getFullYear() < year) {\n                    validMax = false;\n                }\n                else if (this.maxDate.getFullYear() === year) {\n                    if (this.maxDate.getMonth() < month) {\n                        validMax = false;\n                    }\n                    else if (this.maxDate.getMonth() === month) {\n                        if (this.maxDate.getDate() < day) {\n                            validMax = false;\n                        }\n                    }\n                }\n            }\n\n            if (this.disabledDates) {\n                validDate = !this.isDateDisabled(day, month, year);\n            }\n\n            if (this.disabledDays) {\n                validDay = !this.isDayDisabled(day, month, year)\n            }\n\n\n            return validMin && validMax && validDate && validDay;\n        },\n        onOverlayEnter(el) {\n            el.setAttribute(this.attributeSelector, '');\n\n            if (this.autoZIndex) {\n                this.$refs.overlay.style.zIndex = String(this.baseZIndex + DomHandler.generateZIndex());\n            }\n            this.appendContainer();\n            this.alignOverlay();\n            this.$emit('show');\n            this.updateCurrentMetaData();\n            this.validateTime(this.currentHour, this.currentMinute, this.currentSecond, this.pm)\n        },\n        onOverlayEnterComplete() {\n            this.bindOutsideClickListener();\n            this.bindScrollListener();\n            this.bindResizeListener();\n            this.updateCurrentMetaData();\n            this.validateTime(this.currentHour, this.currentMinute, this.currentSecond, this.pm)\n\n        },\n        onOverlayLeave() {\n            this.currentView = this.view;\n            this.unbindOutsideClickListener();\n            this.unbindScrollListener();\n            this.unbindResizeListener();\n            this.$emit('hide');\n            if (this.mask) {\n                this.disableModality();\n            }\n        },\n        onPrevButtonClick(event) {\n            if (this.showOtherMonths) {\n                this.navigationState = { backward: true, button: true };\n                this.navBackward(event);\n            }\n        },\n        onNextButtonClick(event) {\n            if (this.showOtherMonths) {\n                this.navigationState = { backward: false, button: true };\n                this.navForward(event);\n            }\n        },\n        navBackward(event) {\n            event.preventDefault();\n\n            if (!this.isEnabled()) {\n                return;\n            }\n\n            if (this.currentView === 'month') {\n                this.decrementYear();\n            }\n            else if (this.currentView === 'year') {\n                this.decrementDecade();\n            }\n            else {\n                if (this.currentMonth === 0) {\n                    this.currentMonth = 11;\n                    this.decrementYear();\n                }\n                else {\n                    this.currentMonth--;\n                }\n\n                this.$emit('month-change', { month: this.currentMonth + 1, year: this.currentYear });\n            }\n        },\n        navForward(event) {\n            event.preventDefault();\n\n            if (!this.isEnabled()) {\n                return;\n            }\n\n            if (this.currentView === 'month') {\n                this.incrementYear();\n            }\n            else if (this.currentView === 'year') {\n                this.incrementDecade();\n            }\n            else {\n                if (this.currentMonth === 11) {\n                    this.currentMonth = 0;\n                    this.incrementYear();\n                }\n                else {\n                    this.currentMonth++;\n                }\n\n                this.$emit('month-change', { month: this.currentMonth + 1, year: this.currentYear });\n            }\n        },\n        decrementYear() {\n            this.currentYear--;\n        },\n        decrementDecade() {\n            this.currentYear = this.currentYear - 10;\n        },\n        incrementYear() {\n            this.currentYear++;\n        },\n        incrementDecade() {\n            this.currentYear = this.currentYear + 10;\n        },\n        switchToMonthView(event) {\n            this.currentView = 'month';\n            setTimeout(this.updateFocus, 0);\n            event.preventDefault();\n        },\n        switchToYearView(event) {\n            this.currentView = 'year';\n            setTimeout(this.updateFocus, 0);\n            event.preventDefault();\n        },\n        isEnabled() {\n            return !this.$attrs.disabled && !this.$attrs.readonly;\n        },\n        updateCurrentTimeMeta(date) {\n            const hours = date.getHours();\n\n            if (this.hourFormat === '12') {\n                this.pm = hours > 11;\n\n                if (hours >= 12)\n                    this.currentHour = (hours == 12) ? 12 : hours - 12;\n                else\n                    this.currentHour = (hours == 0) ? 12 : hours;\n            }\n            else {\n                this.currentHour = date.getHours();\n            }\n\n            this.currentMinute = date.getMinutes();\n            this.currentSecond = date.getSeconds();\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    if (this.overlayVisible && this.isOutsideClicked(event)) {\n                        this.overlayVisible = false;\n                    }\n                };\n                document.addEventListener('mousedown', this.outsideClickListener);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('mousedown', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        bindScrollListener() {\n            if (!this.scrollHandler) {\n                this.scrollHandler = new ConnectedOverlayScrollHandler(this.$el, () => {\n                    if (this.overlayVisible) {\n                        this.overlayVisible = false;\n                    }\n                });\n            }\n\n            this.scrollHandler.bindScrollListener();\n        },\n        unbindScrollListener() {\n            if (this.scrollHandler) {\n                this.scrollHandler.unbindScrollListener();\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = () => {\n                    if (this.overlayVisible) {\n                        this.overlayVisible = false;\n                    }\n                };\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        isOutsideClicked(event) {\n            return !(this.$el.isSameNode(event.target) || this.isNavIconClicked(event) ||\n                this.$el.contains(event.target) || (this.$refs.overlay && this.$refs.overlay.contains(event.target)));\n        },\n        isNavIconClicked(event) {\n            return (DomHandler.hasClass(event.target, 'p-datepicker-prev') || DomHandler.hasClass(event.target, 'p-datepicker-prev-icon')\n                || DomHandler.hasClass(event.target, 'p-datepicker-next') || DomHandler.hasClass(event.target, 'p-datepicker-next-icon'));\n        },\n        alignOverlay() {\n            if (this.touchUI) {\n                this.enableModality();\n            }\n            else if (this.$refs.overlay) {\n                if (this.appendTo)\n                    DomHandler.absolutePosition(this.$refs.overlay, this.$el);\n                else\n                    DomHandler.relativePosition(this.$refs.overlay, this.$el);\n            }\n        },\n        onButtonClick() {\n            if (this.isEnabled()) {\n                if (!this.overlayVisible) {\n                    this.$refs.input.$el.focus();\n                    this.overlayVisible = true;\n                }\n                else {\n                    this.overlayVisible = false;\n                }\n            }\n        },\n        isDateDisabled(day, month, year) {\n            if (this.disabledDates) {\n                for (let disabledDate of this.disabledDates) {\n                    if (disabledDate.getFullYear() === year && disabledDate.getMonth() === month && disabledDate.getDate() === day) {\n                        return true;\n                    }\n                }\n            }\n\n            return false;\n        },\n        isDayDisabled(day, month, year) {\n            if (this.disabledDays) {\n                let weekday = new Date(year, month, day);\n                let weekdayNumber = weekday.getDay();\n                return this.disabledDays.indexOf(weekdayNumber) !== -1;\n            }\n            return false;\n        },\n        onMonthDropdownChange(value) {\n            this.currentMonth = parseInt(value);\n            this.$emit('month-change', { month: this.currentMonth + 1, year: this.currentYear });\n        },\n        onYearDropdownChange(value) {\n            this.currentYear = parseInt(value);\n            this.$emit('year-change', { month: this.currentMonth + 1, year: this.currentYear });\n        },\n        onDateSelect(event, dateMeta) {\n            if (this.$attrs.disabled || !dateMeta.selectable) {\n                return;\n            }\n\n            DomHandler.find(this.$refs.overlay, '.p-datepicker-calendar td span:not(.p-disabled)').forEach(cell => cell.tabIndex = -1);\n\n            if (event) {\n                event.currentTarget.focus();\n            }\n\n            if (this.isMultipleSelection() && this.isSelected(dateMeta)) {\n                let newValue = this.value.filter(date => !this.isDateEquals(date, dateMeta));\n                this.updateModel(newValue);\n            }\n            else {\n                if (this.shouldSelectDate(dateMeta)) {\n                    if (dateMeta.otherMonth) {\n                        this.currentMonth = dateMeta.month;\n                        this.currentYear = dateMeta.year;\n                        this.selectDate(dateMeta);\n                    }\n                    else {\n                        this.selectDate(dateMeta);\n                    }\n                }\n            }\n\n            if (this.isSingleSelection() && (!this.showTime || this.hideOnDateTimeSelect)) {\n                setTimeout(() => {\n                    this.overlayVisible = false;\n                }, 150);\n            }\n        },\n        selectDate(dateMeta) {\n            let date = new Date(dateMeta.year, dateMeta.month, dateMeta.day);\n\n            if (this.showTime) {\n                if (this.hourFormat === '12' && this.pm && this.currentHour != 12)\n                    date.setHours(Number(this.currentHour) + 12);\n                else\n                    date.setHours(Number(this.currentHour));\n\n                date.setMinutes(Number(this.currentMinute));\n                date.setSeconds(Number(this.currentSecond));\n            }\n\n            if (this.minDate && this.minDate > date) {\n                date = this.minDate;\n                this.currentHour = date.getHours();\n                this.currentMinute = date.getMinutes();\n                this.currentSecond = date.getSeconds();\n            }\n\n            if (this.maxDate && this.maxDate < date) {\n                date = this.maxDate;\n                this.currentHour = date.getHours();\n                this.currentMinute = date.getMinutes();\n                this.currentSecond = date.getSeconds();\n            }\n\n            let modelVal = null;\n\n            if (this.isSingleSelection()) {\n                modelVal = date;\n            }\n            else if (this.isMultipleSelection()) {\n                modelVal = this.value ? [...this.value, date] : [date];\n            }\n            else if (this.isRangeSelection()) {\n                if (this.value && this.value.length) {\n                    let startDate = this.value[0];\n                    let endDate = this.value[1];\n\n                    if (!endDate && date.getTime() >= startDate.getTime()) {\n                        endDate = date;\n                    }\n                    else {\n                        startDate = date;\n                        endDate = null;\n                    }\n                    modelVal = [startDate, endDate];\n                }\n                else {\n                    modelVal = [date, null];\n                }\n            }\n\n            if (modelVal !== null) {\n                this.updateModel(modelVal);\n            }\n            this.$emit('date-select', date);\n        },\n        updateModel(value) {\n            this.$emit('input', value);\n        },\n        shouldSelectDate() {\n            if (this.isMultipleSelection())\n                return this.maxDateCount != null ? this.maxDateCount > (this.value ? this.value.length : 0) : true;\n            else\n                return true;\n        },\n        isSingleSelection() {\n            return this.selectionMode === 'single';\n        },\n        isRangeSelection() {\n            return this.selectionMode === 'range';\n        },\n        isMultipleSelection() {\n            return this.selectionMode === 'multiple';\n        },\n        formatValue(value) {\n            if (typeof value === 'string') {\n                return value;\n            }\n\n            let formattedValue = '';\n            if (value) {\n                try {\n                    if (this.isSingleSelection()) {\n                        formattedValue = this.formatDateTime(value);\n                    }\n                    else if (this.isMultipleSelection()) {\n                        for (let i = 0; i < value.length; i++) {\n                            let dateAsString = this.formatDateTime(value[i]);\n                            formattedValue += dateAsString;\n                            if (i !== (value.length - 1)) {\n                                formattedValue += ', ';\n                            }\n                        }\n                    }\n                    else if (this.isRangeSelection()) {\n                        if (value && value.length) {\n                            let startDate = value[0];\n                            let endDate = value[1];\n\n                            formattedValue = this.formatDateTime(startDate);\n                            if (endDate) {\n                                formattedValue += ' - ' + this.formatDateTime(endDate);\n                            }\n                        }\n                    }\n                }\n                catch (err) {\n                    formattedValue = value;\n                }\n            }\n\n            return formattedValue;\n        },\n        formatDateTime(date) {\n            let formattedValue = null;\n            if (date) {\n                if (this.timeOnly) {\n                    formattedValue = this.formatTime(date);\n                }\n                else {\n                    formattedValue = this.formatDate(date, this.datePattern);\n                    if (this.showTime) {\n                        formattedValue += ' ' + this.formatTime(date);\n                    }\n                }\n            }\n\n            return formattedValue;\n        },\n        formatDate(date, format) {\n            if (!date) {\n                return '';\n            }\n\n            let iFormat;\n            const lookAhead = (match) => {\n                const matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) === match);\n                if (matches) {\n                    iFormat++;\n                }\n                return matches;\n            },\n                formatNumber = (match, value, len) => {\n                    let num = '' + value;\n                    if (lookAhead(match)) {\n                        while (num.length < len) {\n                            num = '0' + num;\n                        }\n                    }\n                    return num;\n                },\n                formatName = (match, value, shortNames, longNames) => {\n                    return (lookAhead(match) ? longNames[value] : shortNames[value]);\n                };\n            let output = '';\n            let literal = false;\n\n            if (date) {\n                for (iFormat = 0; iFormat < format.length; iFormat++) {\n                    if (literal) {\n                        if (format.charAt(iFormat) === '\\'' && !lookAhead('\\'')) {\n                            literal = false;\n                        } else {\n                            output += format.charAt(iFormat);\n                        }\n                    } else {\n                        switch (format.charAt(iFormat)) {\n                            case 'd':\n                                output += formatNumber('d', date.getDate(), 2);\n                                break;\n                            case 'D':\n                                output += formatName('D', date.getDay(), this.$primevue.config.locale.dayNamesShort, this.$primevue.config.locale.dayNames);\n                                break;\n                            case 'o':\n                                output += formatNumber('o',\n                                    Math.round((\n                                        new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime() -\n                                        new Date(date.getFullYear(), 0, 0).getTime()) / 86400000), 3);\n                                break;\n                            case 'm':\n                                output += formatNumber('m', date.getMonth() + 1, 2);\n                                break;\n                            case 'M':\n                                output += formatName('M', date.getMonth(), this.$primevue.config.locale.monthNamesShort, this.$primevue.config.locale.monthNames);\n                                break;\n                            case 'y':\n                                output += lookAhead('y') ? date.getFullYear() : (date.getFullYear() % 100 < 10 ? '0' : '') + (date.getFullYear() % 100);\n                                break;\n                            case '@':\n                                output += date.getTime();\n                                break;\n                            case '!':\n                                output += date.getTime() * 10000 + this.ticksTo1970;\n                                break;\n                            case '\\'':\n                                if (lookAhead('\\'')) {\n                                    output += '\\'';\n                                } else {\n                                    literal = true;\n                                }\n                                break;\n                            default:\n                                output += format.charAt(iFormat);\n                        }\n                    }\n                }\n            }\n            return output;\n        },\n        formatTime(date) {\n            if (!date) {\n                return '';\n            }\n\n            let output = '';\n            let hours = date.getHours();\n            let minutes = date.getMinutes();\n            let seconds = date.getSeconds();\n\n            if (this.hourFormat === '12' && hours > 11 && hours !== 12) {\n                hours -= 12;\n            }\n\n            if (this.hourFormat === '12') {\n                output += hours === 0 ? 12 : (hours < 10) ? '0' + hours : hours;\n            }\n            else {\n                output += (hours < 10) ? '0' + hours : hours;\n            }\n            output += ':';\n            output += (minutes < 10) ? '0' + minutes : minutes;\n\n            if (this.showSeconds) {\n                output += ':';\n                output += (seconds < 10) ? '0' + seconds : seconds;\n            }\n\n            if (this.hourFormat === '12') {\n                output += date.getHours() > 11 ? ' PM' : ' AM';\n            }\n\n            return output;\n        },\n        onTodayButtonClick(event) {\n            let date = new Date();\n            let dateMeta = {\n                day: date.getDate(),\n                month: date.getMonth(),\n                year: date.getFullYear(),\n                otherMonth: date.getMonth() !== this.currentMonth || date.getFullYear() !== this.currentYear,\n                today: true,\n                selectable: true\n            };\n\n            this.onDateSelect(null, dateMeta);\n            this.$emit('today-click', date);\n            event.preventDefault();\n        },\n        onSetButtonClick() {\n            try{\n            this.setButtonLoading = true;\n            EventBus.$emit('SET_TIME')\n            }\n            catch(err){\n                this.setButtonLoading = false\n                console.log(err)\n            }\n        },\n        onSetDateClick() {\n            EventBus.$emit('SET_DATE')\n        },\n        onClearButtonClick(event) {\n            this.updateModel(null);\n            this.overlayVisible = false;\n            this.$emit('clear-click', event);\n            event.preventDefault();\n        },\n        onTimePickerElementMouseDown(event, type, direction) {\n            if (this.isEnabled()) {\n                this.repeat(event, null, type, direction);\n                event.preventDefault();\n            }\n        },\n        onTimePickerElementMouseUp(event) {\n            if (this.isEnabled()) {\n                this.clearTimePickerTimer();\n                this.updateModelTime();\n                event.preventDefault();\n            }\n        },\n        onTimePickerElementMouseLeave() {\n            this.clearTimePickerTimer();\n        },\n        repeat(event, interval, type, direction) {\n            let i = interval || 500;\n\n            this.clearTimePickerTimer();\n            this.timePickerTimer = setTimeout(() => {\n                this.repeat(event, 100, type, direction);\n            }, i);\n\n            switch (type) {\n                case 0:\n                    if (direction === 1)\n                        this.incrementHour(event);\n                    else\n                        this.decrementHour(event);\n                    break;\n\n                case 1:\n                    if (direction === 1)\n                        this.incrementMinute(event);\n                    else\n                        this.decrementMinute(event);\n                    break;\n\n                case 2:\n                    if (direction === 1)\n                        this.incrementSecond(event);\n                    else\n                        this.decrementSecond(event);\n                    break;\n            }\n        },\n        convertTo24Hour(hours, pm) {\n            if (this.hourFormat == '12') {\n                if (hours === 12) {\n                    return (pm ? 12 : 0);\n                } else {\n                    return (pm ? hours + 12 : hours);\n                }\n            }\n            return hours;\n        },\n        validateTime(hour, minute, second, pm) {\n            let value = this.isComparable() ? this.value : this.viewDate;\n            const convertedHour = this.convertTo24Hour(hour, pm);\n\n            if (this.isRangeSelection()) {\n                value = this.value[1] || this.value[0];\n            }\n            if (this.isMultipleSelection()) {\n                value = this.value[this.value.length - 1];\n            }\n            const valueDateString = value ? value.toDateString() : null;\n            if (this.minDate && valueDateString && this.minDate.toDateString() === valueDateString) {\n                if (this.minDate.getHours() > convertedHour) {\n                    return false;\n                }\n                if (this.minDate.getHours() === convertedHour) {\n                    if (this.minDate.getMinutes() > minute || minute > 60) {\n                        this.currentHour = this.minDate.getHours();\n                        this.currentMin = this.minDate.getMinutes();\n                        return false;\n                    }\n                    if (this.minDate.getMinutes() === minute) {\n                        if (this.minDate.getSeconds() > second) {\n                            return false;\n                        }\n                    }\n                }\n            }\n\n            if (this.maxDate && valueDateString && this.maxDate.toDateString() === valueDateString) {\n                if (this.maxDate.getHours() < convertedHour) {\n                    return false;\n                }\n                if (this.maxDate.getHours() === convertedHour) {\n                    if (this.maxDate.getMinutes() < minute) {\n                        return false;\n                    }\n                    if (this.maxDate.getMinutes() === minute) {\n                        if (this.maxDate.getSeconds() < second) {\n                            return false;\n                        }\n                    }\n                }\n            }\n            this.disableHours = false\n            return true;\n        },\n        incrementHour(event) {\n            let prevHour = this.currentHour;\n            let newHour = Number(this.currentHour) + this.stepHour;\n            let newPM = this.pm;\n            if (this.hourFormat == '24')\n                newHour = (newHour >= 24) ? (newHour - 24) : newHour;\n            else if (this.hourFormat == '12') {\n                // Before the AM/PM break, now after\n                if (prevHour < 12 && newHour > 11) {\n                    newPM = !this.pm;\n                }\n                newHour = (newHour >= 13) ? (newHour - 12) : newHour;\n            }\n            if (this.validateTime(newHour, this.currentMinute, this.currentSecond, newPM)) {\n                this.currentHour = newHour;\n                this.pm = newPM;\n            }\n            else {\n                this.validate();\n            }\n\n\n            event.preventDefault();\n        },\n        decrementHour(event) {\n            let newHour = this.currentHour - this.stepHour;\n            let newPM = this.pm;\n            if (this.hourFormat == '24')\n                newHour = (newHour < 0) ? (24 + newHour) : newHour;\n            else if (this.hourFormat == '12') {\n                // If we were at noon/midnight, then switch\n                if (this.currentHour === 12) {\n                    newPM = !this.pm;\n                }\n                newHour = (newHour <= 0) ? (12 + newHour) : newHour;\n            }\n\n            if (this.validateTime(newHour, this.currentMinute, this.currentSecond, newPM)) {\n                this.currentHour = newHour;\n                this.pm = newPM;\n            }\n            else {\n                this.validate();\n\n            }\n            event.preventDefault();\n        },\n        incrementMinute(event) {\n            let newMinute = this.currentMinute + this.stepMinute;\n            if (this.validateTime(this.currentHour, newMinute, this.currentSecond, this.pm)) {\n                if (this.currentMinute === 45) {\n                    this.incrementHour(event);\n                }\n                this.currentMinute = (newMinute > 59) ? newMinute - 60 : newMinute;\n            }\n            else {\n                this.validate();\n            }\n\n            event.preventDefault();\n        },\n        decrementMinute(event) {\n            let newMinute = this.currentMinute - this.stepMinute;\n            newMinute = (newMinute < 0) ? 60 + newMinute : newMinute;\n            if (this.validateTime(this.currentHour, newMinute, this.currentSecond, this.pm)) {\n                if (this.currentMinute === 0) {\n                    this.decrementHour(event);\n                }\n                this.currentMinute = newMinute;\n\n            }\n            else {\n                this.validate();\n\n            }\n            event.preventDefault();\n        },\n        incrementSecond(event) {\n            let newSecond = this.currentSecond + this.stepSecond;\n            if (this.validateTime(this.currentHour, this.currentMinute, newSecond, true)) {\n                this.currentSecond = (newSecond > 59) ? newSecond - 60 : newSecond;\n            }\n\n            event.preventDefault();\n        },\n        decrementSecond(event) {\n            let newSecond = this.currentSecond - this.stepSecond;\n            newSecond = (newSecond < 0) ? 60 + newSecond : newSecond;\n            if (this.validateTime(this.currentHour, this.currentMinute, newSecond, true)) {\n                this.currentSecond = newSecond;\n            }\n\n            event.preventDefault();\n        },\n        updateModelTime() {\n            this.timePickerChange = true;\n            let value = this.isComparable() ? this.value : new Date();\n\n            if (this.isRangeSelection()) {\n                value = this.value[1] || this.value[0];\n            }\n            if (this.isMultipleSelection()) {\n                value = this.value[this.value.length - 1];\n            }\n            value = value ? new Date(value.getTime()) : new Date();\n            if (this.hourFormat == '12') {\n                if (Number(this.currentHour) === 12) {\n                    value.setHours(this.pm ? 12 : 0);\n                }\n                else {\n                    value.setHours(this.pm ? Number(this.currentHour) + 12 : Number(this.currentHour));\n                }\n            }\n            else {\n                value.setHours(Number(this.currentHour));\n            }\n            value.setMinutes(Number(this.currentMinute));\n            value.setSeconds(Number(this.currentSecond));\n            if (this.isRangeSelection()) {\n                if (this.value[1])\n                    value = [this.value[0], value];\n                else\n                    value = [value, null];\n            }\n\n            if (this.isMultipleSelection()) {\n                value = [...this.value.slice(0, -1), value];\n            }\n            // console.log(value)\n            this.updateModel(value);\n            this.$emit('date-select', value);\n            setTimeout(() => this.timePickerChange = false, 0);\n        },\n        toggleAMPM(event) {\n            this.pm = !this.pm;\n            this.updateModelTime();\n            event.preventDefault();\n        },\n        clearTimePickerTimer() {\n            if (this.timePickerTimer) {\n                clearInterval(this.timePickerTimer);\n            }\n        },\n        onMonthSelect(event, month) {\n            if (this.view === 'month') {\n                this.onDateSelect(event, { year: this.currentYear, month: month, day: 1, selectable: true });\n            }\n            else {\n                this.currentMonth = month;\n                this.currentView = 'date';\n                this.$emit('month-change', { month: this.currentMonth + 1, year: this.currentYear });\n            }\n\n            setTimeout(this.updateFocus, 0);\n        },\n        onYearSelect(event, year) {\n            if (this.view === 'year') {\n                this.onDateSelect(event, { year: year, month: 0, day: 1, selectable: true });\n            }\n            else {\n                this.currentYear = year;\n                this.currentView = 'month';\n                this.$emit('year-change', { month: this.currentMonth + 1, year: this.currentYear });\n            }\n\n            setTimeout(this.updateFocus, 0);\n        },\n        enableModality() {\n            if (!this.mask) {\n                this.mask = document.createElement('div');\n                this.mask.style.zIndex = String(parseInt(this.$refs.overlay.style.zIndex, 10) - 1);\n                DomHandler.addMultipleClasses(this.mask, 'p-datepicker-mask p-datepicker-mask-scrollblocker p-component-overlay p-component-overlay-enter');\n\n                this.maskClickListener = () => {\n                    this.overlayVisible = false;\n                };\n                this.mask.addEventListener('click', this.maskClickListener);\n\n                document.body.appendChild(this.mask);\n                DomHandler.addClass(document.body, 'p-overflow-hidden');\n            }\n        },\n        disableModality() {\n            if (this.mask) {\n                this.overlayVisible = false;\n\n                DomHandler.addClass(this.mask, 'p-component-overlay-leave');\n                this.mask.addEventListener('animationend', () => {\n                    this.destroyMask();\n                });\n            }\n        },\n        destroyMask() {\n            this.mask.removeEventListener('click', this.maskClickListener);\n            this.maskClickListener = null;\n            document.body.removeChild(this.mask);\n            this.mask = null;\n\n            let bodyChildren = document.body.children;\n            let hasBlockerMasks;\n            for (let i = 0; i < bodyChildren.length; i++) {\n                let bodyChild = bodyChildren[i];\n                if (DomHandler.hasClass(bodyChild, 'p-datepicker-mask-scrollblocker')) {\n                    hasBlockerMasks = true;\n                    break;\n                }\n            }\n\n            if (!hasBlockerMasks) {\n                DomHandler.removeClass(document.body, 'p-overflow-hidden');\n            }\n        },\n        updateCurrentMetaData() {\n            const viewDate = this.viewDate;\n            this.currentMonth = viewDate.getMonth();\n            this.currentYear = viewDate.getFullYear();\n\n            if (this.showTime || this.timeOnly) {\n                this.updateCurrentTimeMeta(viewDate);\n            }\n        },\n        isValidSelection(value) {\n            let isValid = true;\n            if (this.isSingleSelection()) {\n                if (!this.isSelectable(value.getDate(), value.getMonth(), value.getFullYear(), false)) {\n                    isValid = false;\n                }\n            } else if (value.every(v => this.isSelectable(v.getDate(), v.getMonth(), v.getFullYear(), false))) {\n                if (this.isRangeSelection()) {\n                    isValid = value.length > 1 && value[1] > value[0] ? true : false;\n                }\n            }\n            return isValid;\n        },\n        parseValue(text) {\n            if (!text || text.trim().length === 0) {\n                return null;\n            }\n\n            let value;\n\n            if (this.isSingleSelection()) {\n                value = this.parseDateTime(text);\n            }\n            else if (this.isMultipleSelection()) {\n                let tokens = text.split(',');\n                value = [];\n                for (let token of tokens) {\n                    value.push(this.parseDateTime(token.trim()));\n                }\n            }\n            else if (this.isRangeSelection()) {\n                let tokens = text.split(' - ');\n                value = [];\n                for (let i = 0; i < tokens.length; i++) {\n                    value[i] = this.parseDateTime(tokens[i].trim());\n                }\n            }\n\n            return value;\n        },\n        parseDateTime(text) {\n            let date;\n            let parts = text.split(' ');\n\n            if (this.timeOnly) {\n                date = new Date();\n                this.populateTime(date, parts[0], parts[1]);\n            }\n            else {\n                const dateFormat = this.datePattern;\n                if (this.showTime) {\n                    date = this.parseDate(parts[0], dateFormat);\n                    this.populateTime(date, parts[1], parts[2]);\n                }\n                else {\n                    date = this.parseDate(text, dateFormat);\n                }\n            }\n\n            return date;\n        },\n        populateTime(value, timeString, ampm) {\n            if (this.hourFormat == '12' && !ampm) {\n                throw 'Invalid Time';\n            }\n\n            this.pm = (ampm === 'PM' || ampm === 'pm');\n            let time = this.parseTime(timeString);\n            value.setHours(time.hour);\n            value.setMinutes(time.minute);\n            value.setSeconds(time.second);\n        },\n        parseTime(value) {\n            let tokens = value.split(':');\n            let validTokenLength = this.showSeconds ? 3 : 2;\n            let regex = (/^[0-9][0-9]$/);\n\n            if (tokens.length !== validTokenLength || !tokens[0].match(regex) || !tokens[1].match(regex) || (this.showSeconds && !tokens[2].match(regex))) {\n                throw \"Invalid time\";\n            }\n\n            let h = parseInt(tokens[0]);\n            let m = parseInt(tokens[1]);\n            let s = this.showSeconds ? parseInt(tokens[2]) : null;\n\n            if (isNaN(h) || isNaN(m) || h > 23 || m > 59 || (this.hourFormat == '12' && h > 12) || (this.showSeconds && (isNaN(s) || s > 59))) {\n                throw \"Invalid time\";\n            }\n            else {\n                if (this.hourFormat == '12' && h !== 12 && this.pm) {\n                    h += 12;\n                }\n\n                return { hour: h, minute: m, second: s };\n            }\n        },\n        parseDate(value, format) {\n            if (format == null || value == null) {\n                throw \"Invalid arguments\";\n            }\n\n            value = (typeof value === \"object\" ? value.toString() : value + \"\");\n            if (value === \"\") {\n                return null;\n            }\n\n            let iFormat, dim, extra,\n                iValue = 0,\n                shortYearCutoff = (typeof this.shortYearCutoff !== \"string\" ? this.shortYearCutoff : new Date().getFullYear() % 100 + parseInt(this.shortYearCutoff, 10)),\n                year = -1,\n                month = -1,\n                day = -1,\n                doy = -1,\n                literal = false,\n                date,\n                lookAhead = (match) => {\n                    let matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) === match);\n                    if (matches) {\n                        iFormat++;\n                    }\n                    return matches;\n                },\n                getNumber = (match) => {\n                    let isDoubled = lookAhead(match),\n                        size = (match === \"@\" ? 14 : (match === \"!\" ? 20 :\n                            (match === \"y\" && isDoubled ? 4 : (match === \"o\" ? 3 : 2)))),\n                        minSize = (match === \"y\" ? size : 1),\n                        digits = new RegExp(\"^\\\\d{\" + minSize + \",\" + size + \"}\"),\n                        num = value.substring(iValue).match(digits);\n                    if (!num) {\n                        throw \"Missing number at position \" + iValue;\n                    }\n                    iValue += num[0].length;\n                    return parseInt(num[0], 10);\n                },\n                getName = (match, shortNames, longNames) => {\n                    let index = -1;\n                    let arr = lookAhead(match) ? longNames : shortNames;\n                    let names = [];\n\n                    for (let i = 0; i < arr.length; i++) {\n                        names.push([i, arr[i]]);\n                    }\n                    names.sort((a, b) => {\n                        return -(a[1].length - b[1].length);\n                    });\n\n                    for (let i = 0; i < names.length; i++) {\n                        let name = names[i][1];\n                        if (value.substr(iValue, name.length).toLowerCase() === name.toLowerCase()) {\n                            index = names[i][0];\n                            iValue += name.length;\n                            break;\n                        }\n                    }\n\n                    if (index !== -1) {\n                        return index + 1;\n                    } else {\n                        throw \"Unknown name at position \" + iValue;\n                    }\n                },\n                checkLiteral = () => {\n                    if (value.charAt(iValue) !== format.charAt(iFormat)) {\n                        throw \"Unexpected literal at position \" + iValue;\n                    }\n                    iValue++;\n                };\n\n            if (this.currentView === 'month') {\n                day = 1;\n            }\n\n            for (iFormat = 0; iFormat < format.length; iFormat++) {\n                if (literal) {\n                    if (format.charAt(iFormat) === \"'\" && !lookAhead(\"'\")) {\n                        literal = false;\n                    } else {\n                        checkLiteral();\n                    }\n                } else {\n                    switch (format.charAt(iFormat)) {\n                        case \"d\":\n                            day = getNumber(\"d\");\n                            break;\n                        case \"D\":\n                            getName(\"D\", this.$primevue.config.locale.dayNamesShort, this.$primevue.config.locale.dayNames);\n                            break;\n                        case \"o\":\n                            doy = getNumber(\"o\");\n                            break;\n                        case \"m\":\n                            month = getNumber(\"m\");\n                            break;\n                        case \"M\":\n                            month = getName(\"M\", this.$primevue.config.locale.monthNamesShort, this.$primevue.config.locale.monthNames);\n                            break;\n                        case \"y\":\n                            year = getNumber(\"y\");\n                            break;\n                        case \"@\":\n                            date = new Date(getNumber(\"@\"));\n                            year = date.getFullYear();\n                            month = date.getMonth() + 1;\n                            day = date.getDate();\n                            break;\n                        case \"!\":\n                            date = new Date((getNumber(\"!\") - this.ticksTo1970) / 10000);\n                            year = date.getFullYear();\n                            month = date.getMonth() + 1;\n                            day = date.getDate();\n                            break;\n                        case \"'\":\n                            if (lookAhead(\"'\")) {\n                                checkLiteral();\n                            } else {\n                                literal = true;\n                            }\n                            break;\n                        default:\n                            checkLiteral();\n                    }\n                }\n            }\n\n            if (iValue < value.length) {\n                extra = value.substr(iValue);\n                if (!/^\\s+/.test(extra)) {\n                    throw \"Extra/unparsed characters found in date: \" + extra;\n                }\n            }\n\n            if (year === -1) {\n                year = new Date().getFullYear();\n            } else if (year < 100) {\n                year += new Date().getFullYear() - new Date().getFullYear() % 100 +\n                    (year <= shortYearCutoff ? 0 : -100);\n            }\n\n            if (doy > -1) {\n                month = 1;\n                day = doy;\n                do {\n                    dim = this.getDaysCountInMonth(year, month - 1);\n                    if (day <= dim) {\n                        break;\n                    }\n                    month++;\n                    day -= dim;\n                    // eslint-disable-next-line\n                } while (true);\n            }\n\n            date = this.daylightSavingAdjust(new Date(year, month - 1, day));\n            if (date.getFullYear() !== year || date.getMonth() + 1 !== month || date.getDate() !== day) {\n                throw \"Invalid date\"; // E.g. 31/02/00\n            }\n\n            return date;\n        },\n        getWeekNumber(date) {\n            let checkDate = new Date(date.getTime());\n            checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7));\n            let time = checkDate.getTime();\n            checkDate.setMonth(0);\n            checkDate.setDate(1);\n            return Math.floor(Math.round((time - checkDate.getTime()) / 86400000) / 7) + 1;\n        },\n        onDateCellKeydown(event, date, groupIndex) {\n            const cellContent = event.currentTarget;\n            const cell = cellContent.parentElement;\n\n            switch (event.which) {\n                //down arrow\n                case 40: {\n                    cellContent.tabIndex = '-1';\n                    let cellIndex = DomHandler.index(cell);\n                    let nextRow = cell.parentElement.nextElementSibling;\n                    if (nextRow) {\n                        let focusCell = nextRow.children[cellIndex].children[0];\n                        if (DomHandler.hasClass(focusCell, 'p-disabled')) {\n                            this.navigationState = { backward: false };\n                            this.navForward(event);\n                        }\n                        else {\n                            nextRow.children[cellIndex].children[0].tabIndex = '0';\n                            nextRow.children[cellIndex].children[0].focus();\n                        }\n                    }\n                    else {\n                        this.navigationState = { backward: false };\n                        this.navForward(event);\n                    }\n                    event.preventDefault();\n                    break;\n                }\n\n                //up arrow\n                case 38: {\n                    cellContent.tabIndex = '-1';\n                    let cellIndex = DomHandler.index(cell);\n                    let prevRow = cell.parentElement.previousElementSibling;\n                    if (prevRow) {\n                        let focusCell = prevRow.children[cellIndex].children[0];\n                        if (DomHandler.hasClass(focusCell, 'p-disabled')) {\n                            this.navigationState = { backward: true };\n                            this.navBackward(event);\n                        }\n                        else {\n                            focusCell.tabIndex = '0';\n                            focusCell.focus();\n                        }\n                    }\n                    else {\n                        this.navigationState = { backward: true };\n                        this.navBackward(event);\n                    }\n                    event.preventDefault();\n                    break;\n                }\n\n                //left arrow\n                case 37: {\n                    cellContent.tabIndex = '-1';\n                    let prevCell = cell.previousElementSibling;\n                    if (prevCell) {\n                        let focusCell = prevCell.children[0];\n                        if (DomHandler.hasClass(focusCell, 'p-disabled')) {\n                            this.navigateToMonth(true, groupIndex);\n                        }\n                        else {\n                            focusCell.tabIndex = '0';\n                            focusCell.focus();\n                        }\n                    }\n                    else {\n                        this.navigateToMonth(true, groupIndex);\n                    }\n                    event.preventDefault();\n                    break;\n                }\n\n                //right arrow\n                case 39: {\n                    cellContent.tabIndex = '-1';\n                    let nextCell = cell.nextElementSibling;\n                    if (nextCell) {\n                        let focusCell = nextCell.children[0];\n                        if (DomHandler.hasClass(focusCell, 'p-disabled')) {\n                            this.navigateToMonth(false, groupIndex);\n                        }\n                        else {\n                            focusCell.tabIndex = '0';\n                            focusCell.focus();\n                        }\n                    }\n                    else {\n                        this.navigateToMonth(false, groupIndex);\n                    }\n                    event.preventDefault();\n                    break;\n                }\n\n                //enter\n                case 13:\n                case 32: {\n                    this.onDateSelect(event, date);\n                    event.preventDefault();\n                    break;\n                }\n\n                //escape\n                case 27: {\n                    this.overlayVisible = false;\n                    event.preventDefault();\n                    break;\n                }\n\n                //tab\n                case 9: {\n                    if (!this.inline) {\n                        this.trapFocus(event);\n                    }\n                    break;\n                }\n\n                default:\n                    //no op\n                    break;\n            }\n        },\n        navigateToMonth(prev, groupIndex) {\n            if (prev) {\n                if (this.numberOfMonths === 1 || (groupIndex === 0)) {\n                    this.navigationState = { backward: true };\n                    this.navBackward(event);\n                }\n                else {\n                    let prevMonthContainer = this.$refs.overlay.children[groupIndex - 1];\n                    let cells = DomHandler.find(prevMonthContainer, '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)');\n                    let focusCell = cells[cells.length - 1];\n                    focusCell.tabIndex = '0';\n                    focusCell.focus();\n                }\n            }\n            else {\n                if (this.numberOfMonths === 1 || (groupIndex === this.numberOfMonths - 1)) {\n                    this.navigationState = { backward: false };\n                    this.navForward(event);\n                }\n                else {\n                    let nextMonthContainer = this.$refs.overlay.children[groupIndex + 1];\n                    let focusCell = DomHandler.findSingle(nextMonthContainer, '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)');\n                    focusCell.tabIndex = '0';\n                    focusCell.focus();\n                }\n            }\n        },\n        onMonthCellKeydown(event, index) {\n            const cell = event.currentTarget;\n\n            switch (event.which) {\n                //arrows\n                case 38:\n                case 40: {\n                    cell.tabIndex = '-1';\n                    var cells = cell.parentElement.children;\n                    var cellIndex = DomHandler.index(cell);\n                    let nextCell = cells[event.which === 40 ? cellIndex + 3 : cellIndex - 3];\n                    if (nextCell) {\n                        nextCell.tabIndex = '0';\n                        nextCell.focus();\n                    }\n                    event.preventDefault();\n                    break;\n                }\n\n                //left arrow\n                case 37: {\n                    cell.tabIndex = '-1';\n                    let prevCell = cell.previousElementSibling;\n                    if (prevCell) {\n                        prevCell.tabIndex = '0';\n                        prevCell.focus();\n                    }\n                    else {\n                        this.navigationState = { backward: true };\n                        this.navBackward(event);\n                    }\n                    event.preventDefault();\n                    break;\n                }\n\n                //right arrow\n                case 39: {\n                    cell.tabIndex = '-1';\n                    let nextCell = cell.nextElementSibling;\n                    if (nextCell) {\n                        nextCell.tabIndex = '0';\n                        nextCell.focus();\n                    }\n                    else {\n                        this.navigationState = { backward: false };\n                        this.navForward(event);\n                    }\n                    event.preventDefault();\n                    break;\n                }\n\n                //enter\n                case 13:\n                case 32: {\n                    this.onMonthSelect(event, index);\n                    event.preventDefault();\n                    break;\n                }\n\n                //escape\n                case 27: {\n                    this.overlayVisible = false;\n                    event.preventDefault();\n                    break;\n                }\n\n                //tab\n                case 9: {\n                    if (!this.inline) {\n                        this.trapFocus(event);\n                    }\n                    break;\n                }\n\n                default:\n                    //no op\n                    break;\n            }\n        },\n        onYearCellKeydown(event, index) {\n            const cell = event.currentTarget;\n            switch (event.which) {\n                //arrows\n                case 38:\n                case 40: {\n                    cell.tabIndex = '-1';\n                    var cells = cell.parentElement.children;\n                    var cellIndex = DomHandler.index(cell);\n                    let nextCell = cells[event.which === 40 ? cellIndex + 2 : cellIndex - 2];\n                    if (nextCell) {\n                        nextCell.tabIndex = '0';\n                        nextCell.focus();\n                    }\n                    event.preventDefault();\n                    break;\n                }\n                //left arrow\n                case 37: {\n                    cell.tabIndex = '-1';\n                    let prevCell = cell.previousElementSibling;\n                    if (prevCell) {\n                        prevCell.tabIndex = '0';\n                        prevCell.focus();\n                    }\n                    else {\n                        this.navigationState = { backward: true };\n                        this.navBackward(event);\n                    }\n                    event.preventDefault();\n                    break;\n                }\n                //right arrow\n                case 39: {\n                    cell.tabIndex = '-1';\n                    let nextCell = cell.nextElementSibling;\n                    if (nextCell) {\n                        nextCell.tabIndex = '0';\n                        nextCell.focus();\n                    }\n                    else {\n                        this.navigationState = { backward: false };\n                        this.navForward(event);\n                    }\n                    event.preventDefault();\n                    break;\n                }\n                //enter\n                case 13:\n                case 32: {\n                    this.onMonthSelect(event, index);\n                    event.preventDefault();\n                    break;\n                }\n                //escape\n                case 27: {\n                    this.overlayVisible = false;\n                    event.preventDefault();\n                    break;\n                }\n                //tab\n                case 9: {\n                    this.trapFocus(event);\n                    break;\n                }\n                default:\n                    //no op\n                    break;\n            }\n        },\n        updateFocus() {\n            let cell;\n            if (this.navigationState) {\n                if (this.navigationState.button) {\n                    this.initFocusableCell();\n                    if (this.navigationState.backward)\n                        DomHandler.findSingle(this.$refs.overlay, '.p-datepicker-prev').focus();\n                    else\n                        DomHandler.findSingle(this.$refs.overlay, '.p-datepicker-next').focus();\n                }\n                else {\n                    if (this.navigationState.backward) {\n                        let cells;\n                        if (this.currentView === 'month') {\n                            cells = DomHandler.find(this.$refs.overlay, '.p-monthpicker .p-monthpicker-month:not(.p-disabled)');\n                        }\n                        else if (this.currentView === 'year') {\n                            cells = DomHandler.find(this.$refs.overlay, '.p-yearpicker .p-yearpicker-year:not(.p-disabled)');\n                        }\n                        else {\n                            cells = DomHandler.find(this.$refs.overlay, '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)');\n                        }\n                        if (cells && cells.length > 0) {\n                            cell = cells[cells.length - 1];\n                        }\n                    }\n                    else {\n                        if (this.currentView === 'month') {\n                            cell = DomHandler.findSingle(this.$refs.overlay, '.p-monthpicker .p-monthpicker-month:not(.p-disabled)');\n                        }\n                        else if (this.currentView === 'year') {\n                            cell = DomHandler.findSingle(this.$refs.overlay, '.p-yearpicker .p-yearpicker-year:not(.p-disabled)');\n                        }\n                        else {\n                            cell = DomHandler.findSingle(this.$refs.overlay, '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)');\n                        }\n                    }\n                    if (cell) {\n                        cell.tabIndex = '0';\n                        cell.focus();\n                    }\n                }\n\n                this.navigationState = null;\n            }\n            else {\n                this.initFocusableCell();\n            }\n        },\n        initFocusableCell() {\n            let cell;\n            if (this.currentView === 'month') {\n                let cells = DomHandler.find(this.$refs.overlay, '.p-monthpicker .p-monthpicker-month');\n                let selectedCell = DomHandler.findSingle(this.$refs.overlay, '.p-monthpicker .p-monthpicker-month.p-highlight');\n                cells.forEach(cell => cell.tabIndex = -1);\n                cell = selectedCell || cells[0];\n            }\n            else if (this.currentView === 'year') {\n                let cells = DomHandler.find(this.$refs.overlay, '.p-yearpicker .p-yearpicker-year');\n                let selectedCell = DomHandler.findSingle(this.$refs.overlay, '.p-yearpicker .p-yearpicker-year.p-highlight');\n                cells.forEach(cell => cell.tabIndex = -1);\n                cell = selectedCell || cells[0];\n            }\n            else {\n                cell = DomHandler.findSingle(this.$refs.overlay, 'span.p-highlight');\n                if (!cell) {\n                    let todayCell = DomHandler.findSingle(this.$refs.overlay, 'td.p-datepicker-today span:not(.p-disabled):not(.p-ink)');\n                    if (todayCell)\n                        cell = todayCell;\n                    else\n                        cell = DomHandler.findSingle(this.$refs.overlay, '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink');\n                }\n            }\n\n            if (cell) {\n                cell.tabIndex = '0';\n\n                if (!this.preventFocus && (!this.navigationState || !this.navigationState.button) && !this.timePickerChange) {\n                    cell.focus();\n                }\n\n                this.preventFocus = false;\n            }\n        },\n        trapFocus(event) {\n            event.preventDefault();\n            let focusableElements = DomHandler.getFocusableElements(this.$refs.overlay);\n\n            if (focusableElements && focusableElements.length > 0) {\n                if (!document.activeElement) {\n                    focusableElements[0].focus();\n                }\n                else {\n                    let focusedIndex = focusableElements.indexOf(document.activeElement);\n\n                    if (event.shiftKey) {\n                        if (focusedIndex == -1 || focusedIndex === 0)\n                            focusableElements[focusableElements.length - 1].focus();\n                        else\n                            focusableElements[focusedIndex - 1].focus();\n                    }\n                    else {\n                        if (focusedIndex == -1 || focusedIndex === (focusableElements.length - 1))\n                            focusableElements[0].focus();\n                        else\n                            focusableElements[focusedIndex + 1].focus();\n                    }\n                }\n            }\n        },\n        onContainerButtonKeydown(event) {\n            switch (event.which) {\n                //tab\n                case 9:\n                    if (!this.inline) {\n                        this.trapFocus(event);\n                    }\n                    break;\n\n                //escape\n                case 27:\n                    this.overlayVisible = false;\n                    event.preventDefault();\n                    break;\n\n                default:\n                    //Noop\n                    break;\n            }\n        },\n        onInput(val) {\n            // IE 11 Workaround for input placeholder : https://github.com/primefaces/primeng/issues/2026\n            if (!this.isKeydown) {\n                return;\n            }\n            this.isKeydown = false;\n\n            try {\n                this.selectionStart = this.$refs.input.$el.selectionStart;\n                this.selectionEnd = this.$refs.input.$el.selectionEnd;\n\n                let value = this.parseValue(val);\n                if (this.isValidSelection(value)) {\n                    this.updateModel(value);\n                }\n            }\n            catch (err) {\n                this.updateModel(val);\n            }\n        },\n        appendContainer() {\n            if (this.appendTo) {\n                if (this.appendTo === 'body')\n                    document.body.appendChild(this.$refs.overlay);\n                else\n                    document.getElementById(this.appendTo).appendChild(this.$refs.overlay);\n            }\n        },\n        restoreAppend() {\n            if (this.$refs.overlay && this.appendTo) {\n                if (this.appendTo === 'body')\n                    document.body.removeChild(this.$refs.overlay);\n                else\n                    document.getElementById(this.appendTo).removeChild(this.$refs.overlay);\n            }\n        },\n        getMonthName(index) {\n            return this.$primevue.config.locale.monthNames[index];\n        },\n        getYear(month) {\n            return this.currentView === 'month' ? this.currentYear : month.year;\n        },\n        createResponsiveStyle() {\n            if (this.numberOfMonths > 1 && this.responsiveOptions) {\n                if (!this.responsiveStyleElement) {\n                    this.responsiveStyleElement = document.createElement('style');\n                    this.responsiveStyleElement.type = 'text/css';\n                    document.body.appendChild(this.responsiveStyleElement);\n                }\n                let innerHTML = '';\n                if (this.responsiveOptions) {\n                    let responsiveOptions = [...this.responsiveOptions]\n                        .filter(o => !!(o.breakpoint && o.numMonths))\n                        .sort((o1, o2) => -1 * o1.breakpoint.localeCompare(o2.breakpoint, undefined, { numeric: true }));\n                    for (let i = 0; i < responsiveOptions.length; i++) {\n                        let { breakpoint, numMonths } = responsiveOptions[i];\n                        let styles = `\n                            .p-datepicker[${this.attributeSelector}] .p-datepicker-group:nth-child(${numMonths}) .p-datepicker-next {\n                                display: inline-flex !important;\n                            }\n                        `;\n                        for (let j = numMonths; j < this.numberOfMonths; j++) {\n                            styles += `\n                                .p-datepicker[${this.attributeSelector}] .p-datepicker-group:nth-child(${j + 1}) {\n                                    display: none !important;\n                                }\n                            `\n                        }\n                        innerHTML += `\n                            @media screen and (max-width: ${breakpoint}) {\n                                ${styles}\n                            }\n                        `\n                    }\n                }\n                this.responsiveStyleElement.innerHTML = innerHTML;\n            }\n        },\n        destroyResponsiveStyleElement() {\n            if (this.responsiveStyleElement) {\n                this.responsiveStyleElement.remove();\n                this.responsiveStyleElement = null;\n            }\n        }\n    },\n    computed: {\n        disableSetTime() {\n            return this.currentHour !== null && this.currentHour !== \"\" && this.currentMinute !== null && this.currentMin !== \"\" && this.pm !== null && this.pm !== \"\" && this.validateTime(this.currentHour, this.currentMinute, this.currentSecond, this.pm) && this.currentHour < 13 && this.currentMinute < 60 ? true : false\n        },\n        disableSetDate() {\n            return this.value !== null && this.value !== undefined && this.value !== \"\" ? true : false;\n        },\n\n        listeners() {\n            let $vm = this;\n\n            return {\n                ...$vm.$listeners,\n                input: val => {\n                    this.onInput(val);\n                },\n                focus: event => {\n                    $vm.focus = true;\n                    if ($vm.showOnFocus && $vm.isEnabled()) {\n                        $vm.overlayVisible = true;\n                    }\n                    $vm.focused = true;\n                    $vm.$emit('focus', event)\n                },\n                blur: event => {\n                    $vm.focused = false;\n                    $vm.$emit('blur', event);\n                },\n                keydown: event => {\n                    $vm.isKeydown = true;\n\n                    if (event.keyCode === 40 && $vm.$refs.overlay) {\n                        $vm.trapFocus(event);\n                    }\n                    else if (event.keyCode === 27) {\n                        if ($vm.overlayVisible) {\n                            $vm.overlayVisible = false;\n                            event.preventDefault();\n                        }\n                    }\n                    else if (event.keyCode === 9) {\n                        DomHandler.getFocusableElements($vm.$refs.overlay).forEach(el => el.tabIndex = '-1');\n                        if ($vm.overlayVisible) {\n                            $vm.overlayVisible = false;\n                        }\n                    }\n\n                    $vm.$emit('keydown', event);\n                }\n            };\n        },\n        viewDate() {\n            let propValue = this.value;\n            if (typeof propValue === 'string') {\n                return new Date();\n            }\n\n            if (propValue && Array.isArray(propValue)) {\n                if (this.isRangeSelection()) {\n                    propValue = propValue[1] || propValue[0];\n                } else if (this.isMultipleSelection()) {\n                    propValue = propValue[propValue.length - 1];\n                }\n            }\n            return propValue;\n        },\n        inputFieldValue() {\n            return this.formatValue(this.value);\n        },\n        containerClass() {\n            return [\n                'p-calendar p-component p-inputwrapper', this.className,\n                {\n                    'p-calendar-w-btn': this.showIcon,\n                    'p-calendar-timeonly': this.timeOnly,\n                    'p-inputwrapper-filled': this.value,\n                    'p-inputwrapper-focus': this.focused\n                }\n            ];\n        },\n        panelStyleClass() {\n            return [\n                'p-datepicker p-component', this.panelClass,\n                {\n                    'p-datepicker-inline': this.inline,\n                    'p-disabled': this.$attrs.disabled,\n                    'p-datepicker-timeonly': this.timeOnly,\n                    'p-datepicker-multiple-month': this.numberOfMonths > 1,\n                    'p-datepicker-monthpicker': (this.currentView === 'month'),\n                    'p-datepicker-yearpicker': (this.currentView === 'year'),\n                    'p-datepicker-touch-ui': this.touchUI\n                }\n            ];\n        },\n        months() {\n            let months = [];\n            for (let i = 0; i < this.numberOfMonths; i++) {\n                let month = this.currentMonth + i;\n                let year = this.currentYear;\n                if (month > 11) {\n                    month = month % 11 - 1;\n                    year = year + 1;\n                }\n\n                let dates = [];\n                let firstDay = this.getFirstDayOfMonthIndex(month, year);\n                let daysLength = this.getDaysCountInMonth(month, year);\n                let prevMonthDaysLength = this.getDaysCountInPrevMonth(month, year);\n                let dayNo = 1;\n                let today = new Date();\n                let weekNumbers = [];\n                let monthRows = Math.ceil((daysLength + firstDay) / 7);\n\n                for (let i = 0; i < monthRows; i++) {\n                    let week = [];\n\n                    if (i == 0) {\n                        for (let j = (prevMonthDaysLength - firstDay + 1); j <= prevMonthDaysLength; j++) {\n                            let prev = this.getPreviousMonthAndYear(month, year);\n                            week.push({\n                                day: j, month: prev.month, year: prev.year, otherMonth: true,\n                                today: this.isToday(today, j, prev.month, prev.year), selectable: this.isSelectable(j, prev.month, prev.year, true)\n                            });\n                        }\n\n                        let remainingDaysLength = 7 - week.length;\n                        for (let j = 0; j < remainingDaysLength; j++) {\n                            week.push({\n                                day: dayNo, month: month, year: year, today: this.isToday(today, dayNo, month, year),\n                                selectable: this.isSelectable(dayNo, month, year, false)\n                            });\n                            dayNo++;\n                        }\n                    }\n                    else {\n                        for (let j = 0; j < 7; j++) {\n                            if (dayNo > daysLength) {\n                                let next = this.getNextMonthAndYear(month, year);\n                                week.push({\n                                    day: dayNo - daysLength, month: next.month, year: next.year, otherMonth: true,\n                                    today: this.isToday(today, dayNo - daysLength, next.month, next.year),\n                                    selectable: this.isSelectable((dayNo - daysLength), next.month, next.year, true)\n                                });\n                            }\n                            else {\n                                week.push({\n                                    day: dayNo, month: month, year: year, today: this.isToday(today, dayNo, month, year),\n                                    selectable: this.isSelectable(dayNo, month, year, false)\n                                });\n                            }\n\n                            dayNo++;\n                        }\n                    }\n\n                    if (this.showWeek) {\n                        weekNumbers.push(this.getWeekNumber(new Date(week[0].year, week[0].month, week[0].day)));\n                    }\n\n                    dates.push(week);\n                }\n\n                months.push({\n                    month: month,\n                    year: year,\n                    dates: dates,\n                    weekNumbers: weekNumbers\n                });\n            }\n\n            return months;\n        },\n        weekDays() {\n            let weekDays = [];\n            let dayIndex = this.$primevue.config.locale.firstDayOfWeek;\n            for (let i = 0; i < 7; i++) {\n                weekDays.push(this.$primevue.config.locale.dayNamesMin[dayIndex]);\n                dayIndex = (dayIndex == 6) ? 0 : ++dayIndex;\n            }\n\n            return weekDays;\n        },\n        ticksTo1970() {\n            return (((1970 - 1) * 365 + Math.floor(1970 / 4) - Math.floor(1970 / 100) + Math.floor(1970 / 400)) * 24 * 60 * 60 * 10000000);\n        },\n        sundayIndex() {\n            return this.$primevue.config.locale.firstDayOfWeek > 0 ? 7 - this.$primevue.config.locale.firstDayOfWeek : 0;\n        },\n        datePattern() {\n            return this.dateFormat || this.$primevue.config.locale.dateFormat;\n        },\n        yearOptions() {\n            if (this.yearRange) {\n                let $vm = this;\n                const years = this.yearRange.split(':');\n                let yearStart = parseInt(years[0]);\n                let yearEnd = parseInt(years[1]);\n                let yearOptions = [];\n\n                if (this.currentYear < yearStart) {\n                    $vm.currentYear = yearEnd;\n                }\n                else if (this.currentYear > yearEnd) {\n                    $vm.currentYear = yearStart;\n                }\n\n                for (let i = yearStart; i <= yearEnd; i++) {\n                    yearOptions.push(i);\n                }\n\n                return yearOptions;\n            }\n            else {\n                return null;\n            }\n        },\n        monthPickerValues() {\n            let monthPickerValues = [];\n            for (let i = 0; i <= 11; i++) {\n                monthPickerValues.push(this.$primevue.config.locale.monthNamesShort[i]);\n            }\n\n            return monthPickerValues;\n        },\n        yearPickerValues() {\n            let yearPickerValues = [];\n            let base = this.currentYear - (this.currentYear % 10);\n            for (let i = 0; i < 10; i++) {\n                yearPickerValues.push(base + i);\n            }\n            return yearPickerValues;\n        },\n        formattedCurrentHour() {\n            return this.currentHour < 10 ? '0' + this.currentHour : this.currentHour;\n\n        },\n        formattedCurrentMinute() {\n            return this.currentMinute < 10 ? '0' + this.currentMinute : this.currentMinute;\n        },\n        formattedCurrentSecond() {\n            return this.currentSecond < 10 ? '0' + this.currentSecond : this.currentSecond;\n        },\n        todayLabel() {\n            return this.$primevue.config.locale.today;\n        },\n        clearLabel() {\n            return this.$primevue.config.locale.clear;\n        },\n        weekHeaderLabel() {\n            return this.$primevue.config.locale.weekHeader;\n        },\n        monthNames() {\n            return this.$primevue.config.locale.monthNames;\n        },\n        attributeSelector() {\n            return UniqueComponentId();\n        },\n        switchViewButtonDisabled() {\n            return this.numberOfMonths > 1 || this.$attrs.disabled;\n        }\n    },\n    components: {\n        'CalendarInputText': InputText,\n        'CalendarButton': Button\n    },\n    directives: {\n        'ripple': Ripple\n    }\n}\n</script>\n\n<style>\n.settime-btn {\n    display: flex;\n    margin-left: 95px;\n}\n\n.setdate-btn {\n    display: flex;\n    margin-left: 115px\n}\n\n.p-calendar {\n    position: relative;\n    display: inline-flex;\n    max-width: 100%;\n}\n\n.p-button-text-1 {\n    background-color: #f2555c;\n    border: none;\n}\n\n.p-calendar .p-inputtext {\n    flex: 1 1 auto;\n    width: 1%;\n}\n\n.p-calendar-w-btn .p-inputtext {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n}\n\n.p-calendar-w-btn .p-datepicker-trigger {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n}\n\n.v-btn {}\n\n/* Fluid */\n.p-fluid .p-calendar {\n    display: flex;\n}\n\n.p-fluid .p-calendar .p-inputtext {\n    width: 1%;\n}\n\n/* Datepicker */\n.p-calendar .p-datepicker {\n    min-width: 100%;\n}\n\n.theme--light.v-text-field input .p-datepicker {\n    width: auto;\n    position: absolute;\n}\n\n.p-datepicker-inline {\n    display: inline-block;\n    position: static;\n    overflow-x: auto;\n}\n\n/* Header */\n.p-datepicker-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\n.p-datepicker-header .p-datepicker-title {\n    margin: 0 auto;\n}\n\n.centered-input>>>input {\n    text-align: center\n}\n\n.p-datepicker-prev,\n.p-datepicker-next {\n    cursor: pointer;\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    position: relative;\n}\n\n/* Multiple Month DatePicker */\n.p-datepicker-multiple-month .p-datepicker-group-container {\n    display: flex;\n}\n\n.p-datepicker-multiple-month .p-datepicker-group-container .p-datepicker-group {\n    flex: 1 1 auto;\n}\n\n/* DatePicker Table */\n.p-datepicker table {\n    width: 100%;\n    border-collapse: collapse;\n}\n\n.p-datepicker td>span {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    margin: 0 auto;\n    overflow: hidden;\n    position: relative;\n}\n\n/* Month Picker */\n.p-monthpicker-month {\n    width: 33.3%;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    overflow: hidden;\n    position: relative;\n}\n\n/* Year Picker */\n.p-yearpicker-year {\n    width: 50%;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    overflow: hidden;\n    position: relative;\n}\n\n/*  Button Bar */\n.p-datepicker-buttonbar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.p-datepicker-buttonbar-1 {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-left: 55px\n}\n\n.v-text-field input {\n    padding: 8px 0 8px 10px\n}\n\n/* Time Picker */\n.p-timepicker {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.time-input {\n    width: 60px;\n    height: 55px;\n}\n\n.p-timepicker button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    overflow: hidden;\n    position: relative;\n    background-color: #f2555c;\n}\n\n.p-timepicker>div {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n}\n\n/* Touch UI */\n.p-datepicker-touch-ui,\n.p-calendar .p-datepicker-touch-ui {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    min-width: 80vw;\n    transform: translate(-50%, -50%);\n}\n\n.theme--light.v-text-field input {\n    padding: 8px 0 8px 10px;\n}\n\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n    display: none;\n}\ninput[type=number] {\n  -moz-appearance: textfield;\n}\n</style>"]}]}