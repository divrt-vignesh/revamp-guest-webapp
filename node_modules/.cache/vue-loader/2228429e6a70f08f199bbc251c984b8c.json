{"remainingRequest":"/home/vignesh/DIVRT/guest-webapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vignesh/DIVRT/guest-webapp/src/views/CheckedIn.vue?vue&type=template&id=0106dc62&","dependencies":[{"path":"/home/vignesh/DIVRT/guest-webapp/src/views/CheckedIn.vue","mtime":1687518715325},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vignesh/DIVRT/guest-webapp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:
<v-container class="pa-4" fluid>
    <v-row class="text-center" no-gutters>
        <v-col cols="12">
            <v-img alt="PARKING.COM" class="my-3" height="42" contain src="../assets/logo_huge_drk.png" />
        </v-col>
    </v-row>
    <v-row no-gutters>
        <v-col>
            <v-card class="mx-auto rounded-lg" max-width="374">
                <v-dialog v-model="loading" persistent>
                    <v-card class="pa-4">
                        <v-progress-circular indeterminate color="red"></v-progress-circular>
                        <span class="ml-4" style="font-size: 14px">Please wait...</span>
                    </v-card>
                </v-dialog>
                <!-- <v-responsive :aspect-ratio="16/9"> -->

                <template slot="progress">
                    <v-progress-linear color="red" height="10" indeterminate></v-progress-linear>
                </template>
                <div style="position: relative">
                    <!-- <v-skeleton-loader
              v-show="!bookingDetails.hasOwnProperty('zone')"
              height="260px"
              class="rounded-t-lg"
              type="image"
            ></v-skeleton-loader>-->
                    <v-img class="rounded-t-lg" :max-height="logoHeight" style="filter: brightness(50%)" :src="bookingDetails.hasOwnProperty('zone') &&
                        bookingDetails.zone.image != '' &&
                        bookingDetails.zone.image != null
                        ? bookingDetails.zone.image
                        : zoneImgURL
                        " :lazy-src="bookingDetails.hasOwnProperty('zone') &&
    bookingDetails.zone.image != '' &&
    bookingDetails.zone.image != null
    ? bookingDetails.zone.image
    : zoneImgURL
    " alt="Parking.com garage">
                        <template v-slot:placeholder>
                            <v-row class="fill-height ma-0" align="center" justify="center" no-gutters>
                                <v-progress-circular indeterminate color="grey lighten-5"></v-progress-circular>
                            </v-row>
                        </template>
                    </v-img>
                    <div class="booking_header white--text text-left mr-4">
                        <span>
                            {{
                                bookingDetails.hasOwnProperty("booking")
                                ? bookingDetails.booking.header
                                : ""
                            }}
                        </span>
                    </div>
                    <div class="booking_divider_div"
                        v-if="Object.hasOwnProperty.call(bookingDetails, 'booking') && Object.hasOwnProperty.call(bookingDetails.booking, 'TypeOfBooking') && (bookingDetails.booking.TypeOfBooking != 'Self reservation')">
                        <v-divider class="booking_divider mx-4"></v-divider>
                    </div>
                    <div class="booking_content white--text"
                        v-if="Object.hasOwnProperty.call(bookingDetails, 'booking') && Object.hasOwnProperty.call(bookingDetails.booking, 'TypeOfBooking') && bookingDetails.booking.TypeOfBooking != 'Self reservation'">
                        Checked in at
                        {{
                            bookingDetails.hasOwnProperty("booking") ? booking_content : ""
                        }}
                        <span v-if="bookingDetails.hasOwnProperty('booking') &&
                            bookingDetails.hasOwnProperty('zone') &&
                            bookingDetails.booking.vehicleNo != null &&
                            bookingDetails.booking.vehicleNo != ''
                            ">
                            with license plate
                            {{
                                bookingDetails.hasOwnProperty("booking")
                                ? bookingDetails.booking.vehicleNo
                                : ""
                            }}
                        </span>
                    </div>
                </div>
                <v-fab-transition>
                    <v-btn v-show="Object.hasOwnProperty.call(bookingDetails, 'zone') &&
                            bookingDetails.zone.isPedestrian == 1
                            " class="fabIcon" color="#f2555c !important" fab dark raised large right
                        @click="getpedestrianAccess()" style="bottom: 35px; float: right; right: 10px">
                        <v-img src="../assets/pedestrain_door.png" style="opacity: 1" width="32" height="32"
                            contain></v-img>
                        <!-- <v-icon class="material-icons-outlined">directions_walk</v-icon> -->
                    </v-btn>
                </v-fab-transition>

                <v-card-title class="pa-1"></v-card-title>
                <v-card-text class="pa-1 rounded-lg">
                    <v-row align="center" class="mx-0 pb-0" no-gutters v-if="bookingDetails.hasOwnProperty('booking') &&
                        bookingDetails.booking.hasOwnProperty('TypeOfBooking') &&
                        bookingDetails.booking.TypeOfBooking != 'Self reservation'">
                        <v-col cols="2">
                            <v-icon style="font-size: 50px">mdi-clock-outline</v-icon>
                        </v-col>
                        <v-col cols="10" class="pl-1">
                            <v-row no-gutters class="counter-content-position">
                                <v-col cols="12" class="pa-0">
                                    <v-skeleton-loader v-show="!bookingDetails.hasOwnProperty('booking') ||
                                        timeAgo == '' ||
                                        timeAgo == null
                                        " height="40px" max-width="200" type="heading"></v-skeleton-loader>
                                    <span class="grey--text text--darken-1 time_ago"
                                        v-show="!(validatedDateTime > 0)">{{
                                            timeAgo
                                        }}</span>
                                    <!-- <span
                      class="grey--text text--darken-1 time_ago"
                      v-show="gracePeriodTime > 0"
                      >{{ countDownGracePeriodTime }}</span
                    >-->
                                    <span class="grey--text text--darken-1 time_ago" v-show="bookingDetails.hasOwnProperty('booking') &&
                                            bookingDetails.booking.hasOwnProperty('validated') &&
                                            bookingDetails.booking.validated == '1' &&
                                            validatedDateTime > 0
                                            ">{{ countDownValidatedTime }}</span>
                                </v-col>
                                <v-col cols="12" v-if="bookingDetails.hasOwnProperty('booking') &&
                                    validatedDateTime <= 0
                                    ">
                                    <span class="grey--text text--darken-1 time_ago_context">Since you parked</span>
                                </v-col>
                                <!-- <v-col cols="12" v-else-if="bookingDetails.hasOwnProperty('booking') && gracePeriodTime > 0">
                    <span class="grey--text text--darken-1 time_ago_context"
                      >Grace period remaining</span
                    >
                  </v-col>-->
                                <v-col cols="12" v-else-if="bookingDetails.hasOwnProperty('booking') &&
                                    bookingDetails.booking.hasOwnProperty('validated') &&
                                    bookingDetails.booking.validated == '1' &&
                                    validatedDateTime > 0
                                    ">
                                    <span class="grey--text text--darken-1 time_ago_context">Validation time
                                        remaining</span>
                                </v-col>
                                <v-col cols="12" v-show="bookingDetails.hasOwnProperty('booking') &&
                                    bookingDetails.booking.hasOwnProperty('validated') &&
                                    bookingDetails.booking.validated == '1' &&
                                    bookingDetails.booking.hasOwnProperty(
                                        'validationType'
                                    ) &&
                                    bookingDetails.booking.validationType == 'DIVRT'
                                    ">
                                    <span class="grey--text text--darken-1 validated_time">Validated until {{
                                        validated_content
                                    }}</span>
                                </v-col>
                            </v-row>
                        </v-col>
                        <v-col cols class="align-self-center text-center" v-show="bookingDetails.hasOwnProperty('booking') &&
                                bookingDetails.booking.hasOwnProperty('TypeOfBooking') &&
                                bookingDetails.booking.TypeOfBooking == 'Monthly'
                                ">
                            <v-btn class="elevation-0 white--text" tile x-small color="green darken-2">Monthly</v-btn>
                        </v-col>
                        <v-col cols class="align-self-center text-center" v-show="bookingDetails.hasOwnProperty('booking') &&
                            bookingDetails.booking.hasOwnProperty('TypeOfBooking') &&
                            bookingDetails.booking.TypeOfBooking == 'Employee'
                            ">
                            <v-btn class="elevation-0 white--text" tile x-small color="green darken-2">Employee</v-btn>
                        </v-col>
                    </v-row>
                    <v-row class="mx-0 pb-0 black--text pl-2" no-gutters v-if="bookingDetails.hasOwnProperty('booking') &&
                        bookingDetails.booking.hasOwnProperty('TypeOfBooking') &&
                        bookingDetails.booking.TypeOfBooking == 'Self reservation'">
                        <v-row no-gutters class="pb-4"><v-col>
                                <div>
                                    Checked in at
                                    {{
                                        bookingDetails.hasOwnProperty("booking") ? checkin_content : ""
                                    }}

                                </div>
                                <span v-if="bookingDetails.hasOwnProperty('booking') &&
                                    bookingDetails.hasOwnProperty('zone') &&
                                    bookingDetails.booking.revEnd != null &&
                                    bookingDetails.booking.revEnd != ''
                                    ">

                                    {{ checkout_content }}
                                </span>
                            </v-col></v-row>
                    </v-row>
                    <v-container fluid pa-0 style="margin-left: 4.5rem;" v-if="bookingDetails.hasOwnProperty('booking') &&
                        bookingDetails.booking.hasOwnProperty('TypeOfBooking') &&
                        bookingDetails.booking.TypeOfBooking == 'Self reservation'">
                        <v-row no-gutters>
                            <v-col cols="12" class="pl-1    ">
                                <v-row no-gutters class="counter-content-position">
                                    <v-col cols="12" class="pa-0">
                                        <v-icon class="material-icons-outlined pr-2"
                                            style="font-size: 50px">history_toggle_off</v-icon>
                                        <v-skeleton-loader v-show="!bookingDetails.hasOwnProperty('booking')
                                            " height="40px" max-width="200" type="heading"></v-skeleton-loader>
                                        <span class="grey--text text--darken-1 time_ago" v-show="exitDateTime > 0
                                            ">{{ countDownExitTime }}</span>
                                        <p class="grey--text text--darken-1 time_ago_context pl-15 "
                                            style="margin-top: -15px;" v-if="exitDateTime > 0">Remaining</p>
                                    </v-col>
                                </v-row>
                            </v-col>
                        </v-row>
                    </v-container>
                    <v-row no-gutters align="center" class="my-1">
                        <v-col cols="12" class="pa-0 align-self-center text-center">
                            <v-btn class="elevation-0 white--text" tile x-small color="green darken-2" v-show="bookingDetails.hasOwnProperty('booking') &&
                                bookingDetails.booking.hasOwnProperty('validated') &&
                                bookingDetails.booking.validated == '1'
                                ">VALIDATED</v-btn>
                            <!-- <v-icon color="red" class="ml-2" v-show="(bookingDetails.hasOwnProperty('booking') && bookingDetails.booking.validated == '1' && showPaymentCardAdded == '1')" >approval</v-icon> -->
                        </v-col>
                    </v-row>
                    <v-row class="justify-center mb-3" no-gutters v-show="Object.hasOwnProperty.call(bookingDetails, 'zone') &&
                        !(bookingDetails.zone.isGated == '0')
                        ">
                        <span class="grey--text text--darken-1 font-weight-bold"
                            v-if="showPaymentCardAdded && (isCheckoutEnabled(1) || isCheckoutEnabled(2) || isCheckoutEnabled(3))">Click
                            an option below to exit</span>
                    </v-row>
                    <v-row class="justify-center my-3" no-gutters
                        v-show="!(isCheckoutEnabled(1) || isCheckoutEnabled(2) || isCheckoutEnabled(3))">
                        <span class="black--text text--darken-1 font-weight-bold text-h5">Checked In</span>
                    </v-row>
                </v-card-text>
                <!-- <v-card-text class="text-center">Click an option to exit</v-card-text> -->
                <v-card-actions class="text-center justify-center px-0 pb-0 rounded-lg" v-if="Object.hasOwnProperty.call(bookingDetails, 'booking') &&
                    !showPaymentCardAdded
                    ">
                    <v-container class="pa-0" fluid>
                        <v-row no-gutters>
                            <v-col cols="12" class="px-4"
                                v-if="iosDevice && Object.hasOwnProperty.call(bookingDetails, 'zone') && Object.hasOwnProperty.call(bookingDetails.zone, 'paymentServices') && Object.hasOwnProperty.call(bookingDetails.zone.paymentServices, 'apple_pay') && bookingDetails.zone.paymentServices.apple_pay == '1'">
                                <apple-pay width='95%' height="43px"
                                    :ios-device="iosDevice && Object.hasOwnProperty.call(bookingDetails, 'zone') && Object.hasOwnProperty.call(bookingDetails.zone, 'paymentServices') && Object.hasOwnProperty.call(bookingDetails.zone.paymentServices, 'apple_pay') && bookingDetails.zone.paymentServices.apple_pay == '1'"></apple-pay>
                            </v-col>
                            <v-col cols="12" class="px-4"
                                v-if="!iosDevice && Object.hasOwnProperty.call(bookingDetails, 'zone') && Object.hasOwnProperty.call(bookingDetails.zone, 'paymentServices') && Object.hasOwnProperty.call(bookingDetails.zone.paymentServices, 'google_pay') && bookingDetails.zone.paymentServices.google_pay == '1'">
                                <google-pay width='95%' height="43px"></google-pay>
                            </v-col>
                            <v-col cols="12" class="px-4">
                                <v-btn style="font-weight:700" elevation="20" rounded width="95%"
                                    class="add_credit_card_btn white--text  mb-2" @click="navigateToAddPayment"> Add
                                    Credit
                                    Card</v-btn>
                            </v-col>
                            <v-col cols="12" class="mt-2 text-center color-black px-4" style="font-size: 12px;" v-show="Object.hasOwnProperty.call(bookingDetails, 'zone') &&
                                !(bookingDetails.zone.isGated == '0')
                                ">
                                <p>
                                    You won't be able to exit the garage until your payment method is on file. Please
                                    enter your payment method now to avoid slow down at exit.
                                </p>
                            </v-col>
                            <v-col cols="12" class="mt-2 text-center color-black px-4" style="font-size: 12px" v-show="Object.hasOwnProperty.call(bookingDetails, 'zone') &&
                                !(bookingDetails.zone.isGated == '1') &&
                                validatedDateTime <= 0
                                ">
                                <p>
                                    A valid credit card is required to park. Without one, you
                                    could be subject to a parking violation and issued a
                                    citation.
                                </p>
                            </v-col>
                            <v-col cols="12" class="mt-2 color-black text-center px-4" style="font-size: 12px" v-show="bookingDetails.hasOwnProperty('booking') &&
                                bookingDetails.booking.hasOwnProperty('validated') &&
                                bookingDetails.booking.validated == '1' &&
                                validatedDateTime > 0
                                ">
                                <p>
                                    Exiting after the validated time period will require a valid
                                    credit card to continue parking. Without one, you could be
                                    subject to a parking violation and issued a citation.
                                </p>
                            </v-col>
                            <v-col cols="12" class="px-4 mt-2 color-black text-center" style="font-size: 12px"
                                v-show="iosDevice">
                                <p>
                                    You're only authorizing payment now. We'll charge you automatically when you
                                    checkout based on the
                                    duration of stay.
                                </p>
                            </v-col>
                            <v-col cols="12" class="mt-2 pb-2 text-center"
                                v-if="bookingDetails.zone.isPQREndReservation == 1 && (bookingDetails.booking.TypeOfBooking == 'Guest' || bookingDetails.booking.TypeOfBooking == 'Transient')">
                                <v-btn text color="primary"
                                    style="font-size: 13px;font-weight: bolder;text-decoration: underline;"
                                    @click="hotelGuest">
                                    <font-awesome-icon class="mr-1" icon="fa-solid fa-hotel"
                                        style="font-size: 1.5rem; color: #1E3050;" /> I am an
                                    overnight
                                    hotel guest</v-btn>

                            </v-col>
                            <v-col cols="12" class="mt-2 pa-0"
                                v-if="(bookingDetails.hasOwnProperty('booking') &&
                                    bookingDetails.booking.hasOwnProperty('validated') &&
                                    bookingDetails.booking.validated != '1' &&
                                    bookingDetails.booking.isValidationEnabled == '1') || Object.hasOwnProperty.call(bookingDetails, 'zone') && Object.hasOwnProperty.call(bookingDetails.zone, 'isLoyaltySupported') && bookingDetails.zone.isLoyaltySupported == '1' && bookingDetails.booking.validated != '1' && (bookingDetails.booking.TypeOfBooking == 'Guest' || bookingDetails.booking.TypeOfBooking == 'Transient' || bookingDetails.booking.TypeOfBooking == 'Self reservation')">
                                <hr style="color: black !important;">
                                <v-card flat color="#ececec" class="ma-0 rounded-lg pb-5" tile max-width="100%">
                                    <v-card-text class="pb-0">
                                        <v-row class="text-center pt-0" no-gutters>
                                            <v-col cols="12" class="pa-0">
                                                <p style="font-size: 15px;color: #F2555C;font-weight: bolder;">CLAIM
                                                    YOUR PARKING DISCOUNT</p>
                                            </v-col>
                                            <v-col cols="12"
                                                v-if="Object.hasOwnProperty.call(bookingDetails, 'zone') && Object.hasOwnProperty.call(bookingDetails.zone, 'isLoyaltySupported') && bookingDetails.zone.isLoyaltySupported == '1' && bookingDetails.booking.validated != '1' && (bookingDetails.booking.TypeOfBooking == 'Guest' || bookingDetails.booking.TypeOfBooking == 'Transient' || bookingDetails.booking.TypeOfBooking == 'Self reservation')">
                                                <v-btn color="black" rounded class="pa-0 ma-0" width="230" height="50"
                                                    elevation="20" @click="loyalty = true">
                                                    <v-img src="../assets/newGoldenNugget.jpg"
                                                        style="border-radius: 1.2rem;" class max-width="230"
                                                        height="60"></v-img>
                                                </v-btn>
                                            </v-col>
                                        </v-row>
                                        <v-col cols="12" class="mt-1 px-4" v-show="bookingDetails.hasOwnProperty('booking') &&
                                            bookingDetails.booking.hasOwnProperty('validated') &&
                                            bookingDetails.booking.validated != '1' &&
                                            bookingDetails.booking.isValidationEnabled == '1'
                                            ">
                                            <v-btn rounded elevation="20" dense width="230px" height="40px"
                                                style="font-size:15px"
                                                class="validate_btn white--text blue darken-2 no-upper-case px-4"
                                                @click="openValidationDialog()">Apply
                                                Your Validation</v-btn>
                                        </v-col>
                                    </v-card-text>
                                </v-card>
                            </v-col>
                        </v-row>

                    </v-container>
                </v-card-actions>
                <v-card-actions class="justify-center  px-0 pb-0" v-if="showPaymentCardAdded">
                    <v-container class="pa-0" fluid>
                        <v-row no-gutters class="text-center px-10" v-if="bookingDetails.hasOwnProperty('exitOptions') &&
                            Object.hasOwnProperty.call(bookingDetails, 'zone') &&
                            !(bookingDetails.zone.isGated == '0') && bookingDetails.exitOptions.length > 0
                            ">
                            <v-col v-if="isCheckoutEnabled(1)">
                                <v-avatar color="red" class="pa-6" @click="openSMSDialog()">
                                    <v-icon medium color="white accent-2" class="px-4" dark>
                                        {{
                                            getExitIcon(1)
                                        }}
                                    </v-icon>
                                </v-avatar>
                                <p class="grey--text text--darken-1 exit-option-text">
                                    {{ getExitText(1) }}
                                </p>
                            </v-col>
                            <v-col v-if="isCheckoutEnabled(2)">
                                <v-avatar color="red" class="pa-6" @click.stop="openSmsQrScanner()">
                                    <v-icon medium color="white accent-2" class="px-4" dark>
                                        {{
                                            getExitIcon(2)
                                        }}
                                    </v-icon>
                                </v-avatar>
                                <p class="grey--text text--darken-1 exit-option-text">
                                    {{ getExitText(2) }}
                                </p>
                            </v-col>
                            <v-col v-if="isCheckoutEnabled(3)">
                                <v-avatar color="red" class="pa-6" @click="dialerDialog = true">
                                    <v-icon medium color="white accent-2" class="px-4" dark>
                                        {{
                                            getExitIcon(3)
                                        }}
                                    </v-icon>
                                </v-avatar>
                                <p class="grey--text text--darken-1 exit-option-text">{{ getExitText(3) }}</p>
                            </v-col>
                        </v-row>
                        <v-row no-gutters
                            v-if="bookingDetails.zone.isPQREndReservation == 1 && bookingDetails.booking.TypeOfBooking == 'Self reservation'">
                            <v-col cols="12" class="px-2 mt-4">
                                <v-btn rounded elevation="20" class="add_licence_plate_btn white--text"
                                    @click="openExtDialog()">Extend
                                    Parking</v-btn>
                            </v-col>
                        </v-row>
                        <v-row no-gutters v-show="Object.hasOwnProperty.call(bookingDetails, 'zone') &&
                            !(bookingDetails.zone.isGated == '0') && (isCheckoutEnabled(1) || isCheckoutEnabled(2) || isCheckoutEnabled(3))
                            ">
                            <v-col cols="12" class="mt-2 text-center color-black" style="font-size: 12px">
                                <p class="mb-0">
                                    When you're ready to leave, please look for the
                                    <strong>3 digit</strong> gate code on the sign in the exit
                                    lane. Type that code when prompted. Have a good day!
                                </p>
                            </v-col>
                        </v-row>
                        <v-row no-gutters class="text-center mt-1" v-show="Object.hasOwnProperty.call(bookingDetails, 'zone') &&
                            bookingDetails.zone.isGated == '0' &&
                            bookingDetails.booking.cardOnfile == '1' &&
                            validatedDateTime <= 0
                            ">
                            <v-col cols="12" class="mt-2 color-black" style="font-size: 12px">
                                <p class="mb-0">
                                    The card on file will be automatically charged for the time
                                    parked when you exit the garage.
                                </p>
                            </v-col>
                        </v-row>

                        <v-row no-gutters>
                            <v-col cols="12" class="mt-1 text-center" v-show="bookingDetails.hasOwnProperty('booking') &&
                                bookingDetails.booking.hasOwnProperty('cardNo') &&
                                bookingDetails.booking.hasOwnProperty('accountType') &&
                                bookingDetails.booking.hasOwnProperty('cardUpdated') &&
                                !(bookingDetails.booking.cardUpdated == '1') &&
                                (bookingDetails.booking.accountType == '2' ||
                                    (bookingDetails.booking.cardOnfile == '1' &&
                                        bookingDetails.booking.accountType == '0')) &&
                                !(bookingDetails.booking.tapToChangeCard == '0') && !(bookingDetails.booking.paymentType == 'APPLE_PAY' || bookingDetails.booking.paymentType == 'GOOGLE_PAY')
                                ">
                                <a class="text-caption" @click="navigateToAddPayment()">Tap to change card</a>
                            </v-col>
                        </v-row>
                        <v-row no-gutters>
                            <v-col cols="12" class="mt-4 text-center color-black" style="font-size: 12px" v-show="Object.hasOwnProperty.call(bookingDetails, 'zone') &&
                                !(bookingDetails.zone.isGated == '1') &&
                                validatedDateTime <= 0 &&
                                bookingDetails.booking.cardOnfile != '1'
                                ">
                                <p>
                                    A valid credit card is required to park. Without one, you
                                    could be subject to a parking violation and issued a
                                    citation.
                                </p>
                            </v-col>
                        </v-row>
                        <v-row no-gutters>
                            <v-col cols="12" class="mt-4 text-center color-black" style="font-size: 12px" v-show="bookingDetails.hasOwnProperty('booking') &&
                                bookingDetails.booking.hasOwnProperty('validated') &&
                                bookingDetails.booking.validated == '1' &&
                                validatedDateTime > 0
                                ">
                                <p>
                                    Exiting after the validated time period will require a valid
                                    credit card to continue parking. Without one, you could be
                                    subject to a parking violation and issued a citation.
                                </p>
                            </v-col>
                        </v-row>
                        <v-row no-gutters class="mt-2"
                            v-if="Object.hasOwnProperty.call(bookingDetails, 'booking') && Object.hasOwnProperty.call(bookingDetails.booking, 'paymentType') && bookingDetails.booking.paymentType != '' && (bookingDetails.booking.paymentType == 'APPLE_PAY' || bookingDetails.booking.paymentType == 'GOOGLE_PAY')">
                            <v-col cols="12" class="text-center font-weight-bold">
                                <span style="font-size: 13px;">Authorized with {{
                                    getPaymentType(bookingDetails.booking.paymentType) }}</span>
                            </v-col>
                        </v-row>
                        <v-row no-gutters>
                            <v-col cols="12" class="px-4 mt-2 text-center color-black font-weight-bold"
                                style="font-size: 13px" v-show="(bookingDetails.hasOwnProperty('booking') &&
                                    bookingDetails.booking.hasOwnProperty('cardNo') &&
                                    bookingDetails.booking.hasOwnProperty('accountType') &&
                                    bookingDetails.booking.accountType == '2') ||
                                    (bookingDetails.booking.cardOnfile == '1' &&
                                        (bookingDetails.booking.accountType == '0' ||
                                            bookingDetails.booking.accountType == '1') &&
                                        !(
                                            bookingDetails.booking.cardNo == '0' ||
                                            bookingDetails.booking.cardNo == '' ||
                                            bookingDetails.booking.cardNo == null
                                        ))
                                    ">
                                <p class="mb-0">
                                    Card ending with *{{
                                        bookingDetails.hasOwnProperty("booking") &&
                                        bookingDetails.booking.hasOwnProperty("cardNo")
                                        ? bookingDetails.booking.cardNo
                                        : ""
                                    }}
                                    on file
                                </p>
                            </v-col>
                        </v-row>
                        <v-row no-gutters
                            v-if="bookingDetails.zone.isPQREndReservation == 1 &&
                                    (bookingDetails.booking.cardOnfile == '1' || bookingDetails.booking.cardOnfile == '2') && (bookingDetails.booking.TypeOfBooking == 'Guest' || bookingDetails.booking.TypeOfBooking == 'Transient')">
                            <v-col cols="12" class="mt-2 pb-2 text-center">
                                <v-btn text color="primary"
                                    style="font-size: 13px;font-weight: bolder;text-decoration: underline;"
                                    @click="hotelGuest">
                                    <font-awesome-icon class="mr-1" icon="fa-solid fa-hotel"
                                        style="font-size: 1.5rem;color: #1E3050;" /> I am an
                                    overnight
                                    hotel guest</v-btn>
                            </v-col>
                        </v-row>
                        <v-col cols="12" class="mt-2 pa-0"
                            v-if="(bookingDetails.hasOwnProperty('booking') &&
                                bookingDetails.booking.hasOwnProperty('validated') &&
                                bookingDetails.booking.validated != '1' &&
                                bookingDetails.booking.isValidationEnabled == '1') || Object.hasOwnProperty.call(bookingDetails, 'zone') && Object.hasOwnProperty.call(bookingDetails.zone, 'isLoyaltySupported') && bookingDetails.zone.isLoyaltySupported == '1' && bookingDetails.booking.validated != '1' && (bookingDetails.booking.TypeOfBooking == 'Guest' || bookingDetails.booking.TypeOfBooking == 'Transient' || bookingDetails.booking.TypeOfBooking == 'Self reservation')">
                            <hr style="color: black !important;">
                            <v-card flat color="#ececec" class="ma-0 rounded-lg" tile max-width="100%">
                                <v-card-text class="mb-0">
                                    <v-row class="text-center pt-0" no-gutters>
                                        <v-col cols="12" class="pa-0">
                                            <p style="font-size: 15px;color: #F2555C;font-weight: bolder;">CLAIM
                                                YOUR PARKING DISCOUNT</p>
                                        </v-col>
                                        <v-col cols="12"
                                            v-if="Object.hasOwnProperty.call(bookingDetails, 'zone') && Object.hasOwnProperty.call(bookingDetails.zone, 'isLoyaltySupported') && bookingDetails.zone.isLoyaltySupported == '1' && bookingDetails.booking.validated != '1' && (bookingDetails.booking.TypeOfBooking == 'Guest' || bookingDetails.booking.TypeOfBooking == 'Transient' || bookingDetails.booking.TypeOfBooking == 'Self reservation')">
                                            <v-btn color="black" rounded class="pa-0 ma-0" width="230" height="50"
                                                elevation="20" @click="loyalty = true">
                                                <v-img src="../assets/newGoldenNugget.jpg"
                                                    style="border-radius: 1.2rem;" class max-width="230"
                                                    height="60"></v-img>
                                            </v-btn>
                                        </v-col>
                                    </v-row>
                                    <v-col cols="12" class="mt-1 px-4 text-center" v-show="bookingDetails.hasOwnProperty('booking') &&
                                        bookingDetails.booking.hasOwnProperty('validated') &&
                                        bookingDetails.booking.validated != '1' &&
                                        bookingDetails.booking.isValidationEnabled == '1'
                                        ">
                                        <v-btn rounded elevation="20" dense width="230" height="40px"
                                            style="font-size:15px"
                                            class="validate_btn white--text blue darken-2 no-upper-case px-4"
                                            @click="openValidationDialog()">Apply
                                            Your Validation</v-btn>
                                    </v-col>
                                </v-card-text>
                            </v-card>
                        </v-col>
                    </v-container>
                </v-card-actions>
                <!-- <v-row v-if="showPaymentCardAdded">
            <v-col>
              <v-icon
                x-small
                color="green"
                class="px-4"
                dark
                @click="navigateToCheckOut"
              >mdi-exit-to-app</v-icon>
            </v-col>
          </v-row>-->
                <!-- </v-responsive> -->
            </v-card>
        </v-col>
    </v-row>
    <v-dialog v-model="alertDialog" persistent max-width="290">
        <v-card class="pa-0">
            <v-card-title class="justify-center" style="position: relative">
                <v-icon x-large color="green accent-2">{{ alertIcon }}</v-icon>
            </v-card-title>
            <v-card-text class="text-center mt-5">
                <span style="font-size: 20px">{{ alertMsg }}</span>
            </v-card-text>
            <v-card-actions class="text-center pb-6">
                <v-container pa-0 fluid>
                    <v-row no-gutters>
                        <v-col cols="12">
                            <v-btn rounded block elevation="0" class="white--text exit_dialog_btn"
                                @click="closeAlertDialog()">Close</v-btn>
                        </v-col>
                    </v-row>
                </v-container>
            </v-card-actions>
        </v-card>
    </v-dialog>
    <v-dialog v-model="loyalty" width="750px">
        <v-card>
            <v-row no-gutters style="background-color: black;" class="text-center">
                <v-col class="text-center pt-1 ">
                    <img src="../assets/GNLoyalty.png" width="200px" height="65px">
                </v-col>
            </v-row>
            <v-card-text>
                <v-row no-gutters class="mt-4">
                    <v-col>
                        <p style="font-size:large;color: black;">Enter the 24K Select number found on your Loyalty Card
                        </p>
                    </v-col>
                </v-row>
                <v-row no-gutters class="mt-2">
                    <v-col>
                        <v-text-field label="24K Select Number" outlined v-model="loyalty24knum"
                            @keyup="loyaltyValid"></v-text-field>
                    </v-col>
                </v-row>
                <v-row no-gutters class="mt-2 text-center">
                    <v-col>
                        <v-btn color="#F2555C" width="180" rounded class="white--text" :disabled="disableLoyalty"
                            @click="submitLoyalty(loyalty24knum)">Submit</v-btn>
                    </v-col>
                </v-row>
            </v-card-text>
        </v-card>
    </v-dialog>
    <v-dialog v-model="qrCodeDialog" width="fit-content" persistent>
        <v-card>
            <v-card-title>
                <v-spacer></v-spacer>
                <v-icon @click="closeQRCodeDialog()">mdi-close</v-icon>
            </v-card-title>
            <v-card-text class="pa-1">
                <qr-code-scanner :scan="'sms'" v-bind:qrbox="250" v-bind:fps="30"
                    :cameraStatus="cameraStatus"></qr-code-scanner>
                <v-progress-circular v-if="!cameraStatus" class="validation-pending" indeterminate
                    color="red"></v-progress-circular>
            </v-card-text>
            <v-card-actions>
                <v-container class="pa-0" fluid>
                    <v-row no-gutters>
                        <v-col cols="7">
                            <p class="grey--text font-weight-bold qr_text mr-4">Scan the QR code affixed to exit the
                                gate</p>
                        </v-col>
                        <v-spacer></v-spacer>
                        <v-img src="../assets/qr-code.png" style="opacity: 0.7" max-width="52"></v-img>
                    </v-row>
                </v-container>
            </v-card-actions>
        </v-card>
    </v-dialog>
    <div>
        <v-dialog v-model="smsDialog" width="fit-content">
            <v-card class="pa-0" ref="smscontainer">
                <v-card-title class="justify-center" style="position: relative">
                    <v-btn class elevation="0" color="white" dark fab x-large>
                        <v-icon x-large color="red accent-2">mdi-message-text</v-icon>
                    </v-btn>
                </v-card-title>
                <v-card-text class="pa-0">
                    <v-container class="px-4" fluid>
                        <v-row no-gutters>
                            <v-col cols="12" class="text-left">
                                <p class="color-black" style="font-size: 24px; line-height: 35px">Enter the gate code
                                    shown in the
                                    lane to exit.</p>
                                <!-- <p class="sms-caption color-black">
                    We'll copy the code into a text message for you. You'll need
                    to tap send on the message to open the gate.
                  </p>-->
                            </v-col>
                            <v-col cols="12" class="mt-2">
                                <v-text-field class="sms-input" color="red" v-model="smsText" outlined label="Gate code"
                                    maxlength="6" type="tel" autofocus v-on:keyup.enter="openSMSApp()"
                                    @focus="scrollToSubmit()" @mouseup="scrollToSubmit()" @keydown="scrollToSubmit()"
                                    clearable height="80px"></v-text-field>
                            </v-col>
                        </v-row>
                    </v-container>
                    <v-progress-circular v-if="smsPending" class="validation-pending" indeterminate
                        color="red"></v-progress-circular>
                </v-card-text>
                <v-card-actions class="text-center">
                    <v-container pa-0 fluid>
                        <v-row no-gutters>
                            <v-col cols="12">
                                <v-btn id="submitsmsbtn" rounded block elevation="20"
                                    :disabled="smsText == '' || smsPending" class="white--text exit_dialog_btn"
                                    @click="openSMSApp()">SUBMIT</v-btn>
                            </v-col>
                            <v-col cols="12" class="mt-2">
                                <p style="cursor: pointer" @click="smsDialog = false">
                                    Close
                                </p>
                            </v-col>
                        </v-row>
                    </v-container>
                </v-card-actions>
            </v-card>
        </v-dialog>
    </div>
    <div>
        <v-dialog v-model="validateQRCodeDialog" width="fit-content" persistent>
            <v-card>
                <v-card-title>
                    <v-spacer></v-spacer>
                    <v-icon @click="closeValidationQRDialog()">mdi-close</v-icon>
                </v-card-title>
                <v-card-text class="pa-1">
                    <validation-qr-code-scanner :scan="'validationCode'" v-bind:qrbox="250" v-bind:fps="30"
                        :cameraStatus="validationCameraStatus"></validation-qr-code-scanner>
                    <v-progress-circular v-if="!validationCameraStatus" class="validation-pending" indeterminate
                        color="red"></v-progress-circular>
                </v-card-text>
                <v-card-actions>
                    <v-container class="pa-0" fluid>
                        <v-row no-gutters>
                            <v-col cols="7">
                                <p class="grey--text font-weight-bold qr_text mr-4">Please scan the validation QR code
                                </p>
                            </v-col>
                            <v-spacer></v-spacer>
                            <v-img src="../assets/qr-code.png" style="opacity: 0.7" max-width="52"></v-img>
                        </v-row>
                    </v-container>
                </v-card-actions>
            </v-card>
        </v-dialog>
    </div>
    <div>
        <v-dialog v-model="validateBookingDialog" width="fit-content">
            <v-card class="pa-0" ref="validatecontainer">
                <v-card-title class="justify-center" style="position: relative">
                    <v-btn class elevation="0" color="white" dark fab large>
                        <v-icon x-large color="red accent-2">mdi-ticket-percent</v-icon>
                    </v-btn>
                </v-card-title>
                <v-card-text class="pa-0">
                    <v-container class="px-4 py-0" fluid>
                        <v-row no-gutters>
                            <v-col cols="12" class="text-left">
                                <p class="color-black text-center" style="font-size: 24px; line-height: 35px">
                                    If the Merchant provided you a validation code, you may scan
                                    it or enter it here.
                                </p>
                            </v-col>
                            <v-col cols="12">
                                <v-btn rounded block elevation="20" class="white--text exit_dialog_btn"
                                    @click="openScanValidationCode()">Scan Validation Code</v-btn>
                            </v-col>
                            <v-col cols="12" class="text-left mt-4">
                                <p class="color-black" style="font-size: 24px; line-height: 35px">or enter it below</p>
                            </v-col>
                            <v-col cols="12">
                                <v-text-field class="sms-input" color="red" v-model="validateBookingTxt" outlined
                                    label="Validation code" hide-details="auto" v-on:keyup.enter="validateBooking()"
                                    @focus="scrollToValidateBtn()" @mouseup="scrollToValidateBtn()"
                                    @keydown="scrollToValidateBtn()" clearable height="80px"></v-text-field>
                            </v-col>
                        </v-row>
                    </v-container>
                    <v-progress-circular v-if="validateBookingPending" class="validation-pending" indeterminate
                        color="red"></v-progress-circular>
                </v-card-text>
                <v-card-actions class="text-center">
                    <v-container pa-0 fluid>
                        <v-row no-gutters>
                            <v-col cols="12">
                                <v-btn id="validatebookingbtn" rounded block elevation="20" :disabled="validateBookingTxt == '' ||
                                    validateBookingTxt == null ||
                                    validateBookingPending
                                    " class="white--text exit_dialog_btn" @click="onValidateText()">SUBMIT</v-btn>
                            </v-col>
                            <v-col cols="12" class="mt-2">
                                <p style="cursor: pointer" @click="validateBookingDialog = false">
                                    Close
                                </p>
                            </v-col>
                        </v-row>
                    </v-container>
                </v-card-actions>
            </v-card>
        </v-dialog>
    </div>
    <div>
        <v-dialog v-model="dialerDialog" width="fit-content">
            <v-card class="pa-0">
                <v-card-title class="justify-center" style="position: relative">
                    <v-btn class elevation="0" color="white" dark fab x-large>
                        <v-icon x-large color="red accent-2">mdi-phone-in-talk</v-icon>
                    </v-btn>
                </v-card-title>
                <v-card-text class="pa-0">
                    <v-container class="px-4" fluid>
                        <v-row no-gutters>
                            <v-col cols="12" class="text-left">
                                <p class="color-black" style="font-size: 24px; line-height: 35px">
                                    Tap to call the gate. When prompted, enter the gate code
                                    shown in the lane to exit.
                                </p>
                            </v-col>
                        </v-row>
                    </v-container>
                </v-card-text>
                <v-card-actions class="text-center">
                    <v-container pa-0 fluid>
                        <v-row no-gutters>
                            <v-col cols="12">
                                <v-btn rounded block elevation="20" class="white--text exit_dialog_btn"
                                    @click="openDialerApp">CALL
                                    GATE</v-btn>
                            </v-col>
                            <v-col cols="12" class="mt-2">
                                <p style="cursor: pointer" @click="dialerDialog = false">
                                    Close
                                </p>
                            </v-col>
                        </v-row>
                    </v-container>
                </v-card-actions>
            </v-card>
        </v-dialog>
    </div>
    <v-dialog v-model="extensionDialog">
        <v-card class="pa-0">
            <v-card-title></v-card-title>
            <v-card-text class="pa-0">
                <v-row class="text-center mt-3" no-gutters>
                    <v-col>
                        <p class="black--text" style="font-weight:bold">Choose Date <span
                                v-if="Object.hasOwnProperty.call(bookingDetails, 'zone') && Object.hasOwnProperty.call(bookingDetails.zone, 'timePickerConfiguration') && this.bookingDetails.zone.timePickerConfiguration == '1' && bookingDetails.zone.isPQREndReservation == 1">and
                                Time</span></p>
                        <p>Expires at {{ countDownExitTime }}</p>
                    </v-col>
                </v-row>
                <v-row no-gutters>
                    <v-col cols="1" class="text-right align-self-center py-5">
                        <v-icon class="material-icons-outlined">calendar_month</v-icon>
                    </v-col>
                    <v-col cols="11" class="px-2">
                        <v-text-field v-model="computedDateFormatted" @click="() => { openDatePicker = true }"
                            hide-details="auto" readonly></v-text-field>
                        <v-dialog v-model="openDatePicker" max-width="450px">
                            <v-card style="background-color: #F2555C;color: white;"><v-card-title>
                                    <v-row no-gutters>
                                        <v-col class="text-left" cols="12">
                                            <span style="font-size:15px;color: #fabbbe;">{{ time !== null && time !== ""
                                                ?
                                                formattedYear : "" }}</span>
                                        </v-col>
                                        <v-col>
                                            <span style="font-size:30px"> {{ time !== null && time !== "" ?
                                                formattedDateTime :
                                                ""
                                            }}</span>
                                        </v-col>
                                    </v-row>
                                </v-card-title></v-card>
                            <Calendar inline class="text-left" value :stepMinute="15" hourFormat="12" :minDate="minDate"
                                @date-select="onTimePickerChange" :maxDate="maxDate" v-model="time" />
                        </v-dialog>
                    </v-col>
                </v-row>

                <v-row no-gutters
                    v-if="Object.hasOwnProperty.call(bookingDetails, 'zone') && Object.hasOwnProperty.call(bookingDetails.zone, 'timePickerConfiguration') && bookingDetails.zone.timePickerConfiguration == '1'">
                    <v-col cols="1" class="text-right align-self-center">
                        <v-icon class="material-icons-outlined">schedule</v-icon>
                    </v-col>
                    <v-col cols="11" class="px-3">
                        <v-row>
                            <v-col>
                                <v-text-field v-model="formattedTime"
                                    @click="() => { openTimePicker = true; round(time) }" readonly></v-text-field>
                                <v-dialog v-model="openTimePicker" max-width="320px" class="pa-0"
                                    @click:outside="() => { setDefaultDate(); onTimePickerChange() }">
                                    <v-card><v-card-title style="background-color: #F2555C;color: white;">What time will
                                            you
                                            exit?</v-card-title>
                                        <Calendar inline show-time time-only class="text-left " value :stepMinute="15"
                                            selection-mode="single" hourFormat="12" :minDate="minDate"
                                            :maxDate="maxDate" v-model="time" />
                                    </v-card>

                                </v-dialog>
                            </v-col>
                        </v-row>
                    </v-col>
                </v-row>

                <v-container fluid pa-0>
                    <Estimate :singleQuotes="singleQuotes" :doubleQuotes="doubleQuotes" :estimate="estimate"
                        :formattedEntryDisplayTime="formattedEntryDisplayTime" :beforeEstimate="beforeEstimate"
                        :state="'20px'">
                    </Estimate>
                    <v-row no-gutters class="mt-3 pa-4">
                        <v-col>
                            <v-btn rounded elevation="20" :loading="extendBtnLoading"
                                class="add_licence_plate_btn white--text" @click="extendEDT()">Extend
                                Parking</v-btn>
                        </v-col>
                    </v-row>
                </v-container>
            </v-card-text>
        </v-card>
    </v-dialog>
    <v-dialog v-model="invalidQRDialog" persistent max-width="290">
        <v-card class="pa-0">
            <v-card-title class="justify-center" style="position: relative">
                <v-icon x-large color="red accent-2">mdi-alert-outline</v-icon>
            </v-card-title>
            <v-card-text class="text-center mt-5">
                <span style="font-size: 20px">{{ invalidQRMsg }}</span>
            </v-card-text>
            <v-card-actions class="text-center pb-6">
                <v-container pa-0 fluid>
                    <v-row no-gutters>
                        <v-col cols="12">
                            <v-btn rounded block elevation="20" class="white--text exit_dialog_btn"
                                @click="reScanQR()">Re-Scan
                                Code</v-btn>
                        </v-col>
                    </v-row>
                </v-container>
            </v-card-actions>
        </v-card>
    </v-dialog>
    <v-dialog v-model="invalidValidationQRDialog" persistent max-width="290">
        <v-card class="pa-0">
            <v-card-title class="justify-center" style="position: relative">
                <v-icon x-large color="red accent-2">mdi-alert-outline</v-icon>
            </v-card-title>
            <v-card-text class="text-center mt-5">
                <span style="font-size: 20px">{{ invalidValidationQRMsg }}</span>
            </v-card-text>
            <v-card-actions class="text-center pb-6">
                <v-container pa-0 fluid>
                    <v-row no-gutters>
                        <v-col cols="12">
                            <v-btn rounded block elevation="20" class="white--text exit_dialog_btn"
                                @click="reScanValidationQR()">Re-Scan Code</v-btn>
                        </v-col>
                    </v-row>
                </v-container>
            </v-card-actions>
        </v-card>
    </v-dialog>
    <v-dialog v-model="invalidSMSDialog" persistent max-width="290">
        <v-card class="pa-0">
            <v-card-title class="justify-center" style="position: relative">
                <v-icon x-large color="red accent-2">mdi-alert-outline</v-icon>
            </v-card-title>
            <v-card-text class="text-center mt-5">
                <span style="font-size: 20px">{{ invalidSMSMsg }}</span>
            </v-card-text>
            <v-card-actions class="text-center pb-6">
                <v-container pa-0 fluid>
                    <v-row no-gutters>
                        <v-col cols="12">
                            <v-btn rounded block elevation="20" class="white--text exit_dialog_btn"
                                @click="invalidSMSDialog = false">Re-Enter Code</v-btn>
                        </v-col>
                    </v-row>
                </v-container>
            </v-card-actions>
        </v-card>
    </v-dialog>

    <v-dialog v-model="pedestrianAccessDialog" persistent max-width="290">
        <v-card class="pa-0">
            <v-card-title class="justify-center" style="position: relative">
                <v-icon x-large color="red accent-2">mdi-alert-outline</v-icon>
            </v-card-title>
            <v-card-text class="text-center mt-5">
                <span style="font-size: 20px">{{ pedestrianAccessText }}</span>
            </v-card-text>
            <v-card-actions class="text-center pb-6">
                <v-container pa-0 fluid>
                    <v-row no-gutters>
                        <v-col cols="12">
                            <v-btn rounded block elevation="0" class="white--text exit_dialog_btn"
                                @click="pedestrianAccessDialog = false">Close</v-btn>
                        </v-col>
                    </v-row>
                </v-container>
            </v-card-actions>
        </v-card>
    </v-dialog>
</v-container>
"},null]}